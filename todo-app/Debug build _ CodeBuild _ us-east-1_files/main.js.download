(()=>{var e,t,o,i,a,n,r,s={48033:(e,t,o)=>{"use strict";o.d(t,{XM:()=>a,pI:()=>n});var i=o(96540);const a=i.createContext({locale:null,format:(e,t,o,i)=>i});function n(e){const{format:t}=(0,i.useContext)(a);return(o,i,a)=>t("@amzn/awsui-components-react",e,o,i,a)}},86968:(e,t,o)=>{"use strict";function i(e){const t=e.split("-");if(1===t.length)return[e];const o=[];for(let e=t.length;e>0;e--)o.push(t.slice(0,e).join("-"));return o}o.d(t,{r:()=>i})},75383:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>i});const i={"@amzn/awsui-components-react":{en:{"[charts]":{loadingText:[{type:0,value:"Loading chart"}],errorText:[{type:0,value:"The data couldn't be fetched. Try again later."}],recoveryText:[{type:0,value:"Retry"}],"i18nStrings.filterLabel":[{type:0,value:"Filter displayed data"}],"i18nStrings.filterPlaceholder":[{type:0,value:"Filter data"}],"i18nStrings.legendAriaLabel":[{type:0,value:"Legend"}],"i18nStrings.chartAriaRoleDescription":[{type:0,value:"Chart"}],"i18nStrings.xAxisAriaRoleDescription":[{type:0,value:"x-axis"}],"i18nStrings.yAxisAriaRoleDescription":[{type:0,value:"y-axis"}]},alert:{dismissAriaLabel:[{type:0,value:"Dismiss alert"}]},"annotation-context":{"i18nStrings.nextButtonText":[{type:0,value:"Next"}],"i18nStrings.previousButtonText":[{type:0,value:"Previous"}],"i18nStrings.finishButtonText":[{type:0,value:"Finish"}],"i18nStrings.labelDismissAnnotation":[{type:0,value:"Dismiss annotation"}],"i18nStrings.stepCounterText":[{type:0,value:"Step "},{type:1,value:"stepNumber"},{type:0,value:" of "},{type:1,value:"totalStepCount"}],"i18nStrings.taskTitle":[{type:0,value:"Task "},{type:1,value:"taskNumber"},{type:0,value:": "},{type:1,value:"taskTitle"}],"i18nStrings.labelHotspot":[{type:5,value:"openState",options:{true:{value:[{type:0,value:"Close annotation for step "},{type:1,value:"stepNumber"},{type:0,value:" of "},{type:1,value:"totalStepCount"}]},false:{value:[{type:0,value:"Open annotation for step "},{type:1,value:"stepNumber"},{type:0,value:" of "},{type:1,value:"totalStepCount"}]},other:{value:[]}}}]},"app-layout":{"ariaLabels.drawers":[{type:0,value:"Drawers"}],"ariaLabels.drawersOverflow":[{type:0,value:"Drawers overflow"}],"ariaLabels.drawersOverflowWithBadge":[{type:0,value:"Drawers overflow with badge"}],"ariaLabels.navigation":[{type:0,value:"Side navigation"}],"ariaLabels.navigationClose":[{type:0,value:"Close side navigation"}],"ariaLabels.navigationToggle":[{type:0,value:"Open side navigation"}],"ariaLabels.notifications":[{type:0,value:"Notifications"}],"ariaLabels.tools":[{type:0,value:"Help panel"}],"ariaLabels.toolsClose":[{type:0,value:"Close help panel"}],"ariaLabels.toolsToggle":[{type:0,value:"Open help panel"}]},"area-chart":{"i18nStrings.detailTotalLabel":[{type:0,value:"Total"}]},"attribute-editor":{removeButtonText:[{type:0,value:"Remove"}]},autosuggest:{errorIconAriaLabel:[{type:0,value:"Error"}],selectedAriaLabel:[{type:0,value:"Selected"}],enteredTextLabel:[{type:0,value:'Use: "'},{type:1,value:"value"},{type:0,value:'"'}],recoveryText:[{type:0,value:"Retry"}]},"breadcrumb-group":{expandAriaLabel:[{type:0,value:"Show path"}]},calendar:{nextMonthAriaLabel:[{type:0,value:"Next month"}],previousMonthAriaLabel:[{type:0,value:"Previous month"}],todayAriaLabel:[{type:0,value:"Today"}],"i18nStrings.nextYearAriaLabel":[{type:0,value:"Next year"}],"i18nStrings.previousYearAriaLabel":[{type:0,value:"Previous year"}],"i18nStrings.currentMonthAriaLabel":[{type:0,value:"Current month"}]},cards:{"ariaLabels.selectionGroupLabel":[{type:0,value:"Item selection"}]},"code-editor":{"i18nStrings.loadingState":[{type:0,value:"Loading code editor"}],"i18nStrings.errorState":[{type:0,value:"There was an error loading the code editor."}],"i18nStrings.errorStateRecovery":[{type:0,value:"Retry"}],"i18nStrings.editorGroupAriaLabel":[{type:0,value:"Code editor"}],"i18nStrings.statusBarGroupAriaLabel":[{type:0,value:"Status bar"}],"i18nStrings.cursorPosition":[{type:0,value:"Ln "},{type:1,value:"row"},{type:0,value:", Col "},{type:1,value:"column"}],"i18nStrings.errorsTab":[{type:0,value:"Errors"}],"i18nStrings.warningsTab":[{type:0,value:"Warnings"}],"i18nStrings.preferencesButtonAriaLabel":[{type:0,value:"Preferences"}],"i18nStrings.paneCloseButtonAriaLabel":[{type:0,value:"Close"}],"i18nStrings.preferencesModalHeader":[{type:0,value:"Preferences"}],"i18nStrings.preferencesModalCancel":[{type:0,value:"Cancel"}],"i18nStrings.preferencesModalConfirm":[{type:0,value:"Confirm"}],"i18nStrings.preferencesModalWrapLines":[{type:0,value:"Wrap lines"}],"i18nStrings.preferencesModalTheme":[{type:0,value:"Theme"}],"i18nStrings.preferencesModalLightThemes":[{type:0,value:"Light themes"}],"i18nStrings.preferencesModalDarkThemes":[{type:0,value:"Dark themes"}]},"collection-preferences":{title:[{type:0,value:"Preferences"}],confirmLabel:[{type:0,value:"Confirm"}],cancelLabel:[{type:0,value:"Cancel"}],"pageSizePreference.title":[{type:0,value:"Page size"}],"wrapLinesPreference.label":[{type:0,value:"Wrap lines"}],"wrapLinesPreference.description":[{type:0,value:"Select to see all the text and wrap the lines"}],"stripedRowsPreference.label":[{type:0,value:"Striped rows"}],"stripedRowsPreference.description":[{type:0,value:"Select to add alternating shaded rows"}],"contentDensityPreference.label":[{type:0,value:"Compact mode"}],"contentDensityPreference.description":[{type:0,value:"Select to display content in a denser, more compact mode"}],"contentDisplayPreference.title":[{type:0,value:"Column preferences"}],"contentDisplayPreference.description":[{type:0,value:"Customize the columns visibility and order."}],"contentDisplayPreference.dragHandleAriaLabel":[{type:0,value:"Drag handle"}],"contentDisplayPreference.dragHandleAriaDescription":[{type:0,value:"Use Space or Enter to activate drag for an item, then use the arrow keys to move the item's position. To complete the position move, use Space or Enter, or to discard the move, use Escape."}],"contentDisplayPreference.liveAnnouncementDndStarted":[{type:0,value:"Picked up item at position "},{type:1,value:"position"},{type:0,value:" of "},{type:1,value:"total"}],"contentDisplayPreference.liveAnnouncementDndDiscarded":[{type:0,value:"Reordering canceled"}],"contentDisplayPreference.liveAnnouncementDndItemReordered":[{type:5,value:"isInitialPosition",options:{true:{value:[{type:0,value:"Moving item back to position "},{type:1,value:"currentPosition"},{type:0,value:" of "},{type:1,value:"total"}]},false:{value:[{type:0,value:"Moving item to position "},{type:1,value:"currentPosition"},{type:0,value:" of "},{type:1,value:"total"}]},other:{value:[]}}}],"contentDisplayPreference.liveAnnouncementDndItemCommitted":[{type:5,value:"isInitialPosition",options:{true:{value:[{type:0,value:"Item moved back to its original position "},{type:1,value:"initialPosition"},{type:0,value:" of "},{type:1,value:"total"}]},false:{value:[{type:0,value:"Item moved from position "},{type:1,value:"initialPosition"},{type:0,value:" to position "},{type:1,value:"finalPosition"},{type:0,value:" of "},{type:1,value:"total"}]},other:{value:[]}}}]},"copy-to-clipboard":{"i18nStrings.copyButtonText":[{type:0,value:"Copy"}]},"date-range-picker":{"i18nStrings.relativeModeTitle":[{type:0,value:"Relative mode"}],"i18nStrings.absoluteModeTitle":[{type:0,value:"Absolute mode"}],"i18nStrings.relativeRangeSelectionHeading":[{type:0,value:"Choose a range"}],"i18nStrings.cancelButtonLabel":[{type:0,value:"Cancel"}],"i18nStrings.clearButtonLabel":[{type:0,value:"Clear and dismiss"}],"i18nStrings.applyButtonLabel":[{type:0,value:"Apply"}],"i18nStrings.customRelativeRangeOptionLabel":[{type:0,value:"Custom range"}],"i18nStrings.customRelativeRangeOptionDescription":[{type:0,value:"Set a custom range in the past"}],"i18nStrings.customRelativeRangeUnitLabel":[{type:0,value:"Unit of time"}],"i18nStrings.customRelativeRangeDurationLabel":[{type:0,value:"Duration"}],"i18nStrings.customRelativeRangeDurationPlaceholder":[{type:0,value:"Enter a duration"}],"i18nStrings.startDateLabel":[{type:0,value:"Start date"}],"i18nStrings.startTimeLabel":[{type:0,value:"Start time"}],"i18nStrings.endDateLabel":[{type:0,value:"End date"}],"i18nStrings.endTimeLabel":[{type:0,value:"End time"}],"i18nStrings.dateTimeConstraintText":[{type:0,value:"For date, use YYYY/MM/DD. For time, use 24 hr format."}],"i18nStrings.errorIconAriaLabel":[{type:0,value:"Error"}],"i18nStrings.renderSelectedAbsoluteRangeAriaLive":[{type:0,value:"Range selected from "},{type:1,value:"startDate"},{type:0,value:" to "},{type:1,value:"endDate"}],"i18nStrings.formatRelativeRange":[{type:5,value:"unit",options:{second:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" seconds"}]},one:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" second"}]},other:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" seconds"}]}},offset:0,pluralType:"cardinal"}]},minute:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" minutes"}]},one:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" minute"}]},other:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" minutes"}]}},offset:0,pluralType:"cardinal"}]},hour:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" hours"}]},one:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" hour"}]},other:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" hours"}]}},offset:0,pluralType:"cardinal"}]},day:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" days"}]},one:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" day"}]},other:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" days"}]}},offset:0,pluralType:"cardinal"}]},week:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" weeks"}]},one:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" week"}]},other:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" weeks"}]}},offset:0,pluralType:"cardinal"}]},month:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" months"}]},one:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" month"}]},other:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" months"}]}},offset:0,pluralType:"cardinal"}]},year:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" years"}]},one:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" year"}]},other:{value:[{type:0,value:"Last "},{type:1,value:"amount"},{type:0,value:" years"}]}},offset:0,pluralType:"cardinal"}]},other:{value:[]}}}],"i18nStrings.formatUnit":[{type:5,value:"unit",options:{second:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"seconds"}]},one:{value:[{type:0,value:"second"}]},other:{value:[{type:0,value:"seconds"}]}},offset:0,pluralType:"cardinal"}]},minute:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"minutes"}]},one:{value:[{type:0,value:"minute"}]},other:{value:[{type:0,value:"minutes"}]}},offset:0,pluralType:"cardinal"}]},hour:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"hours"}]},one:{value:[{type:0,value:"hour"}]},other:{value:[{type:0,value:"hours"}]}},offset:0,pluralType:"cardinal"}]},day:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"days"}]},one:{value:[{type:0,value:"day"}]},other:{value:[{type:0,value:"days"}]}},offset:0,pluralType:"cardinal"}]},week:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"weeks"}]},one:{value:[{type:0,value:"week"}]},other:{value:[{type:0,value:"weeks"}]}},offset:0,pluralType:"cardinal"}]},month:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"months"}]},one:{value:[{type:0,value:"month"}]},other:{value:[{type:0,value:"months"}]}},offset:0,pluralType:"cardinal"}]},year:{value:[{type:6,value:"amount",options:{zero:{value:[{type:0,value:"years"}]},one:{value:[{type:0,value:"year"}]},other:{value:[{type:0,value:"years"}]}},offset:0,pluralType:"cardinal"}]},other:{value:[]}}}]},drawer:{"i18nStrings.loadingText":[{type:0,value:"Loading content"}]},flashbar:{"i18nStrings.ariaLabel":[{type:0,value:"Notifications"}],"i18nStrings.errorIconAriaLabel":[{type:0,value:"Error"}],"i18nStrings.inProgressIconAriaLabel":[{type:0,value:"In progress"}],"i18nStrings.infoIconAriaLabel":[{type:0,value:"Info"}],"i18nStrings.notificationBarAriaLabel":[{type:0,value:"All notifications"}],"i18nStrings.notificationBarText":[{type:0,value:"Notifications"}],"i18nStrings.successIconAriaLabel":[{type:0,value:"Success"}],"i18nStrings.warningIconAriaLabel":[{type:0,value:"Warning"}]},"form-field":{"i18nStrings.errorIconAriaLabel":[{type:0,value:"Error"}],"i18nStrings.warningIconAriaLabel":[{type:0,value:"Warning"}]},form:{errorIconAriaLabel:[{type:0,value:"Error"}]},"help-panel":{loadingText:[{type:0,value:"Loading content"}]},input:{clearAriaLabel:[{type:0,value:"Clear"}]},link:{externalIconAriaLabel:[{type:0,value:"Opens in a new tab"}]},modal:{closeAriaLabel:[{type:0,value:"Close modal"}]},multiselect:{deselectAriaLabel:[{type:0,value:"Remove "},{type:1,value:"option__label"}]},pagination:{"ariaLabels.nextPageLabel":[{type:0,value:"Next page"}],"ariaLabels.pageLabel":[{type:0,value:"Page "},{type:1,value:"pageNumber"},{type:0,value:" of all pages"}],"ariaLabels.previousPageLabel":[{type:0,value:"Previous page"}]},"pie-chart":{"i18nStrings.detailsValue":[{type:0,value:"Value"}],"i18nStrings.detailsPercentage":[{type:0,value:"Percentage"}],"i18nStrings.chartAriaRoleDescription":[{type:0,value:"Pie chart"}],"i18nStrings.segmentAriaRoleDescription":[{type:0,value:"Segment"}]},popover:{dismissAriaLabel:[{type:0,value:"Close popover"}]},"property-filter":{"i18nStrings.allPropertiesLabel":[{type:0,value:"All properties"}],"i18nStrings.applyActionText":[{type:0,value:"Apply"}],"i18nStrings.cancelActionText":[{type:0,value:"Cancel"}],"i18nStrings.clearFiltersText":[{type:0,value:"Clear filters"}],"i18nStrings.editTokenHeader":[{type:0,value:"Edit filter"}],"i18nStrings.groupPropertiesText":[{type:0,value:"Properties"}],"i18nStrings.groupValuesText":[{type:0,value:"Values"}],"i18nStrings.operationAndText":[{type:0,value:"and"}],"i18nStrings.operationOrText":[{type:0,value:"or"}],"i18nStrings.operatorContainsText":[{type:0,value:"Contains"}],"i18nStrings.operatorDoesNotContainText":[{type:0,value:"Does not contain"}],"i18nStrings.operatorDoesNotEqualText":[{type:0,value:"Does not equal"}],"i18nStrings.operatorEqualsText":[{type:0,value:"Equals"}],"i18nStrings.operatorGreaterOrEqualText":[{type:0,value:"Greater than or equal"}],"i18nStrings.operatorGreaterText":[{type:0,value:"Greater than"}],"i18nStrings.operatorLessOrEqualText":[{type:0,value:"Less than or equal"}],"i18nStrings.operatorLessText":[{type:0,value:"Less than"}],"i18nStrings.operatorStartsWithText":[{type:0,value:"Starts with"}],"i18nStrings.operatorDoesNotStartWithText":[{type:0,value:"Does not start with"}],"i18nStrings.operatorText":[{type:0,value:"Operator"}],"i18nStrings.operatorsText":[{type:0,value:"Operators"}],"i18nStrings.propertyText":[{type:0,value:"Property"}],"i18nStrings.tokenLimitShowFewer":[{type:0,value:"Show fewer"}],"i18nStrings.tokenLimitShowMore":[{type:0,value:"Show more"}],"i18nStrings.valueText":[{type:0,value:"Value"}],"i18nStrings.removeTokenButtonAriaLabel":[{type:5,value:"token__operator",options:{equals:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" equals "},{type:1,value:"token__value"}]},not_equals:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" does not equal "},{type:1,value:"token__value"}]},greater_than:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" is greater than "},{type:1,value:"token__value"}]},greater_than_equal:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" is greater than or equal to "},{type:1,value:"token__value"}]},less_than:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" is less than "},{type:1,value:"token__value"}]},less_than_equal:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" is less than or equal to "},{type:1,value:"token__value"}]},contains:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" contains "},{type:1,value:"token__value"}]},not_contains:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" does not contain "},{type:1,value:"token__value"}]},starts_with:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" starts with "},{type:1,value:"token__value"}]},not_starts_with:{value:[{type:0,value:"Remove filter, "},{type:1,value:"token__propertyKey"},{type:0,value:" does not start with "},{type:1,value:"token__value"}]},other:{value:[]}}}]},"s3-resource-selector":{"i18nStrings.inContextSelectPlaceholder":[{type:0,value:"Choose a version"}],"i18nStrings.inContextBrowseButton":[{type:0,value:"Browse S3"}],"i18nStrings.inContextViewButton":[{type:0,value:"View"}],"i18nStrings.inContextViewButtonAriaLabel":[{type:0,value:"View (opens in a new tab)"}],"i18nStrings.inContextLoadingText":[{type:0,value:"Loading resource"}],"i18nStrings.inContextUriLabel":[{type:0,value:"S3 URI"}],"i18nStrings.inContextVersionSelectLabel":[{type:0,value:"Object version"}],"i18nStrings.modalTitle":[{type:0,value:"Choose an object in S3"}],"i18nStrings.modalCancelButton":[{type:0,value:"Cancel"}],"i18nStrings.modalSubmitButton":[{type:0,value:"Choose"}],"i18nStrings.modalBreadcrumbRootItem":[{type:0,value:"S3 buckets"}],"i18nStrings.selectionBuckets":[{type:0,value:"Buckets"}],"i18nStrings.selectionObjects":[{type:0,value:"Objects"}],"i18nStrings.selectionVersions":[{type:0,value:"Versions"}],"i18nStrings.selectionBucketsSearchPlaceholder":[{type:0,value:"Find bucket"}],"i18nStrings.selectionObjectsSearchPlaceholder":[{type:0,value:"Find object by prefix"}],"i18nStrings.selectionVersionsSearchPlaceholder":[{type:0,value:"Find version"}],"i18nStrings.selectionBucketsLoading":[{type:0,value:"Loading buckets"}],"i18nStrings.selectionBucketsNoItems":[{type:0,value:"No buckets"}],"i18nStrings.selectionObjectsLoading":[{type:0,value:"Loading objects"}],"i18nStrings.selectionObjectsNoItems":[{type:0,value:"No objects"}],"i18nStrings.selectionVersionsLoading":[{type:0,value:"Loading versions"}],"i18nStrings.selectionVersionsNoItems":[{type:0,value:"No versions"}],"i18nStrings.filteringNoMatches":[{type:0,value:"No matches"}],"i18nStrings.filteringCantFindMatch":[{type:0,value:"We can't find a match."}],"i18nStrings.clearFilterButtonText":[{type:0,value:"Clear filter"}],"i18nStrings.columnBucketID":[{type:0,value:"ID"}],"i18nStrings.columnBucketName":[{type:0,value:"Name"}],"i18nStrings.columnBucketCreationDate":[{type:0,value:"Creation date"}],"i18nStrings.columnBucketRegion":[{type:0,value:"Region"}],"i18nStrings.columnObjectKey":[{type:0,value:"Key"}],"i18nStrings.columnObjectLastModified":[{type:0,value:"Last modified"}],"i18nStrings.columnObjectSize":[{type:0,value:"Size"}],"i18nStrings.columnVersionID":[{type:0,value:"Version ID"}],"i18nStrings.columnVersionLastModified":[{type:0,value:"Last modified"}],"i18nStrings.columnVersionSize":[{type:0,value:"Size"}],"i18nStrings.validationPathMustBegin":[{type:0,value:"The path must begin with s3:// to be valid."}],"i18nStrings.validationBucketLowerCase":[{type:0,value:"The bucket name must start with a lowercase character or number."}],"i18nStrings.validationBucketMustNotContain":[{type:0,value:"The bucket name must not contain uppercase characters."}],"i18nStrings.validationBucketLength":[{type:0,value:"The bucket name must be from 3 to 63 characters."}],"i18nStrings.validationBucketMustComplyDns":[{type:0,value:"The bucket name must comply with DNS naming conventions."}],"i18nStrings.labelSortedDescending":[{type:1,value:"columnName"},{type:0,value:", sorted descending"}],"i18nStrings.labelSortedAscending":[{type:1,value:"columnName"},{type:0,value:", sorted ascending"}],"i18nStrings.labelNotSorted":[{type:1,value:"columnName"},{type:0,value:", not sorted"}],"i18nStrings.labelsBucketsSelection.selectionGroupLabel":[{type:0,value:"Buckets"}],"i18nStrings.labelsBucketsSelection.itemSelectionLabel":[{type:1,value:"item__Name"}],"i18nStrings.labelsObjectsSelection.selectionGroupLabel":[{type:0,value:"Objects"}],"i18nStrings.labelsObjectsSelection.itemSelectionLabel":[{type:1,value:"item__Key"}],"i18nStrings.labelsVersionsSelection.selectionGroupLabel":[{type:0,value:"Versions"}],"i18nStrings.labelsVersionsSelection.itemSelectionLabel":[{type:1,value:"item__VersionId"}],"i18nStrings.labelFiltering":[{type:0,value:"Find "},{type:1,value:"itemsType"}],"i18nStrings.labelRefresh":[{type:0,value:"Refresh the data"}],"i18nStrings.labelBreadcrumbs":[{type:0,value:"S3 navigation"}],"i18nStrings.filteringCounterText":[{type:6,value:"count",options:{one:{value:[{type:0,value:"1 match"}]},other:{value:[{type:1,value:"count"},{type:0,value:" matches"}]}},offset:0,pluralType:"cardinal"}]},select:{errorIconAriaLabel:[{type:0,value:"Error"}],selectedAriaLabel:[{type:0,value:"Selected"}],recoveryText:[{type:0,value:"Retry"}]},slider:{"i18nStrings.valueTextRange":[{type:1,value:"value"},{type:0,value:", between "},{type:1,value:"previousValue"},{type:0,value:" and "},{type:1,value:"nextValue"}]},"split-panel":{"i18nStrings.closeButtonAriaLabel":[{type:0,value:"Close panel"}],"i18nStrings.openButtonAriaLabel":[{type:0,value:"Open panel"}],"i18nStrings.preferencesTitle":[{type:0,value:"Split panel preferences"}],"i18nStrings.preferencesPositionLabel":[{type:0,value:"Split panel position"}],"i18nStrings.preferencesPositionDescription":[{type:0,value:"Choose the default split panel position for the service."}],"i18nStrings.preferencesPositionSide":[{type:0,value:"Side"}],"i18nStrings.preferencesPositionBottom":[{type:0,value:"Bottom"}],"i18nStrings.preferencesConfirm":[{type:0,value:"Confirm"}],"i18nStrings.preferencesCancel":[{type:0,value:"Cancel"}],"i18nStrings.resizeHandleAriaLabel":[{type:0,value:"Resize split panel"}]},table:{"ariaLabels.resizerRoleDescription":[{type:0,value:"resize button"}],"ariaLabels.submittingEditText":[{type:0,value:"Submitting edit"}],"ariaLabels.successfulEditLabel":[{type:0,value:"Edit successful"}],"ariaLabels.expandButtonLabel":[{type:0,value:"Expand"}],"ariaLabels.collapseButtonLabel":[{type:0,value:"Collapse"}],"columnDefinitions.editConfig.errorIconAriaLabel":[{type:0,value:"Error"}],"columnDefinitions.editConfig.editIconAriaLabel":[{type:0,value:"editable"}]},tabs:{"i18nStrings.scrollLeftAriaLabel":[{type:0,value:"Scroll left"}],"i18nStrings.scrollRightAriaLabel":[{type:0,value:"Scroll right"}],"i18nStrings.tabsWithActionsAriaRoleDescription":[{type:0,value:"Tabs with actions"}]},"tag-editor":{"i18nStrings.keyPlaceholder":[{type:0,value:"Enter key"}],"i18nStrings.valuePlaceholder":[{type:0,value:"Enter value"}],"i18nStrings.addButton":[{type:0,value:"Add new tag"}],"i18nStrings.removeButton":[{type:0,value:"Remove"}],"i18nStrings.removeButtonAriaLabel":[{type:0,value:"Remove "},{type:1,value:"tag__key"}],"i18nStrings.undoButton":[{type:0,value:"Undo"}],"i18nStrings.undoPrompt":[{type:0,value:"This tag will be removed upon saving changes"}],"i18nStrings.loading":[{type:0,value:"Loading tags that are associated with this resource"}],"i18nStrings.keyHeader":[{type:0,value:"Key"}],"i18nStrings.valueHeader":[{type:0,value:"Value"}],"i18nStrings.optional":[{type:0,value:"optional"}],"i18nStrings.keySuggestion":[{type:0,value:"Custom tag key"}],"i18nStrings.valueSuggestion":[{type:0,value:"Custom tag value"}],"i18nStrings.emptyTags":[{type:0,value:"No tags associated with the resource."}],"i18nStrings.tooManyKeysSuggestion":[{type:0,value:"You have more keys than can be displayed"}],"i18nStrings.tooManyValuesSuggestion":[{type:0,value:"You have more values than can be displayed"}],"i18nStrings.keysSuggestionLoading":[{type:0,value:"Loading tag keys"}],"i18nStrings.keysSuggestionError":[{type:0,value:"Tag keys could not be retrieved"}],"i18nStrings.valuesSuggestionLoading":[{type:0,value:"Loading tag values"}],"i18nStrings.valuesSuggestionError":[{type:0,value:"Tag values could not be retrieved"}],"i18nStrings.emptyKeyError":[{type:0,value:"You must specify a tag key"}],"i18nStrings.maxKeyCharLengthError":[{type:0,value:"The maximum number of characters you can use in a tag key is 128."}],"i18nStrings.maxValueCharLengthError":[{type:0,value:"The maximum number of characters you can use in a tag value is 256."}],"i18nStrings.duplicateKeyError":[{type:0,value:"You must specify a unique tag key."}],"i18nStrings.invalidKeyError":[{type:0,value:"Invalid key. Keys can only contain Unicode letters, digits, white space and any of the following: _.:/=+@-"}],"i18nStrings.invalidValueError":[{type:0,value:"Invalid value. Values can only contain Unicode letters, digits, white space and any of the following: _.:/=+@-"}],"i18nStrings.awsPrefixError":[{type:0,value:"Cannot start with aws:"}],"i18nStrings.tagLimitReached":[{type:6,value:"tagLimit",options:{one:{value:[{type:0,value:"You have reached the limit of 1 tag."}]},other:{value:[{type:0,value:"You have reached the limit of "},{type:1,value:"tagLimit"},{type:0,value:" tags."}]}},offset:0,pluralType:"cardinal"}],"i18nStrings.tagLimitExceeded":[{type:6,value:"tagLimit",options:{one:{value:[{type:0,value:"You have exceeded the limit of 1 tag."}]},other:{value:[{type:0,value:"You have exceeded the limit of "},{type:1,value:"tagLimit"},{type:0,value:" tags."}]}},offset:0,pluralType:"cardinal"}],"i18nStrings.tagLimit":[{type:5,value:"tagLimitAvailable",options:{true:{value:[{type:6,value:"availableTags",options:{other:{value:[{type:0,value:"You can add up to "},{type:1,value:"tagLimit"},{type:0,value:" tags."}]}},offset:0,pluralType:"cardinal"}]},false:{value:[{type:6,value:"availableTags",options:{one:{value:[{type:0,value:"You can add up to 1 more tag."}]},other:{value:[{type:0,value:"You can add up to "},{type:1,value:"availableTags"},{type:0,value:" more tags."}]}},offset:0,pluralType:"cardinal"}]},other:{value:[]}}}]},"token-group":{"i18nStrings.limitShowFewer":[{type:0,value:"Show fewer"}],"i18nStrings.limitShowMore":[{type:0,value:"Show more"}]},"top-navigation":{"i18nStrings.searchIconAriaLabel":[{type:0,value:"Search"}],"i18nStrings.searchDismissIconAriaLabel":[{type:0,value:"Close search"}],"i18nStrings.overflowMenuTriggerText":[{type:0,value:"More"}],"i18nStrings.overflowMenuDismissIconAriaLabel":[{type:0,value:"Close menu"}],"i18nStrings.overflowMenuBackIconAriaLabel":[{type:0,value:"Back"}],"i18nStrings.overflowMenuTitleText":[{type:0,value:"All"}]},"tutorial-panel":{"i18nStrings.loadingText":[{type:0,value:"Loading"}],"i18nStrings.tutorialListTitle":[{type:0,value:"Choose a tutorial"}],"i18nStrings.tutorialListDownloadLinkText":[{type:0,value:"Download PDF version"}],"i18nStrings.labelTutorialListDownloadLink":[{type:0,value:"Download PDF version of this tutorial"}],"i18nStrings.tutorialCompletedText":[{type:0,value:"Tutorial completed"}],"i18nStrings.learnMoreLinkText":[{type:0,value:"Learn more"}],"i18nStrings.startTutorialButtonText":[{type:0,value:"Start tutorial"}],"i18nStrings.restartTutorialButtonText":[{type:0,value:"Restart tutorial"}],"i18nStrings.completionScreenTitle":[{type:0,value:"Congratulations! You completed the tutorial."}],"i18nStrings.feedbackLinkText":[{type:0,value:"Feedback"}],"i18nStrings.dismissTutorialButtonText":[{type:0,value:"Dismiss tutorial"}],"i18nStrings.taskTitle":[{type:0,value:"Task "},{type:1,value:"taskNumber"},{type:0,value:": "},{type:1,value:"taskTitle"}],"i18nStrings.stepTitle":[{type:0,value:"Step "},{type:1,value:"stepNumber"},{type:0,value:": "},{type:1,value:"stepTitle"}],"i18nStrings.labelExitTutorial":[{type:0,value:"Dismiss tutorial"}],"i18nStrings.labelTotalSteps":[{type:0,value:"Total steps: "},{type:1,value:"totalStepCount"}],"i18nStrings.labelsTaskStatus.pending":[{type:0,value:"Pending"}],"i18nStrings.labelsTaskStatus.in-progress":[{type:0,value:"In progress"}],"i18nStrings.labelsTaskStatus.success":[{type:0,value:"Success"}]},wizard:{"i18nStrings.stepNumberLabel":[{type:0,value:"Step "},{type:1,value:"stepNumber"}],"i18nStrings.collapsedStepsLabel":[{type:0,value:"Step "},{type:1,value:"stepNumber"},{type:0,value:" of "},{type:1,value:"stepsCount"}],"i18nStrings.skipToButtonLabel":[{type:0,value:"Skip to "},{type:1,value:"task__title"}],"i18nStrings.navigationAriaLabel":[{type:0,value:"Steps"}],"i18nStrings.cancelButton":[{type:0,value:"Cancel"}],"i18nStrings.previousButton":[{type:0,value:"Previous"}],"i18nStrings.nextButton":[{type:0,value:"Next"}],"i18nStrings.optional":[{type:0,value:"optional"}],"i18nStrings.nextButtonLoadingAnnouncement":[{type:0,value:"Loading next step"}],"i18nStrings.submitButtonLoadingAnnouncement":[{type:0,value:"Submitting form"}]}}}}},59930:(e,t,o)=>{var i={"./add-plus":83712,"./add-plus.js":83712,"./angle-down":3492,"./angle-down-double":73376,"./angle-down-double.js":73376,"./angle-down.js":3492,"./angle-left":50677,"./angle-left-double":28183,"./angle-left-double.js":28183,"./angle-left.js":50677,"./angle-right":22708,"./angle-right-double":95107,"./angle-right-double.js":95107,"./angle-right.js":22708,"./angle-up":33905,"./angle-up-double":10395,"./angle-up-double.js":10395,"./angle-up.js":33905,"./bug":74,"./bug.js":74,"./calendar":92e3,"./calendar.js":92e3,"./call":82950,"./call.js":82950,"./caret-down":96276,"./caret-down-filled":34621,"./caret-down-filled.js":34621,"./caret-down.js":96276,"./caret-left":76517,"./caret-left-filled":23522,"./caret-left-filled.js":23522,"./caret-left.js":76517,"./caret-right":56900,"./caret-right-filled":5069,"./caret-right-filled.js":5069,"./caret-right.js":56900,"./caret-up":83233,"./caret-up-filled":77606,"./caret-up-filled.js":77606,"./caret-up.js":83233,"./close":13196,"./close.js":13196,"./contact":89964,"./contact.js":89964,"./copy":32591,"./copy.js":32591,"./download":69206,"./download.js":69206,"./edit":11646,"./edit.js":11646,"./envelope":99850,"./envelope.js":99850,"./expand":98910,"./expand.js":98910,"./external":76033,"./external.js":76033,"./file":20124,"./file-open":60729,"./file-open.js":60729,"./file.js":20124,"./filter":64984,"./filter.js":64984,"./folder":34018,"./folder-open":82507,"./folder-open.js":82507,"./folder.js":34018,"./heart":92,"./heart.js":92,"./help":4577,"./help.js":4577,"./key":49831,"./key.js":49831,"./lock-private":5439,"./lock-private.js":5439,"./menu":3553,"./menu.js":3553,"./microphone":60582,"./microphone.js":60582,"./notification":60101,"./notification.js":60101,"./refresh":53919,"./refresh.js":53919,"./search":87638,"./search.js":87638,"./settings":9403,"./settings.js":9403,"./share":54443,"./share.js":54443,"./status-in-progress":26136,"./status-in-progress.js":26136,"./status-info":71477,"./status-info.js":71477,"./status-negative":6790,"./status-negative.js":6790,"./status-pending":46246,"./status-pending.js":46246,"./status-positive":93186,"./status-positive.js":93186,"./status-stopped":75972,"./status-stopped.js":75972,"./status-warning":2465,"./status-warning.js":2465,"./treeview-collapse":78719,"./treeview-collapse.js":78719,"./treeview-expand":30192,"./treeview-expand.js":30192,"./undo":25072,"./undo.js":25072,"./unlocked":43495,"./unlocked.js":43495,"./upload":62631,"./upload.js":62631,"./view-full":69505,"./view-full.js":69505,"./view-horizontal":79264,"./view-horizontal.js":79264,"./view-vertical":46718,"./view-vertical.js":46718,"./zoom-in":36117,"./zoom-in.js":36117,"./zoom-out":28872,"./zoom-out.js":28872};function a(e){var t=n(e);return o(t)}function n(e){if(!o.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}a.keys=function(){return Object.keys(i)},a.resolve=n,e.exports=a,a.id=59930},18735:(e,t,o)=>{"use strict";o.d(t,{I:()=>g,i:()=>y});var i=o(96540),a=o(17040),n=o(43630),r=o(2696),s=o(88576),c=o(18562),l=o(53118),d=o(93472),u=o(44649),p=o(81535);const m=e=>`CodeBuildDisconnectSourceCredentialModal-${e}`,h=e=>{switch(e){case u.SE.GITHUB:return(0,c.t)("codebuild:oauthSelector.disconnectModal.github.title");case u.SE.GITHUB_ENTERPRISE:return(0,c.t)("codebuild:oauthSelector.disconnectModal.githubEnterprise.title");case u.SE.BITBUCKET:return(0,c.t)("codebuild:oauthSelector.disconnectModal.bitbucket.title");default:return(0,s.A)()}},y=e=>{let{serverType:t,disconnectHandler:o}=e;const n=(0,a.wA)();return i.createElement(d.A,{id:m(t),header:h(t),confirmLabel:(0,c.t)("common:confirm"),onConfirm:()=>{o(),n((0,p.Iy)())}},i.createElement(r.A,{type:"warning"},(0,c.t)("codebuild:oauthSelector.disconnectModal.content")))},g=e=>{let{serverType:t}=e;return i.createElement(l.A,{modalId:m(t),render:e=>i.createElement(n.A,{onClick:t=>{e(),t.preventDefault(),t.stopPropagation()}},(e=>{switch(e){case u.SE.GITHUB:return(0,c.t)("codebuild:oauthSelector.disconnectButton.github");case u.SE.GITHUB_ENTERPRISE:return(0,c.t)("codebuild:githubEnterprise.disconnect.button");case u.SE.BITBUCKET:return(0,c.t)("codebuild:oauthSelector.disconnectButton.bitbucket");default:return(0,s.A)()}})(t))})}},24229:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>S,Rw:()=>f,WC:()=>C,ZH:()=>b,gy:()=>g});var i=o(96540),a=o(17040),n=o(86117),r=o(8211),s=o(70714),c=o(7474),l=o(78453),d=o(92695),u=o(53974),p=o(28217),m=o(18562),h=o(1484),y=o(89221);let g=function(e){return e.Enabled="ENABLED",e.Disabled="DISABLED",e}({});var E=function(e){return e.GroupName="groupName",e.StreamName="streamName",e}(E||{});const b=e=>e&&e.status===g.Enabled,C=(e,t)=>{var o;const i=`/aws/codebuild/${e}`;return b(t)?{groupName:null!==(o=null==t?void 0:t.groupName)&&void 0!==o?o:i,streamName:null==t?void 0:t.streamName}:void 0},f=e=>b(e)?(0,h.h)(e.location):void 0;class T extends i.Component{handleCWLogCheckboxUpdate=e=>{this.props.updateCWLogsConfig({status:e.detail.checked?g.Enabled:g.Disabled})};handleS3LogCheckboxUpdate=()=>{this.props.updateS3LogsConfig({status:b(this.props.logsConfig.s3Logs)?g.Disabled:g.Enabled})};handleCWLogConfigUpdate=e=>t=>{this.props.updateCWLogsConfig({...this.props.logsConfig.cloudWatchLogs,[e]:t.detail.value||void 0})};handleS3LogConfigUpdate=e=>this.props.updateLocation({...this.props.logsConfig.s3Logs,location:e});updateObjectKey=e=>t=>{let o="";return e&&(o=e),t&&(o=t===p.NI?`${o}`:`${o}/${t.trim()}`),this.handleS3LogConfigUpdate(o)};updateLogEncryption=e=>{this.props.updateS3LogsConfig({...this.props.logsConfig.s3Logs,encryptionDisabled:e.detail.checked})};getErrors=()=>({bucket:(0,h.h)(this.props.logsConfig.s3Logs&&this.props.logsConfig.s3Logs.location).bucket?void 0:(0,m.t)("codebuild:createProject.validation.bucketRequired")});render(){var e,t;const{logsConfig:o,showErrors:a,s3LogsBucket:p,s3LogsObjectKey:g,projectName:C}=this.props,{cloudWatchLogs:f,s3Logs:T}=o,S=(0,h.h)(T&&T.location).bucket;return i.createElement(i.Fragment,null,i.createElement(l.A,{direction:"vertical",size:"l"},i.createElement("h5",null,(0,m.t)("codebuild:logs.cwLogs.label.header")),i.createElement(r.A,{description:(0,m.t)("codebuild:logs.cwLogs.description.status"),checked:null!==(e=b(f))&&void 0!==e&&e,onChange:this.handleCWLogCheckboxUpdate},i.createElement(d.A,{i18nKey:"codebuild:logs.cwLogs.label.status",optional:!0})),b(f)&&i.createElement(i.Fragment,null,i.createElement(n.A,{label:i.createElement(d.A,{i18nKey:"codebuild:logs.cwLogs.label.groupName",optional:!0}),constraintText:(0,m.t)("codebuild:logs.cwLogs.description.groupName"),stretch:!0},i.createElement(s.A,{value:f&&f.groupName||"",placeholder:C?"aws/codebuild/"+C:"",onChange:this.handleCWLogConfigUpdate(E.GroupName)})),i.createElement(n.A,{label:i.createElement(d.A,{i18nKey:"codebuild:logs.cwLogs.label.streamName",optional:!0}),constraintText:(0,m.t)("codebuild:logs.cwLogs.description.streamName"),stretch:!0},i.createElement(s.A,{value:f&&f.streamName||"",onChange:this.handleCWLogConfigUpdate(E.StreamName)}))),i.createElement("h5",null,(0,m.t)("codebuild:logs.s3Logs.label.header")),i.createElement(r.A,{description:(0,m.t)("codebuild:logs.s3Logs.description.status"),checked:null!==(t=b(T))&&void 0!==t&&t,onChange:this.handleS3LogCheckboxUpdate},i.createElement(d.A,{i18nKey:"codebuild:logs.s3Logs.label.status",optional:!0})),b(T)&&i.createElement(l.A,{direction:"vertical",size:"l"},i.createElement(u.A,{bucket:p,objectKey:g,errors:this.getErrors(),showErrors:a,updateBucket:this.handleS3LogConfigUpdate,updateObjectKey:this.updateObjectKey(S),s3ObjectKeyLabel:i.createElement(d.A,{i18nKey:"codebuild:logs.s3Logs.label.objectKey"})}),(0,c.G7)(y.H.CodeBuildS3LogsEncryption)&&i.createElement(r.A,{checked:T&&T.encryptionDisabled||!1,onChange:this.updateLogEncryption},(0,m.t)("codebuild:logs.s3Logs.label.encryptionDisabled")))))}}const S=(0,a.Ng)(((e,t)=>({logsConfig:t.getLogsConfig(e),projectName:t.getProjectName(e),showErrors:t.showErrors(e),s3LogsBucket:t.getS3LogsBucket(e),s3LogsObjectKey:t.getS3LogsObjectKey(e)})),((e,t)=>({updateCWLogsConfig:o=>{e(t.updateCWLogsConfig(o))},updateS3LogsConfig:o=>{e(t.updateS3LogsConfig(o))},updateLocation:o=>{e(t.updateS3Location(o))}})))(T)},49348:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>y,fN:()=>p,g3:()=>u,gw:()=>m});var i=o(96540),a=o(17040),n=o(61947),r=o(68634),s=o(86281),c=o(44919),l=o(25915);function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var i in o)({}).hasOwnProperty.call(o,i)&&(e[i]=o[i])}return e},d.apply(null,arguments)}let u=function(e){return e.account="account",e.public="public",e.webhook="webhook",e}({});const p="CODEBUILD_ORG_WEBHOOK_SOURCE_LOCATION",m="CODEBUILD_DEFAULT_WEBHOOK_SOURCE_LOCATION";class h extends i.Component{constructor(e){super(e)}showDisconnectedChoice=()=>{const{serverType:e,sourceIndex:t}=this.props;return i.createElement(l.A,{serverType:e,sourceIndex:t})};render(){const{isConnected:e,serverType:t,sourceIndex:o}=this.props;return e?i.createElement(i.Fragment,{key:`codebuild.oauthSelector.connected.${t}`},i.createElement(s.Ay,d({},this.props,{supressListRepositories:!1})),i.createElement(r.A,null),i.createElement(c.A,{serverType:t})):i.createElement(l.A,{serverType:t,sourceIndex:o})}}const y=(0,a.Ng)(((e,t)=>{const{serverType:o}=t;return{isConnected:(0,n.dc)(e)[o].isConnected}}),(e=>({})))(h)},28217:(e,t,o)=>{"use strict";o.d(t,{$K:()=>j,Bm:()=>S,DX:()=>h,Gx:()=>ie,H0:()=>I,Hn:()=>ee,IF:()=>q,Is:()=>A,J3:()=>M,JO:()=>b,Jy:()=>E,KV:()=>x,Kc:()=>oe,Ko:()=>p,MJ:()=>J,MT:()=>l,NI:()=>G,Nk:()=>Y,OT:()=>de,OX:()=>K,PA:()=>ce,PT:()=>W,QE:()=>u,Tj:()=>v,V5:()=>P,Vt:()=>X,ZH:()=>O,Zh:()=>d,_H:()=>m,as:()=>F,br:()=>L,cT:()=>g,dk:()=>se,eW:()=>ae,fW:()=>R,fX:()=>D,hr:()=>T,ik:()=>U,ln:()=>y,ne:()=>te,ni:()=>re,ov:()=>w,pT:()=>N,rq:()=>Z,t1:()=>le,ts:()=>k,tw:()=>ne,v9:()=>z,wN:()=>B,wk:()=>H,zN:()=>f});var i=o(2543),a=o(7474),n=o(59759),r=o(65975),s=o(41583),c=o(89221);const l=100;let d=function(e){return e.codepipeline="codepipeline",e.codebuild="codebuild",e}({}),u=function(e){return e.BUILD_GENERAL1_SMALL="BUILD_GENERAL1_SMALL",e.BUILD_GENERAL1_MEDIUM="BUILD_GENERAL1_MEDIUM",e.BUILD_GENERAL1_LARGE="BUILD_GENERAL1_LARGE",e.BUILD_GENERAL1_XLARGE="BUILD_GENERAL1_XLARGE",e.BUILD_GENERAL1_2XLARGE="BUILD_GENERAL1_2XLARGE",e.BUILD_LAMBDA_1GB="BUILD_LAMBDA_1GB",e.BUILD_LAMBDA_2GB="BUILD_LAMBDA_2GB",e.BUILD_LAMBDA_4GB="BUILD_LAMBDA_4GB",e.BUILD_LAMBDA_8GB="BUILD_LAMBDA_8GB",e.BUILD_LAMBDA_10GB="BUILD_LAMBDA_10GB",e}({}),p=function(e){return e.NO_ARTIFACTS="NO_ARTIFACTS",e.S3="S3",e.CODEPIPELINE="CODEPIPELINE",e}({}),m=function(e){return e.SESSION_MANAGER="SESSION_MANAGER",e.NONE="NONE",e}({}),h=function(e){return e.COMBINE="COMBINE_ARTIFACTS",e.NONE="NONE",e}({}),y=function(e){return e.NONE="NONE",e.ZIP="ZIP",e}({}),g=function(e){return e.BASE_CODE_COMMIT_DEFAULT="CODE_BUILD_EZCRC_DEFAULT_CODE_COMMIT",e.BASE_CODE_COMMIT_NO_ARTIFACTS="CODE_BUILD_EZCRC_DEFAULT_CODE_COMMIT_WITHOUT_ARTIFACTS",e.BASE_CODE_CONNECTIONS_DEFAULT="CODE_BUILD_EZCRC_DEFAULT_CODE_CONNECTIONS",e.BASE_CODE_CONNECTIONS_NO_ARTIFACTS="CODE_BUILD_EZCRC_DEFAULT_CODE_CONNECTIONS_WITHOUT_ARTIFACTS",e.BASE_DEFAULT="CODE_BUILD_EZCRC_DEFAULT",e.BASE_NO_ARTIFACTS="CODE_BUILD_EZCRC_DEFAULT_WITHOUT_ARTIFACTS",e.S3_READONLY="CODE_BUILD_EZCRC_S3_READ",e.PARAMETER_STORE_ENV_VAR="CODE_BUILD_EZCRC_DEFAULT_WITH_PARAMETERS",e.ECR_REPOSITORY="CODE_BUILD_EZCRC_DEFAULT_ECR",e.REGISTRY_CREDENTIAL="CODE_BUILD_EZCRC_DEFAULT_PRIVATE_REGISTRY",e.SECRETS_MANAGER_SOURCE_CREDENTIAL="CODE_BUILD_EZCRC_DEFAULT_SECRETS_MANAGER",e.CACHE_DEFAULT="CODE_BUILD_EZCRC_DEFAULT_WITH_CACHE",e.VPC_DEFAULT="CODE_BUILD_EZCRC_DEFAULT_WITH_VPC",e.CLOUD_WATCH_LOGS="CODE_BUILD_EZCRC_DEFAULT_WITH_CLOUD_WATCH_LOGS",e.BUILD_BATCH="CODE_BUILD_EZCRC_DEFAULT_BUILD_BATCH",e.PUBLIC_BUILD_WITH_CLOUD_WATCH_LOGS="CODE_BUILD_EZCRC_DEFAULT_PUBLIC_BUILD_WITH_CLOUD_WATCH_LOGS",e.PUBLIC_BUILD_WITH_S3_ACCESS="CODE_BUILD_EZCRC_DEFAULT_PUBLIC_BUILD_WITH_S3_ACCESS",e.BASE_CODE_COMMIT_DEFAULT_WITH_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_CODE_COMMIT_WITH_SESSION_MANAGER",e.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_CODE_COMMIT_WITHOUT_ARTIFACTS_WITH_SESSION_MANAGER",e.BASE_CODE_CONNECTIONS_DEFAULT_WITH_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_CODE_CONNECTIONS_WITH_SESSION_MANAGER",e.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_CODE_CONNECTIONS_WITHOUT_ARTIFACTS_WITH_SESSION_MANAGER",e.BASE_DEFAULT_WITH_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_WITH_SESSION_MANAGER",e.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_WITHOUT_ARTIFACTS_WITH_SESSION_MANAGER",e.BASE_WITH_COMBINE_ARTIFACTS="CODE_BUILD_EZCRC_DEFAULT_COMBINE_ARTIFACTS",e.BASE_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_WITH_SESSION_MANAGER_COMBINE_ARTIFACTS",e.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS="CODE_BUILD_EZCRC_DEFAULT_CODE_COMMIT_COMBINE_ARTIFACTS",e.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_CODE_COMMIT_WITH_SESSION_MANAGER_COMBINE_ARTIFACTS",e.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS="CODE_BUILD_EZCRC_DEFAULT_CODE_CONNECTIONS_COMBINE_ARTIFACTS",e.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER="CODE_BUILD_EZCRC_DEFAULT_CODE_CONNECTIONS_WITH_SESSION_MANAGER_COMBINE_ARTIFACTS",e.BASE_CODE_BUILD_FLEET_EZCRC_DEFAULT_WITH_VPC="CODE_BUILD_FLEET_EZCRC_DEFAULT_WITH_VPC",e}({}),E=function(e){return e.AWS="us-east-1",e.AWS_CN="cn-north-1",e.AWS_GOV="us-gov-west-1",e}({});const b={[g.BASE_CODE_COMMIT_DEFAULT]:{[E.AWS]:6,[E.AWS_CN]:4,[E.AWS_GOV]:3},[g.BASE_CODE_COMMIT_NO_ARTIFACTS]:{[E.AWS]:6,[E.AWS_CN]:4,[E.AWS_GOV]:3},[g.BASE_DEFAULT]:{[E.AWS]:6,[E.AWS_CN]:4,[E.AWS_GOV]:3},[g.S3_READONLY]:{[E.AWS]:4,[E.AWS_CN]:2,[E.AWS_GOV]:1},[g.BASE_NO_ARTIFACTS]:{[E.AWS]:5,[E.AWS_CN]:4,[E.AWS_GOV]:3},[g.CACHE_DEFAULT]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:1},[g.BASE_CODE_COMMIT_DEFAULT_WITH_SESSION_MANAGER]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_DEFAULT_WITH_SESSION_MANAGER]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_WITH_COMBINE_ARTIFACTS]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER]:{[E.AWS]:2,[E.AWS_CN]:2,[E.AWS_GOV]:2},[g.BASE_CODE_CONNECTIONS_DEFAULT]:{[E.AWS]:4,[E.AWS_CN]:4,[E.AWS_GOV]:4},[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS]:{[E.AWS]:4,[E.AWS_CN]:4,[E.AWS_GOV]:4},[g.BASE_CODE_CONNECTIONS_DEFAULT_WITH_SESSION_MANAGER]:{[E.AWS]:4,[E.AWS_CN]:4,[E.AWS_GOV]:4},[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER]:{[E.AWS]:4,[E.AWS_CN]:4,[E.AWS_GOV]:4},[g.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS]:{[E.AWS]:4,[E.AWS_CN]:4,[E.AWS_GOV]:4},[g.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER]:{[E.AWS]:4,[E.AWS_CN]:4,[E.AWS_GOV]:4}},C=(0,r.T)(s.qD)||E.AWS,f={name:g.S3_READONLY,version:b[g.S3_READONLY][C]},T={name:g.PARAMETER_STORE_ENV_VAR,version:1},S={name:g.ECR_REPOSITORY,version:(0,a.G7)(c.H.CodeBuildECRPolicyUpdate)?2:1},v={name:g.REGISTRY_CREDENTIAL,version:2},A={name:(_=g.SECRETS_MANAGER_SOURCE_CREDENTIAL,(0,a.G7)(c.H.CodeBuildGammaEndpoint)?`${_}_PREPROD`:_),version:1};var _;const O={name:g.CLOUD_WATCH_LOGS,version:1},I={name:g.BUILD_BATCH,version:1},R={name:g.PUBLIC_BUILD_WITH_CLOUD_WATCH_LOGS,version:1},D={name:g.PUBLIC_BUILD_WITH_S3_ACCESS,version:1},N={[n.sO.codeCommit]:{[p.S3]:{[m.SESSION_MANAGER]:{name:g.BASE_CODE_COMMIT_DEFAULT_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_COMMIT_DEFAULT_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_CODE_COMMIT_DEFAULT,version:b[g.BASE_CODE_COMMIT_DEFAULT][C]},[h.COMBINE]:{name:g.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS,version:b[g.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER,version:b[g.BASE_CODE_COMMIT_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER][C]}},[p.NO_ARTIFACTS]:{[m.SESSION_MANAGER]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS][C]},[h.COMBINE]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]}},[p.CODEPIPELINE]:{[m.SESSION_MANAGER]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS][C]},[h.COMBINE]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_COMMIT_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]}}},[n.sO.gitLab]:{[p.S3]:{[m.SESSION_MANAGER]:{name:g.BASE_CODE_CONNECTIONS_DEFAULT_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_CONNECTIONS_DEFAULT_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_CODE_CONNECTIONS_DEFAULT,version:b[g.BASE_CODE_CONNECTIONS_DEFAULT][C]},[h.COMBINE]:{name:g.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS,version:b[g.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER,version:b[g.BASE_CODE_CONNECTIONS_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER][C]}},[p.NO_ARTIFACTS]:{[m.SESSION_MANAGER]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS][C]},[h.COMBINE]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]}},[p.CODEPIPELINE]:{[m.SESSION_MANAGER]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS][C]},[h.COMBINE]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_CODE_CONNECTIONS_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]}}},default:{[p.S3]:{[m.SESSION_MANAGER]:{name:g.BASE_DEFAULT_WITH_SESSION_MANAGER,version:b[g.BASE_DEFAULT_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_DEFAULT,version:b[g.BASE_DEFAULT][C]},[h.COMBINE]:{name:g.BASE_WITH_COMBINE_ARTIFACTS,version:b[g.BASE_WITH_COMBINE_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER,version:b[g.BASE_WITH_COMBINE_ARTIFACTS_AND_SESSION_MANAGER][C]}},[p.NO_ARTIFACTS]:{[m.SESSION_MANAGER]:{name:g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_NO_ARTIFACTS,version:b[g.BASE_NO_ARTIFACTS][C]},[h.COMBINE]:{name:g.BASE_NO_ARTIFACTS,version:b[g.BASE_NO_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]}},[p.CODEPIPELINE]:{[m.SESSION_MANAGER]:{name:g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]},[m.NONE]:{name:g.BASE_NO_ARTIFACTS,version:b[g.BASE_NO_ARTIFACTS][C]},[h.COMBINE]:{name:g.BASE_NO_ARTIFACTS,version:b[g.BASE_NO_ARTIFACTS][C]},[`${h.COMBINE}-${m.SESSION_MANAGER}`]:{name:g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER,version:b[g.BASE_NO_ARTIFACTS_WITH_SESSION_MANAGER][C]}}}};let P=function(e){return e.NONE="NONE",e.BUILD_ID="BUILD_ID",e}({}),L=function(e){return e.ON_DEMAND="ON_DEMAND",e.FLEET="FLEET",e}({}),w=function(e){return e.awsManaged="managed",e.customManaged="custom",e}({}),M=function(e){return e.servicePrincipal="CODEBUILD",e.projectRole="SERVICE_ROLE",e}({}),k=function(e){return e.secretsManager="SECRETS_MANAGER",e}({}),U=function(e){return e.origin="origin",e.overrideOneline="overrideOneline",e.overrideWithEditor="overrideWithEditor",e}({});const B="CodeBuild cache lifecycle",G="/";let W=function(e){return e.none="NO_CACHE",e.s3="S3",e.local="LOCAL",e}({}),x=function(e){return e.efs="EFS",e}({}),F=function(e){return e.ec2="EC2",e.lambda="Lambda",e}({});const j=e=>`version: 0.2\n\nphases:\n  build:\n    commands:\n       - ${e}\n`,H=e=>`version: 0.2\n\nphases:\n  build:\n    commands:\n      ${e?`- ${e}`:'# - echo "Hello World"'}`;let z=function(e){return e.AMAZON_LINUX="AMAZON_LINUX",e.AMAZON_LINUX_2="AMAZON_LINUX_2",e.UBUNTU="UBUNTU",e.WINDOWS="WINDOWS_SERVER",e.WINODWS_2019="WINDOWS_SERVER_2019",e.WINDOWS_2022="WINDOWS_SERVER_2022",e}({}),V=function(e){return e.AMAZON_LINUX="Amazon Linux",e.AMAZON_LINUX_2="Amazon Linux",e.UBUNTU="Ubuntu",e.WINDOWS_SERVER="Windows Server",e.WINDOWS_SERVER_2019="Windows Server 2019",e.WINDOWS_SERVER_2022="Windows Server 2022",e}({}),Y=function(e){return e.AMAZON_LINUX="AMAZON_LINUX_2",e.UBUNTU="UBUNTU",e.WINDOWS_SERVER_2019="WINDOWS_SERVER_2019",e.WINDOWS_SERVER_2022="WINDOWS_SERVER_2022",e}({}),$=function(e){return e.STANDARD="STANDARD",e.BASE="BASE",e.DOTNET="DOTNET",e.GOLANG="GOLANG",e.JAVA="JAVA",e.NODE_JS="NODE_JS",e.PYTHON="PYTHON",e.RUBY="RUBY",e}({});const q=new Map([[Y.AMAZON_LINUX,[$.STANDARD,new RegExp("aws/codebuild/amazonlinux2-x86_64-standard:([0-9]*).0")]],[Y.UBUNTU,[$.STANDARD,new RegExp("aws/codebuild/standard:([0-9]*).0")]],[Y.WINDOWS_SERVER_2019,[$.BASE,new RegExp("aws/codebuild/windows-base:2019-([0-9]*).0")]],[Y.WINDOWS_SERVER_2022,[$.BASE,new RegExp("aws/codebuild/windows-base:2022-([0-9]*).0")]],[F.lambda,[$.NODE_JS,new RegExp("aws/codebuild/amazonlinux-x86_64-lambda-standard:nodejs([0-9]*)")]]]);let K=function(e){return e.Arm="ARM_CONTAINER",e.ArmLambda="ARM_LAMBDA_CONTAINER",e.Linux="LINUX_CONTAINER",e.LinuxGpu="LINUX_GPU_CONTAINER",e.LinuxLambda="LINUX_LAMBDA_CONTAINER",e.Windows="WINDOWS_CONTAINER",e.Windows_2019="WINDOWS_SERVER_2019_CONTAINER",e.Windows_2022="WINDOWS_SERVER_2022_CONTAINER",e.MacArm="MAC_ARM",e}({}),J=function(e){return e.JAVA="JAVA",e.PYTHON="PYTHON",e.NODE_JS="NODE_JS",e.RUBY="RUBY",e.GOLANG="GOLANG",e.DOCKER="DOCKER",e.ANDROID="ANDROID",e.DOTNET="DOTNET",e.BASE="BASE",e.PHP="PHP",e}({});const Q={NODE_JS:"Node.js",LAMBDA_NODE_JS:"Lambda Node.js",LAMBDA_PYTHON:"Lambda Python",DOTNET:".NET Core",PHP:"PHP"};let X=function(e){return e.PROJECT_LEVEL="PROJECT_LEVEL",e.ACCOUNT_LEVEL="ACCOUNT_LEVEL",e}({});const Z=60,ee=15,te=480,oe=480,ie=5,ae=2160,ne=5,re=480,se=1,ce=100,le=e=>{const t=V;return t[e]?t[e]:e},de=e=>Q[e]||(0,i.upperFirst)(e.toLowerCase())},90157:(e,t,o)=>{"use strict";o.d(t,{wd:()=>C,Ae:()=>b,mZ:()=>y,vu:()=>m,D3:()=>h,eR:()=>E});var i=o(89501),a=(o(18562),o(59759));const n=/^codepipeline\/(.*?)$/,r=/codepipeline.*\/(.*)\/\w*\/\w*/;var s=o(25787),c=o(28217),l=o(73896),d=o(74615),u=o(91501),p=o(7414);const m=e=>{let t="",o="";const i=n.exec(e);return i&&([t,o]=i),{initiatorText:t,pipelineName:o}},h=e=>{let t="";const o=i.s.fromString(e).relativeId,a=r.exec(o);return a&&([,t]=a),t},y=(e,t)=>t||"",g=60,E=(e,t)=>{const{id:o="",arn:i="",projectName:n="",buildNumber:r,buildStatus:l="",cache:d,environment:m,fileSystemLocations:h,buildComplete:y,currentPhase:E,phases:b,startTime:C,endTime:f,source:T,secondarySources:S=[],sourceVersion:v,secondarySourceVersions:A,serviceRole:_,resolvedSourceVersion:O,initiator:I,artifacts:R,secondaryArtifacts:D=[],logs:N,reportArns:P,exportedEnvironmentVariables:L,timeoutInMinutes:w=g,queuedTimeoutInMinutes:M=c.ne,vpcConfig:k,debugSession:U,buildBatchArn:B,runtimeConfig:G}=e;return{id:o,arn:i,projectName:n,buildNumber:r,buildComplete:y,cache:d,currentPhase:E,startTime:C,endTime:f,artifacts:R,sourceVersion:v,serviceRole:_,secondarySourceVersions:A,resolvedSourceVersion:O,reportArns:P,exportedEnvironmentVariables:L,debugSession:U,buildBatchArn:B,runtimeConfig:G,projectArn:(0,p.rh)({projectId:n,accountId:(null==t?void 0:t.accountId)||(0,u.We)()}).toString(),certificate:m&&m.certificate,computeType:m&&m.computeType||c.QE.BUILD_GENERAL1_SMALL,environmentType:m&&m.type||c.OX.Linux,privilegedMode:m&&m.privilegedMode||!1,image:m&&m.image,sourceType:T&&T.type,sourceLocation:T&&T.location,primarySource:T,secondarySource:S.filter((e=>!!e)),secondaryArtifacts:D.filter((e=>!!e)),environmentVariables:m&&m.environmentVariables||[],fileSystems:h,phases:(b||[]).map((e=>(e.contexts=(e.contexts||[]).filter((e=>e.message)),e))),submitter:I,status:l,logLink:N&&N.deepLink||"",logGroupName:N&&N.groupName||"",logStreamName:N&&N.streamName||"",logsConfig:{cloudWatchLogs:N&&N.cloudWatchLogs&&{...N.cloudWatchLogs},s3Logs:N&&N.s3Logs&&{...N.s3Logs}},timeout:w,queuedTimeout:M,registryCredential:m&&m.registryCredential&&m.registryCredential.credential,vpcId:k&&k.vpcId,subnets:k&&k.subnets,securityGroupIds:k&&k.securityGroupIds,fleet:m&&m.fleet,isRetryable:T&&T.type!==a.sO.codePipeline&&l!==s.NK.IN_PROGRESS.status,get logId(){return this.logGroupName&&this.logStreamName?`${this.logGroupName}:${this.logStreamName}`:""},get completedDate(){if(this.buildComplete)return this.endTime}}},b=e=>{let{buildId:t,partition:o=(0,l.PO)(),service:a="codebuild",region:n=(0,d.kh)(),accountId:r=(0,u.We)()}=e;return new i.s(o,a,n,r,`build/${t}`)},C=e=>{let{batchBuildId:t,partition:o=(0,l.PO)(),service:a="codebuild",region:n=(0,d.kh)(),accountId:r=(0,u.We)()}=e;return new i.s(o,a,n,r,`build-batch/${t}`)}},55178:(e,t,o)=>{"use strict";o.d(t,{Qc:()=>s,f$:()=>d,QE:()=>l,OX:()=>c,vW:()=>p,PK:()=>u,Zu:()=>m,fr:()=>r,Oj:()=>b,Io:()=>U,UC:()=>E,kV:()=>k,dN:()=>S,Qn:()=>M,r$:()=>O,mc:()=>w,DC:()=>L,_V:()=>T,Jb:()=>v,GN:()=>h,HW:()=>N,lJ:()=>g,lf:()=>f,Lm:()=>C,r4:()=>A});var i=o(18562),a=o(89221),n=o(2682);new Map([["us-east-1",new Set(["use1-az2","use1-az4","use1-az6","use1-az1","use1-az5"])],["us-west-2",new Set(["usw2-az1","usw2-az2","usw2-az3"])],["us-east-2",new Set(["use2-az1","use2-az2","use2-az3"])],["sa-east-1",new Set(["sae1-az1","sae1-az2","sae1-az3"])],["eu-west-1",new Set(["euw1-az3","euw1-az1","euw1-az2"])],["eu-central-1",new Set(["euc1-az1","euc1-az2","euc1-az3"])],["ap-southeast-1",new Set(["apse1-az1","apse1-az2","apse1-az3"])],["ap-southeast-2",new Set(["apse2-az1","apse2-az2","apse2-az3"])],["ap-south-1",new Set(["aps1-az1","aps1-az3","aps1-az2"])],["ap-northeast-1",new Set(["apne1-az4","apne1-az1","apne1-az2"])]]);let r=function(e){return e.AMAZON_LINUX="AMAZON_LINUX",e.AMAZON_WINDOWS_2019="WINDOWS_2019",e.AMAZON_WINDOWS_2022="WINDOWS_2022",e.MAC="MAC",e}({}),s=function(e){return e.AMD64="AMD64",e.ARM64="ARM64",e}({}),c=function(e){return e.LINUX="Linux EC2",e.LINUX_GPU="Linux GPU",e}({}),l=function(e){return e.BUILD_GENERAL1_SMALL="BUILD_GENERAL1_SMALL",e.BUILD_GENERAL1_MEDIUM="BUILD_GENERAL1_MEDIUM",e.BUILD_GENERAL1_LARGE="BUILD_GENERAL1_LARGE",e.BUILD_GENERAL1_XLARGE="BUILD_GENERAL1_XLARGE",e.BUILD_GENERAL1_2XLARGE="BUILD_GENERAL1_2XLARGE",e.UNKNOWN="UNKNOWN",e}({}),d=function(e){return e.TARGET_TRACKING_SCALING="TARGET_TRACKING_SCALING",e}({}),u=function(e){return e.AUTO="AUTO",e.DISABLED="DISABLED",e}({}),p=function(e){return e.ON_DEMAND="ON_DEMAND",e.QUEUE="QUEUE",e}({}),m=function(e){return e.CREATING="CREATING",e.UPDATING="UPDATING",e.ROTATING="ROTATING",e.PENDING_DELETION="PENDING_DELETION",e.DELETING="DELETING",e.CREATE_FAILED="CREATE_FAILED",e.UPDATE_ROLLBACK_FAILED="UPDATE_ROLLBACK_FAILED",e.ACTIVE="ACTIVE",e.UNKNOWN="UNKNOWN",e}({});const h=e=>e===m.ACTIVE;let y=function(e){return e.WINDOWS_SERVER_2019_CONTAINER="WINDOWS_SERVER_2019_CONTAINER",e.WINDOWS_SERVER_2022_CONTAINER="WINDOWS_SERVER_2022_CONTAINER",e.LINUX_CONTAINER="LINUX_CONTAINER",e.LINUX_GPU_CONTAINER="LINUX_GPU_CONTAINER",e.ARM_CONTAINER="ARM_CONTAINER",e.MAC_ARM="MAC_ARM",e}({});const g=e=>{switch(e){case r.AMAZON_LINUX:return(0,i.t)("codebuild:fleet.operatingSystem.linux");case r.AMAZON_WINDOWS_2019:return(0,i.t)("codebuild:fleet.operatingSystem.windows_2019");case r.AMAZON_WINDOWS_2022:return(0,i.t)("codebuild:fleet.operatingSystem.windows_2022");case r.MAC:return(0,i.t)("codebuild:fleet.operatingSystem.mac");default:return e}},E=e=>{switch(e){case c.LINUX:return(0,i.t)("codebuild:fleet.environmentType.linux");case c.LINUX_GPU:return(0,i.t)("codebuild:fleet.environmentType.linuxGpu");default:return e}},b=e=>{switch(e){case s.AMD64:return(0,i.t)("codebuild:fleet.architecture.amd64");case s.ARM64:return(0,i.t)("codebuild:fleet.architecture.arm64");default:return e}},C=e=>{switch(e){case u.AUTO:return(0,i.t)("codebuild:fleet.scalingMode.auto");case u.DISABLED:return(0,i.t)("codebuild:fleet.scalingMode.disabled");default:return e}},f=e=>{switch(e){case p.QUEUE:return(0,i.t)("codebuild:fleet.overflowBehavior.queue.description");case p.ON_DEMAND:return(0,i.t)("codebuild:fleet.overflowBehavior.on_demand.description");default:return e}},T=e=>e===d.TARGET_TRACKING_SCALING?u.AUTO:u.DISABLED,S=(e,t,o)=>e===u.AUTO?{scalingType:d.TARGET_TRACKING_SCALING,targetTrackingScalingConfigs:t?[{metricType:"FLEET_UTILIZATION_RATE",targetValue:parseFloat(t||"100")}]:void 0,maxCapacity:o?parseInt(o||"30",10):void 0}:{},v=(e,t,o)=>{switch(e){case r.AMAZON_WINDOWS_2019:return y.WINDOWS_SERVER_2019_CONTAINER;case r.AMAZON_WINDOWS_2022:return y.WINDOWS_SERVER_2022_CONTAINER;case r.AMAZON_LINUX:switch(t){case s.ARM64:return y.ARM_CONTAINER;case s.AMD64:return o===c.LINUX_GPU?y.LINUX_GPU_CONTAINER:y.LINUX_CONTAINER;default:return y.LINUX_CONTAINER}case r.MAC:return y.MAC_ARM;default:return y.LINUX_CONTAINER}},A=e=>{switch(e){case y.ARM_CONTAINER:return(0,i.t)("codebuild:fleet.viewFleet.environmentType.arm");case y.LINUX_GPU_CONTAINER:return(0,i.t)("codebuild:fleet.viewFleet.environmentType.linuxGpu");case y.WINDOWS_SERVER_2019_CONTAINER:return(0,i.t)("codebuild:fleet.viewFleet.environmentType.windows2019");case y.WINDOWS_SERVER_2022_CONTAINER:return(0,i.t)("codebuild:fleet.viewFleet.environmentType.windows2022");case y.MAC_ARM:return(0,i.t)("codebuild:fleet.viewFleet.environmentType.macArm");default:return(0,i.t)("codebuild:fleet.viewFleet.environmentType.linux")}},_=(e,t)=>e.map((e=>({...e,disabled:t}))),O=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];switch(e){case y.ARM_CONTAINER:return _(R,t);case y.LINUX_GPU_CONTAINER:return I;case y.WINDOWS_SERVER_2019_CONTAINER:case y.WINDOWS_SERVER_2022_CONTAINER:return _(D,t);case y.MAC_ARM:return _(N,t);default:return _(P,t)}},I=[{value:l.BUILD_GENERAL1_SMALL,label:(0,i.t)("codebuild:projectTransform.instanceSizeSmallLinuxGpu")},{value:l.BUILD_GENERAL1_LARGE,label:(0,i.t)("codebuild:projectTransform.instanceSizeLargeLinuxGpu")}],R=[{value:l.BUILD_GENERAL1_SMALL,label:(0,i.t)("codebuild:projectTransform.instanceSizeSmallArm")},{value:l.BUILD_GENERAL1_LARGE,label:(0,i.t)("codebuild:projectTransform.instanceSizeLargeArm")}],D=[{value:l.BUILD_GENERAL1_MEDIUM,label:(0,i.t)("codebuild:projectTransform.instanceSizeMedium")},{value:l.BUILD_GENERAL1_LARGE,label:(0,i.t)("codebuild:projectTransform.instanceSizeLarge")}],N=[{value:l.BUILD_GENERAL1_MEDIUM,label:(0,i.t)("codebuild:projectTransform.macM2InstanceMedium")},{value:l.BUILD_GENERAL1_LARGE,label:(0,i.t)("codebuild:projectTransform.macM2InstanceLarge")}],P=n.A.filter([{value:l.BUILD_GENERAL1_SMALL,label:(0,i.t)("codebuild:projectTransform.instanceSizeSmall")},{value:l.BUILD_GENERAL1_MEDIUM,label:(0,i.t)("codebuild:projectTransform.instanceSizeMedium")},{value:l.BUILD_GENERAL1_LARGE,label:(0,i.t)("codebuild:projectTransform.instanceSizeLarge")},n.A.whenEnabled(a.H.CodeBuildXLargeInstance,{value:l.BUILD_GENERAL1_XLARGE,label:(0,i.t)("codebuild:projectTransform.instanceSizeXLarge")}),n.A.whenEnabled(a.H.CodeBuildXLargeImage,{value:l.BUILD_GENERAL1_2XLARGE,label:(0,i.t)("codebuild:projectTransform.instanceSize2xLarge")})]),L=e=>{switch(e){case y.WINDOWS_SERVER_2019_CONTAINER:return r.AMAZON_WINDOWS_2019;case y.WINDOWS_SERVER_2022_CONTAINER:return r.AMAZON_WINDOWS_2022;case y.ARM_CONTAINER:case y.LINUX_GPU_CONTAINER:case y.LINUX_CONTAINER:return r.AMAZON_LINUX;case y.MAC_ARM:return r.MAC;default:return r.AMAZON_LINUX}},w=e=>{switch(e){case y.LINUX_GPU_CONTAINER:return c.LINUX_GPU;case y.LINUX_CONTAINER:return c.LINUX;default:return}},M=e=>{const t=B.find((t=>t===e));return void 0===t?l.BUILD_GENERAL1_SMALL:t},k=e=>{switch(e){case y.ARM_CONTAINER:case y.MAC_ARM:return s.ARM64;default:return s.AMD64}},U=(e,t)=>{const o=O(e).find((e=>e.value===t));return o?o.label:t},B=[l.BUILD_GENERAL1_SMALL,l.BUILD_GENERAL1_MEDIUM,l.BUILD_GENERAL1_LARGE,l.BUILD_GENERAL1_2XLARGE]},46266:(e,t,o)=>{"use strict";o.d(t,{de:()=>c,gf:()=>d,ZN:()=>y,LQ:()=>m,cr:()=>h});var i=o(7474),a=o(25108),n=o(43786),r=o(41583);o(61088);var s=o(89221);const c=(0,i.G7)(s.H.CodeBuildGammaEndpoint)||(0,i.G7)(s.H.CodeBuildBetaEndpoint)?"codebuild-test.amazonaws.com":"codebuild.amazonaws.com",l=c,d=(u=c,p=l,function*(){const e=yield(0,n.T1)(r.L,{principalReference:u,providerType:"Service"});let t=e.Roles,o=e.IsTruncated,i=e.Marker;for(;o&&i;){const e=yield(0,n.T1)(r.L,{marker:i,principalReference:u,providerType:"Service"});i=e.Marker,t=[...t,...e.Roles]}yield(0,n.yJ)((0,a.Vz)(p)(t))});var u,p;const m=(0,a.YX)(l),h=(0,a.C_)(l),y=(0,a.km)(l)},73643:(e,t,o)=>{"use strict";o.d(t,{A:()=>a});const i=/\r|\n|:/,a=e=>!!e&&!!i.exec(e)},1484:(e,t,o)=>{"use strict";o.d(t,{L:()=>n,h:()=>a});var i=o(28217);const a=e=>{const t={};if(e){const o=e.indexOf("/");e===i.NI?t.objectKey=i.NI:0===o?t.objectKey=e.substring(1):o===e.length-1?(t.bucket=e.substring(0,o),t.objectKey=i.NI):o>0?(t.bucket=e.substring(0,o),t.objectKey=e.substring(o+1)):t.bucket=e}return t},n=(e,t)=>{const o=e||"";return t?t.startsWith(i.NI)?`${o}${t}`:`${o}/${t}`:o}},7414:(e,t,o)=>{"use strict";o.d(t,{AX:()=>N,CK:()=>$,CU:()=>j,Cs:()=>x,Dz:()=>Q,ED:()=>z,EK:()=>F,Ek:()=>A,GY:()=>ge,H:()=>Z,Io:()=>P,J2:()=>K,Kr:()=>G,Mo:()=>q,P2:()=>ae,PZ:()=>re,Po:()=>ee,QM:()=>I,Sl:()=>Y,UP:()=>R,W5:()=>ce,YB:()=>W,_x:()=>X,aR:()=>_,bg:()=>O,eI:()=>v,fM:()=>H,fz:()=>he,gF:()=>oe,i1:()=>B,jd:()=>se,o2:()=>L,pR:()=>J,rh:()=>ye,uQ:()=>ie,uu:()=>V,vI:()=>D,xZ:()=>ne,yn:()=>te});var i=o(2543),a=o(89501),n=o(18562),r=o(56990),s=o(10978),c=o(70289),l=o(17667),d=o(59759),u=o(28217),p=o(7474),m=o(89221),h=o(73896),y=o(74615),g=o(91501),E=o(2682),b=o(35306),C=o(55178);const f=new RegExp(/https?:\/\/github\.com\/(.*)/),T=new RegExp(/https?:\/\/.*@bitbucket\.org\/(.*)/),S=/\.git$/,v=new RegExp(/\/\/.*@/),A=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";switch(e){case d.sO.s3:return t.endsWith(u.NI)?(0,s.M)(t):(0,c.L)(t);case d.sO.gitHub:case d.sO.gitHubEnt:case d.sO.gitLab:case d.sO.gitLabSelfManaged:return t.replace(S,"");case d.sO.bitBucket:return t.replace(S,"").replace(v,"//");default:return""}},_=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";switch(e){case d.sO.codeCommit:return(0,l.w)(t)||t;case d.sO.s3:return t;case d.sO.gitHub:const e=t.replace(S,"").match(f);return e?e[1]:"";case d.sO.bitBucket:const o=t.replace(S,"").match(T);return o?o[1]:"";case d.sO.gitHubEnt:case d.sO.gitLab:case d.sO.gitLabSelfManaged:return t.replace(S,"");default:return""}},O=e=>I(e)&&e!==d.sO.codeCommit,I=e=>e!==d.sO.codePipeline&&e!==d.sO.s3&&e!==d.sO.noSource,R=e=>[d.sO.gitHub,d.sO.gitHubEnt,d.sO.bitBucket,d.sO.gitLab,d.sO.gitLabSelfManaged].some((t=>e===t)),D=(e,t)=>{const{arn:o,name:i="",description:a,sourceVersion:n,source:r={type:"",location:""},secondarySourceVersions:s=[],secondarySources:c=[],artifacts:l={type:u.Ko.NO_ARTIFACTS},secondaryArtifacts:d=[],environment:p,fileSystemLocations:m,cache:h,serviceRole:y,serviceRoleModificationEnabled:g,badge:E,timeoutInMinutes:b,tags:C,queuedTimeoutInMinutes:f,encryptionKey:T,vpcConfig:S,webhook:v,logsConfig:O,buildBatchConfig:I,runtimeConfig:R,concurrentBuildLimit:D,lastModified:N,resourceAccessRole:P,projectVisibility:L,publicProjectAlias:w}=e;return{arn:o,latestBuild:t,name:i,description:a,serviceRole:y,serviceRoleModificationEnabled:g,encryptionKey:T,logsConfig:O,tags:C,sourceVersion:n,secondarySourceVersions:s,buildBatchConfig:I,runtimeConfig:R,concurrentBuildLimit:D,lastModified:N,resourceAccessRole:P,publicProjectAlias:w,projectVisibility:L,primarySource:r,secondarySources:c.filter((e=>!!e)),sourceProvider:r.type,sourceRepository:r.location,get repositoryUrl(){return A(this.sourceProvider,this.sourceRepository)},get repositoryName(){return _(this.sourceProvider,this.sourceRepository)},sourceCloneDepth:r.gitCloneDepth,sourceInsecureSsl:r.insecureSsl,buildspec:r.buildspec,image:p&&p.image,environment:p&&p.type||u.OX.Linux,environmentVariables:p&&p.environmentVariables,imagePullCredentialsType:p&&p.imagePullCredentialsType,registryCredential:p&&p.registryCredential,compute:p&&p.computeType||u.QE.BUILD_GENERAL1_SMALL,privileged:!!p&&!!p.privilegedMode,customEntrypoint:!!p&&!!p.customEntrypoint,certificate:p&&p.certificate,fileSystems:m,primaryArtifact:l,secondaryArtifacts:d.filter((e=>!!e)),artifactsType:l&&l.type,artifactsLocation:l&&l.location,artifactsPath:l&&l.path,artifactsNamespaceType:l&&l.namespaceType,artifactsName:l&&l.name,artifactsPackaging:l&&l.packaging,cacheType:h&&h.type,cacheLocation:h&&h.location,cacheModes:h&&h.modes,buildBadge:E&&E.badgeEnabled,buildBadgeUrl:E&&E.badgeRequestUrl,timeout:b,queuedTimeout:f,vpcId:S&&S.vpcId,subnets:S&&S.subnets,securityGroupIds:S&&S.securityGroupIds,fleet:p&&p.fleet,webhookBuildType:v&&v.buildType,webhookBranchFilter:v&&v.branchFilter,webhookLastModifiedSecret:v&&v.lastModifiedSecret&&new Date(v.lastModifiedSecret).getTime(),webhookPayloadUrl:v&&v.payloadUrl,webhookSecret:v&&v.secret,webhookUrl:v&&v.url,webhookFilterGroups:v&&v.filterGroups,webhookManualCreation:null==v?void 0:v.manualCreation,webhookScopeConfiguration:null==v?void 0:v.scopeConfiguration,get webhook(){return[this.webhookBuildType,this.webhookFilterGroups,this.webhookBranchFilter,this.webhookLastModifiedSecret,this.webhookPayloadUrl,this.webhookSecret,this.webhookUrl,this.webhookManualCreation,this.webhookScopeConfiguration].some((e=>!!e))}}},N=e=>{if(e)return(0,n.t)(`codebuild:projectTransform.providerType.${e}`)},P=(e,t,o)=>{const i=L(e,o).find((e=>e.value===t));return i?i.label:t},L=(e,t)=>{if(u.as.lambda===t)return w;switch(e){case u.OX.Arm:return M;case u.OX.LinuxGpu:return k();case u.OX.Windows:case u.OX.Windows_2019:return U;case u.OX.LinuxLambda:case u.OX.ArmLambda:return(0,p.G7)(m.H.CodeBuildLambda)?w:[];case u.OX.MacArm:return C.HW;default:return B()}},w=[{value:u.QE.BUILD_LAMBDA_1GB,label:(0,n.t)("codebuild:projectTransform.lambdaCompute1GB")},{value:u.QE.BUILD_LAMBDA_2GB,label:(0,n.t)("codebuild:projectTransform.lambdaCompute2GB")},{value:u.QE.BUILD_LAMBDA_4GB,label:(0,n.t)("codebuild:projectTransform.lambdaCompute4GB")},{value:u.QE.BUILD_LAMBDA_8GB,label:(0,n.t)("codebuild:projectTransform.lambdaCompute8GB")},{value:u.QE.BUILD_LAMBDA_10GB,label:(0,n.t)("codebuild:projectTransform.lambdaCompute10GB")}],M=(0,p.G7)(m.H.CodeBuildArmExpansion)?[{value:u.QE.BUILD_GENERAL1_SMALL,label:(0,n.t)("codebuild:projectTransform.instanceSizeSmallArm")},{value:u.QE.BUILD_GENERAL1_MEDIUM,label:(0,n.t)("codebuild:projectTransform.instanceSizeMediumArm")},{value:u.QE.BUILD_GENERAL1_LARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeLargeArm")},{value:u.QE.BUILD_GENERAL1_XLARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeXLargeArm")},{value:u.QE.BUILD_GENERAL1_2XLARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeTwoXLargeArm")}]:[{value:u.QE.BUILD_GENERAL1_SMALL,label:(0,n.t)("codebuild:projectTransform.instanceSizeSmallArm")},{value:u.QE.BUILD_GENERAL1_LARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeLargeArm")}],k=()=>[{value:u.QE.BUILD_GENERAL1_LARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeLargeLinuxGpu"),...(0,p.G7)(m.H.CodeBuildLinuxGpuSmallCompute)?{}:{description:(0,n.t)("codebuild:projectTransform.instanceSizeLargeLinuxGpuDesc"),disabled:!0}},...(0,p.G7)(m.H.CodeBuildLinuxGpuSmallCompute)?[{value:u.QE.BUILD_GENERAL1_SMALL,label:(0,n.t)("codebuild:projectTransform.instanceSizeSmallLinuxGpu")}]:[]],U=[{value:u.QE.BUILD_GENERAL1_MEDIUM,label:(0,n.t)("codebuild:projectTransform.instanceSizeMedium")},{value:u.QE.BUILD_GENERAL1_LARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeLarge")}],B=()=>E.A.filter([{value:u.QE.BUILD_GENERAL1_SMALL,label:(0,n.t)("codebuild:projectTransform.instanceSizeSmall")},{value:u.QE.BUILD_GENERAL1_MEDIUM,label:(0,n.t)("codebuild:projectTransform.instanceSizeMedium")},{value:u.QE.BUILD_GENERAL1_LARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeLarge")},E.A.whenEnabled(m.H.CodeBuildXLargeInstance,{value:u.QE.BUILD_GENERAL1_XLARGE,label:(0,n.t)("codebuild:projectTransform.instanceSizeXLarge")}),E.A.whenEnabled(m.H.CodeBuildXLargeImage,{value:u.QE.BUILD_GENERAL1_2XLARGE,label:(0,n.t)("codebuild:projectTransform.instanceSize2xLarge")})]),G=[{value:u.Vt.ACCOUNT_LEVEL,label:(0,n.t)("codebuild:projectTransform.accountLevelCodeConnections"),description:(0,n.t)("codebuild:description.codeconnections.accountLevelConnection")},{value:u.Vt.PROJECT_LEVEL,label:(0,n.t)("codebuild:projectTransform.projectLevelCodeConnections"),description:(0,n.t)("codebuild:description.codeconnections.projectLevelConnection")}],W=e=>B().find((t=>{let{value:o}=t;return o===e})),x=e=>{switch(e){case"NONE":return(0,n.t)("codebuild:projectTransform.packagingTypeNone");case"ZIP":return(0,n.t)("codebuild:projectTransform.packagingTypeZip");default:return e}},F=e=>{switch(e){case u.OX.Linux:return(0,n.t)("codebuild:projectTransform.environmentLinux");case u.OX.Windows:return(0,n.t)("codebuild:projectTransform.environmentWindows");case u.OX.Windows_2019:return(0,n.t)("codebuild:projectTransform.environmentWindows2019");case u.OX.Windows_2022:return(0,n.t)("codebuild:projectTransform.environmentWindows2022");case u.OX.Arm:return(0,n.t)("codebuild:projectTransform.environmentArm");case u.OX.LinuxGpu:return(0,n.t)("codebuild:projectTransform.environmentLinuxGpu");case u.OX.ArmLambda:return(0,n.t)("codebuild:projectTransform.environmentArmLambda");case u.OX.LinuxLambda:return(0,n.t)("codebuild:projectTransform.environmentLinuxLambda");default:return e}},j=e=>{switch(e){case u.OX.Linux:case u.OX.Windows:case u.OX.Windows_2019:case u.OX.Arm:case u.OX.LinuxGpu:return(0,n.t)("codebuild:environment.label.ec2ComputeConfig");case u.OX.ArmLambda:case u.OX.LinuxLambda:return(0,n.t)("codebuild:environment.label.lambdaComputeConfig");default:return(0,n.t)("codebuild:environment.label.ec2ComputeConfig")}},H=e=>"NO_CACHE"===e?(0,n.t)("codebuild:projectTransform.cacheTypeNone"):e,z=e=>e?(0,n.t)("codebuild:projectTransform.isPrivileged"):(0,n.t)("codebuild:projectTransform.isNotPrivileged"),V=e=>e?(0,n.t)("codebuild:projectTransform.isCustomEntrypoint"):(0,n.t)("codebuild:projectTransform.isNotCustomEntrypoint"),Y=e=>e?(0,n.t)("common:enabled"):(0,n.t)("common:disabled"),$=e=>e===r.k.PUBLIC_READ?(0,n.t)("common:enabled"):(0,n.t)("common:disabled"),q=e=>!!e&&e.toLowerCase().includes("windows"),K=e=>!!e&&e.toLowerCase().includes("mac_arm"),J=e=>!!e&&(e.toLowerCase().includes("amazon_linux_2")||e.toLowerCase().includes("arm_lambda_container")||e.toLowerCase().includes("linux_lambda_container")),Q=e=>!(!e||(0,i.isEmpty)(e)),X=(e,t)=>{const o=Object.values(t).find((t=>t.arn===e));return Q(null==o?void 0:o.buildBatchConfig)},Z=(e,t,o)=>!(0,p.G7)(m.H.CodeBuildLocalCache)||(0,p.G7)(m.H.CodeBuildXLargeImage)&&t===u.QE.BUILD_GENERAL1_2XLARGE||(0,p.G7)(m.H.CodeBuildLinuxGpuImage)&&e===u.OX.LinuxGpu||te(o),ee=e=>e===u.OX.LinuxLambda||e===u.OX.ArmLambda,te=e=>e===u.as.lambda,oe=(e,t,o)=>(0,p.G7)(m.H.CodeBuildWindowsVpc)?te(t)||o===u.br.FLEET&&!(0,p.G7)(m.H.CodeBuildProvisionedModelVpc):q(e)||te(t)||o===u.br.FLEET&&!(0,p.G7)(m.H.CodeBuildProvisionedModelVpc),ie=e=>te(e),ae=(e,t)=>te(e)&&t===u.ov.awsManaged,ne=(e,t)=>te(e)||t===u.br.FLEET,re=(e,t)=>te(e)||t===u.br.FLEET,se=(e,t)=>te(e)||t===u.br.FLEET,ce=e=>(0,p.G7)(m.H.CodeBuildProvisionedModel)&&e===u.br.FLEET,le=(0,n.t)("codebuild:environment.subtext.additionalConfiguration.default"),de=(0,n.t)("codebuild:environment.subtext.additionalConfiguration.noVpc"),ue=(0,n.t)("codebuild:environment.subtext.additionalConfiguration.fileSystems"),pe=(0,n.t)("codebuild:environment.subtext.additionalConfiguration.lambda"),me=(0,n.t)("codebuild:environment.subtext.additionalConfiguration.reservedCapacityNoVpc"),he=((0,n.t)("codebuild:environment.subtext.additionalConfiguration.reservedCapacity"),(e,t,o)=>te(t)?pe:(0,p.G7)(m.H.CodeBuildProvisionedModel)&&o===u.br.FLEET?me:(0,b._H)(e)?de:(0,p.G7)(m.H.CodeBuildFileSystems)?ue:le),ye=e=>{let{projectId:t,partition:o=(0,h.PO)(),service:i="codebuild",region:n=(0,y.kh)(),accountId:r=(0,g.We)()}=e;return new a.s(o,i,n,r,`project/${t}`)},ge=e=>{try{return a.s.fromString(e),e}catch(t){return ye({projectId:e}).toString()}}},72922:(e,t,o)=>{"use strict";o.d(t,{A:()=>g});var i=o(96540),a=o(9242),n=o(44649),r=o(38556),s=o(25892),c=o(89221),l=o(18562),d=o(59388),u=o(43630),p=o(17040),m=o(80011),h=o(43786),y=o(61088);const g=(0,p.Ng)(null,(e=>({persistOAuthToken:(t,o,i)=>{e((0,y.qE)((0,h.T1)(m.$z,t,o,i)))},startGitHubPoll:()=>{e((0,y.qE)((0,h.T1)(m.kZ)))},startBitBucketPoll:()=>{e((0,y.qE)((0,h.T1)(m.yU)))}})))((e=>{const t=i.useContext(a.C);return i.createElement(u.A,{formAction:"none",onClick:()=>((e,t)=>{const o=e===a.j.SourceConnectionsPopup?r.kD.SourceConnectionsPopup:r.kD.Close,i=o===r.kD.Close,{serverType:u}=t,p=`${window.location.origin}/codesuite/codebuild/oauth/${u}`,m=(0,r.jK)({version:r.xd.V2,state:{csrfToken:(0,s.Ib)(),target:t.oauthTarget,completionAction:o}});let h,y;if(u===n.SE.GITHUB)i&&t.startGitHubPoll(),h=`https://github.com/login/oauth/authorize?client_id=${(0,n.Wh)()}&scope=repo,read:org,admin:org_hook&state=${m}&redirect_uri=${p}`,y="GitHubWindow";else{if(u!==n.SE.BITBUCKET)return;i&&(c.H.CodeBuildBitbucketConnectOAuth_New&&t.startBitBucketPoll(),window.signalBitbucketFinished=e=>{t.persistOAuthToken(u,e,n.f0)},window.signalBitbucketError=()=>{t.setOAuthError((0,l.t)("codebuild:oauthSelector.connect.error.bitbucket"))}),h=`https://bitbucket.org/site/oauth2/authorize?client_id=${(0,n.Ot)()}&scope=repository&response_type=code&state=${m}`,y="BitBucketWindow"}i?window.open(h,y,d.y4,!1):window.location.href=h})(t,e)},(0,l.t)(`codebuild:oauthSelector.connect.button.${e.serverType}`))}))},9242:(e,t,o)=>{"use strict";o.d(t,{C:()=>n,j:()=>a});var i=o(96540);let a=function(e){return e[e.MainConsole=0]="MainConsole",e[e.SourceConnectionsPopup=1]="SourceConnectionsPopup",e}({});const n=i.createContext(a.MainConsole)},17350:(e,t,o)=>{"use strict";o.d(t,{A:()=>h});var i=o(96540),a=o(17040),n=o(43786),r=o(44649),s=o(61088),c=o(80011),l=o(94357),d=o(63913),u=o(7474),p=o(89221),m=o(67223);const h=(0,a.Ng)(null,((e,t)=>({importSourceCredential:(o,i,a)=>{const{serverType:m,oauthTokenType:h}=t,{userName:y,password:g,tokenName:E}=o,b=t.serverType===r.SE.BITBUCKET&&t.oauthTokenType===r.F1.BASIC_AUTH?g:E;let C=c.PH;(0,r.ax)(m)&&(C=c.pP),e((0,s.qE)((0,n.T1)(l.z,(0,n.T1)(d.z,(0,n.T1)(C,m,b,(0,u.G7)(p.H.CodeBuildBitBucketPersonalToken)?h:(e=>{switch(e){case r.SE.BITBUCKET:return r.F1.BASIC_AUTH;case r.SE.GITHUB_ENTERPRISE:case r.SE.GITHUB:return r.F1.PERSONAL_ACCESS_TOKEN}})(m),y),i,a),`codebuild.tokenConnector.connectOrchestrator.${m}`)))}})))((e=>{const[t,o]=i.useState(m.yh),[a,n]=i.useState(!1),[r,s]=i.useState(!1),[c,l]=i.useState(void 0);return i.createElement(m.Ay,{serverType:e.serverType,oauthTokenType:e.oauthTokenType,isLoading:a,showError:r,error:c,onSubmit:o=>{s(!0),t.isValid&&e.importSourceCredential(t,(()=>{}),(e=>{l(e),n(!1)}))},state:t,setState:o})}))},67223:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>y,yh:()=>m});var i=o(96540),a=o(86117),n=o(43630),r=o(70714),s=o(78453),c=o(44649),l=o(18562),d=o(62219),u=o(84760),p=function(e){return e.userName="userName",e.appPassword="appPassword",e.personalAccessToken="personalAccessToken",e}(p||{});const m={userName:"",tokenName:"",password:"",isValid:!1};class h extends i.Component{constructor(e){super(e)}validateField=e=>{let t="";switch(e){case p.personalAccessToken:t=this.props.state.tokenName;break;case p.appPassword:t=this.props.state.password;break;case p.userName:t=this.props.state.userName}return t?void 0:(0,l.t)(`codebuild:tokenConnector.validation.${e}.empty`)};isValid=()=>{const{tokenName:e,userName:t,password:o}=this.props.state;if(this.props.serverType===c.SE.BITBUCKET&&this.props.oauthTokenType===c.F1.BASIC_AUTH){if(!o||!t)return!1}else if(!e)return!1;return!0};updateStateFieldbyKey=(e,t)=>{var o;this.props.setState({...this.props.state,[e]:null===(o=t.detail.value)||void 0===o?void 0:o.trim()})};updateIsValid=e=>{this.props.setState({...this.props.state,isValid:e})};render(){const{serverType:e,oauthTokenType:t}=this.props,o=i.createElement(n.A,{formAction:"none",loading:this.props.isLoading,onClick:this.props.onSubmit},e===c.SE.BITBUCKET?(0,l.t)(`codebuild:tokenConnector.connect.${e}.button.${t}`):(0,l.t)(`codebuild:tokenConnector.connect.${e}.button`)),m=`codebuild.tokenConnector.${e}`,{showError:h,error:y}=this.props,{userName:g,tokenName:E,password:b}=this.props.state;return this.props.state.isValid!==this.isValid()&&this.updateIsValid(!this.props.state.isValid),e===c.SE.BITBUCKET&&t===c.F1.BASIC_AUTH?i.createElement(s.A,{direction:"vertical",size:"l",key:m},h&&y&&i.createElement(u.A,{type:"error"},(0,d.j)(y)),i.createElement(a.A,{errorText:h?this.validateField(p.userName):null,label:(0,l.t)(`codebuild:tokenConnector.connect.${e}.username.label`)},i.createElement(r.A,{onChange:e=>this.updateStateFieldbyKey("userName",e),value:g})),i.createElement(a.A,{errorText:h?this.validateField(p.appPassword):null,label:(0,l.t)(`codebuild:tokenConnector.connect.${e}.password.label`)},i.createElement(r.A,{onChange:e=>this.updateStateFieldbyKey("password",e),value:b})),o):i.createElement(s.A,{direction:"vertical",size:"l",key:m},h&&y&&i.createElement(u.A,{type:"error"},(0,d.j)(y)),i.createElement(a.A,{label:(0,l.t)(`codebuild:tokenConnector.connect.${e}.token.label`),secondaryControl:o,errorText:h?this.validateField(p.personalAccessToken):null,key:m},i.createElement(r.A,{onChange:e=>this.updateStateFieldbyKey("tokenName",e),value:E})))}}const y=h},18408:(e,t,o)=>{"use strict";o.d(t,{A:()=>u});var i=o(96540),a=o(44649),n=o(66079),r=o(7474),s=o(89221),c=o(18562),l=o(78453);const d=e=>{if(e!==a.SE.BITBUCKET)return[{id:a.F1.OAUTH,label:(0,c.t)("codebuild:oauthSelector.connect.tiles.oauth")},{id:a.F1.PERSONAL_ACCESS_TOKEN,label:(0,c.t)(`codebuild:oauthSelector.connect.tiles.token.${e}`)}];const t=[{id:a.F1.OAUTH,label:(0,c.t)("codebuild:oauthSelector.connect.tiles.oauth")},{id:a.F1.BASIC_AUTH,label:(0,c.t)(`codebuild:oauthSelector.connect.tiles.basic.${e}`)}];return(0,r.G7)(s.H.CodeBuildBitBucketPersonalToken)?[...t,{id:a.F1.PERSONAL_ACCESS_TOKEN,label:(0,c.t)(`codebuild:oauthSelector.connect.tiles.token.${e}`)}]:t},u=e=>{const[t,o]=i.useState(e.defaultAuthType);return i.createElement(l.A,{size:"m"},i.createElement(n.A,{tiles:d(e.serverType),onChange:e=>o(e),groupName:`codebuild.oauthSelector.disconnectedTiles.${e.serverType}.${e.sourceIndex}`,currentSelection:t}),t===a.F1.OAUTH?e.renderOAuthSelection():e.renderTokenConnector(t))}},44649:(e,t,o)=>{"use strict";o.d(t,{F1:()=>p,Ot:()=>b,Qg:()=>g,SE:()=>u,Sd:()=>C,Wh:()=>y,ax:()=>h,f0:()=>T,xQ:()=>d});var i=o(65975),a=o(41583),n=o(28217),r=o(74615),s=o(7474),c=o(89221),l=o(25892);let d=function(e){return e.setConnectedAccounts="reducer/codebuild/common/oauth/accounts/setConnectedAccount",e.setOAuthRepositories="reducer/codebuild/common/oauth/repositories/setRepositories",e.setLoadingOAuthRepositories="reducer/codebuild/common/oauth/repositories/setLoading",e}({}),u=function(e){return e.GITHUB="github",e.BITBUCKET="bitbucket",e.GITHUB_ENTERPRISE="github_enterprise",e.CODECONNECTIONS="codeconnections",e.GITLAB="gitlab",e.GITLAB_SELF_MANAGED="gitlab_self_managed",e}({}),p=function(e){return e.OAUTH="OAUTH",e.BASIC_AUTH="BASIC_AUTH",e.PERSONAL_ACCESS_TOKEN="PERSONAL_ACCESS_TOKEN",e.CODECONNECTIONS="CODECONNECTIONS",e}({});const m=[u.BITBUCKET,u.GITHUB],h=e=>m.includes(e),y=()=>(0,s.G7)(c.H.CodeBuildGammaEndpoint)&&l.Vv?l.Vv:E[(0,r.kh)()],g=()=>E,E={"ap-east-1":"26a8c8be68ea42a52248","ap-northeast-1":"267fa91e7155d971a0ba","ap-northeast-2":"818647e6d48bde051d29","ap-south-1":"9859b46d0db8987e9a94","ap-southeast-1":"f4d180e09fca40c9962d","ap-southeast-2":"41387c6857fcb0509a45","ap-southeast-3":"fbf565e2a02009be9171","ca-central-1":"bcacb47d91c528d26c90","cn-north-1":"9389aa9b9b177e8c7a8f","cn-northwest-1":"9402ec008cb02fccaef0","eu-central-1":"f17b638f3630ce060b72","eu-north-1":"5c5de897fa3e2a4e213b","eu-west-1":"b42446845bafda995315","eu-west-2":"2294ab13a319dbbae4fa","eu-west-3":"e2e76e491aa4ac600720","me-south-1":"773d0b9da658d0e10a22","sa-east-1":"c07fc3448763333fa437","us-east-1":"0618ba653b0280f07f36","us-east-2":"f9db65f5f0966cf93fe3","us-gov-east-1":"6be12f6f6683b763eeb2","us-gov-west-1":"d2a94f226b7853f3e082","us-west-1":"e194c6a2def3912405cf","us-west-2":"5fc3422e60fd48783bbe","eu-south-1":"a4772e1c898548870ae1","af-south-1":"d9045582ba03a0957846","ap-northeast-3":"87e2b6b0635faa1f513c","me-central-1":"ce780088fc188bacdf7b","ap-south-2":"379e07aeff1f4f790797","eu-south-2":"a04d937b10a7899e261f","eu-central-2":"293436fad283c7ca9a55","ap-southeast-4":"4c00daa7ab55c569fba6","il-central-1":"2aafae684b62bc7117db"},b=()=>(0,s.G7)(c.H.CodeBuildGammaEndpoint)&&l.t$?l.t$:f[(0,r.kh)()],C=()=>f,f={"ap-east-1":"rHrJXQDgK3AGCzh5cY","ap-northeast-1":"ryJd6BH2HJ2FfEeJCD","ap-northeast-2":"eCNKNvzW6dVyJBh8jP","ap-south-1":"pGQE7UhYRnc54XzbBX","ap-southeast-1":"B5KazjxrdyVNNR6vSJ","ap-southeast-2":"gV8M6XTuv3RPpnYhSa","ap-southeast-3":"2egjnumpRQUs2hSa3k","ca-central-1":"wgAKEq55ktbq3YYAeS","cn-north-1":"sQNmEvg2MFk2NhaSFH","cn-northwest-1":"PD4jGQn4cJR2nHM2Cj","eu-central-1":"2YKQuN7CAUfHmKNYTZ","eu-north-1":"W7jfrkpHNtdMhUZtRk","eu-west-1":"53XVjeaN3569NZ5BEq","eu-west-2":"sB5rfGSC4jbbkWD6kW","eu-west-3":"KY2xtEBUdfJubQbrf2","me-south-1":"YVUUZHuHEPAe9aUJvB","sa-east-1":"uWbahB7c8PGN8xQkV9","us-east-1":"vSqNaTsc5ztt2CV6Pp","us-east-2":"jMyBmsPjyNZfLNLR2F","us-gov-east-1":"xps64Xu7dsMMduTkb3","us-gov-west-1":"2ZhhUQh26XU6M7dGtb","us-west-1":"3Ua37ENyfJrHUjVUyx","us-west-2":"Fe8MSZE7LtRUHvrpNf","eu-south-1":"crTPT5Qjgd5WKVCTRF","af-south-1":"XUQjrUbzgfWDwPHdDc","ap-northeast-3":"Ukmaeq6wpVgPBVTNqy","me-central-1":"fwVLn9XhQeK2LXUzgm","ap-south-2":"hYUFcjcTWRK6H2xpPF","eu-south-2":"BuKNpNWkzhBT9eShsH","eu-central-2":"QgDEnMp59vQskEq6pM","ap-southeast-4":"SYwH5zEv8z3gUC8QKr","il-central-1":"Uvb9BjRhLRsdgwN68q"},T=(0,i.T)(a.qD)===n.Jy.AWS_GOV?1:2},61947:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>I,dc:()=>A,xW:()=>O,EP:()=>_,w4:()=>C,r5:()=>v,HJ:()=>S,wb:()=>T,mV:()=>b,OR:()=>d,o1:()=>m,WK:()=>p,az:()=>u});var i=o(82960),a=o(1081),n=o(44649);const r={[n.SE.GITHUB]:{isConnected:!1},[n.SE.BITBUCKET]:{isConnected:!1},[n.SE.GITHUB_ENTERPRISE]:{isConnected:!1},[n.SE.CODECONNECTIONS]:{isConnected:!1},initialized:!1,loading:!1},s=e=>({type:n.xQ.setConnectedAccounts,payload:e}),c={initialized:!1,loading:!1},l={[n.SE.GITHUB]:c,[n.SE.BITBUCKET]:c},d=s,u=(e,t)=>({type:n.xQ.setOAuthRepositories,payload:{repositories:t,server:e}}),p=(e,t)=>({type:n.xQ.setLoadingOAuthRepositories,payload:{loading:t,server:e}}),m=e=>s({loading:e}),h=e=>e.codebuild.oauth,y=(0,a.Mz)(h,(e=>e.repositories)),g=(0,a.Mz)(y,(e=>e[n.SE.GITHUB])),E=(0,a.Mz)(y,(e=>e[n.SE.BITBUCKET])),b=((0,a.Mz)(g,(e=>e.repositories)),(0,a.Mz)(g,(e=>e.loading)),(0,a.Mz)(E,(e=>e.repositories)),(0,a.Mz)(E,(e=>e.loading)),(e,t)=>y(e)[t].loading),C=(e,t)=>y(e)[t].repositories,f=(0,a.Mz)(h,(e=>e.accounts)),T=(0,a.Mz)(f,(e=>e.loading)),S=(0,a.Mz)(f,(e=>e.github.isConnected)),v=(0,a.Mz)(f,(e=>e.bitbucket.isConnected)),A=((0,a.Mz)(f,(e=>e.github_enterprise.isConnected)),(0,a.Mz)(f,(e=>{let{github:t,bitbucket:o,github_enterprise:i}=e;return{[n.SE.GITHUB]:t,[n.SE.BITBUCKET]:o,[n.SE.GITHUB_ENTERPRISE]:i}}))),_=((0,a.Mz)(f,(e=>e.github.connectionType)),(0,a.Mz)(f,(e=>e.bitbucket.connectionType)),(0,a.Mz)(f,(e=>e.codeconnections)),(0,a.Mz)(f,(e=>e.gitlab_self_managed))),O=(0,a.Mz)(f,(e=>e.gitlab)),I=(0,i.HY)({accounts:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r,t=arguments.length>1?arguments[1]:void 0;return t.type===n.xQ.setConnectedAccounts?{...e,initialized:!0,loading:!1,...t.payload}:e},repositories:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case n.xQ.setOAuthRepositories:return{...e,[t.payload.server]:{...e[t.payload.server],repositories:t.payload.repositories,initialized:!0}};case n.xQ.setLoadingOAuthRepositories:return{...e,[t.payload.server]:{...e[t.payload.server],loading:t.payload.loading}}}return e}})},80011:(e,t,o)=>{"use strict";o.d(t,{D8:()=>O,vV:()=>_,pP:()=>W,PH:()=>G,B3:()=>B,vj:()=>M,RD:()=>k,qG:()=>v,SM:()=>A,$z:()=>D,yU:()=>w,kZ:()=>L,jA:()=>I});var i=o(43786),a=o(25892),n=o(69003);const r=(0,o(62068).t)(n.pZ),s={persistOAuthToken:e=>r(n.pZ.persistOAuthToken)(e),listConnectedOAuthAccounts:e=>r(n.pZ.listConnectedOAuthAccounts)(e),listRepositories:e=>r(n.pZ.listRepositories)(e),deleteOAuthToken:e=>r(n.pZ.deleteOAuthToken)(e)};var c=o(61947),l=o(44649),d=o(35820),u=o(50012),p=o(7474),m=o(89221),h=o(30420),y=o(18562),g=o(38556),E=o(13508),b=o(66480),C=o(2694),f=o(62219);const T="CodeBuildGitHubPoll",S="CodeBuildBitBucketPoll";function*v(){try{const e=yield(0,i.T1)(u.p.listSourceCredentials,{});if(!e.sourceCredentialsInfos)return yield(0,i.yJ)((0,c.OR)({github:{isConnected:!1},bitbucket:{isConnected:!1},github_enterprise:{isConnected:!1},codeconnections:{isConnected:!1}}));const t=e.sourceCredentialsInfos.reduce(((e,t)=>{if(!t.serverType||!t.authType)return e;const o=t.serverType.toLowerCase();return e[o].isConnected=!0,t.authType===l.F1.PERSONAL_ACCESS_TOKEN||t.authType===l.F1.BASIC_AUTH?e[o].connectionType=t.authType:t.authType===l.F1.OAUTH?(0,p.G7)(m.H.CodeBuildDisplaySourceConnection)&&(e[o].connectionType=l.F1.OAUTH):t.authType===l.F1.CODECONNECTIONS&&(0,p.G7)(m.H.CodeBuildCodeConnectionsIntegrationFeature)&&(e[o].codeConnectionsArn=t.resource,e[o].tempCodeConnectionsArn=t.resource),e}),{github:{isConnected:!1,connectionType:l.F1.PERSONAL_ACCESS_TOKEN},bitbucket:{isConnected:!1,connectionType:l.F1.BASIC_AUTH},github_enterprise:{isConnected:!1},codeconnections:{isConnected:!1},gitlab:{isConnected:!1},gitlab_self_managed:{isConnected:!1}});yield(0,i.yJ)((0,c.OR)(t))}catch{}}function*A(e){yield(0,i.yJ)((0,c.WK)(e,!0));let t,o=[],a=!0;try{for(;a&&o.length<500;){const n=yield(0,i.T1)(s.listRepositories,{serverType:e,nextToken:t});o=[...o,...n.response.repositories||[]],t=n.response.nextToken,a=Boolean(t)}}catch(e){yield(0,i.yJ)((0,h.X8)("list-oauth-repositories-error",{content:`${e.message} ${(0,y.t)("codebuild:oauthSelector.error.listRepo")}`}))}yield(0,i.yJ)((0,c.az)(e,o)),yield(0,i.yJ)((0,c.WK)(e,!1))}function*_(e){const t=yield(0,i.T1)(u.p.listSourceCredentials,{});if(!t||!t.sourceCredentialsInfos)return yield(0,i.yJ)((0,c.OR)({[e]:{isConnected:!1}}));const o=t.sourceCredentialsInfos.find((t=>t.serverType&&t.serverType.toLowerCase()===e));o&&o.arn&&(yield(0,i.T1)(u.p.deleteSourceCredentials,{arn:o.arn})),yield(0,i.yJ)((0,c.OR)({[e]:{isConnected:!1,codeConnectionsArn:"",tempCodeConnectionsArn:""}}))}function*O(e,t,o){yield(0,i.yJ)((0,c.o1)(!0)),yield(0,i.T1)(s.persistOAuthToken,{authCode:t,authServerType:e,oauthAppVersion:o}),yield(0,i.yJ)((0,c.OR)({[e]:{isConnected:!0}}))}function*I(){yield(0,i.yJ)((0,c.o1)(!0)),yield(0,i.T1)(v),yield(0,i.yJ)((0,c.o1)(!1))}function*R(){yield(0,i.T1)(v);const e=[],[t,o]=yield(0,i.Q7)([(0,i.Lt)(c.HJ),(0,i.Lt)(c.r5)]);t&&e.push((0,i.T1)(A,l.SE.GITHUB)),o&&e.push((0,i.T1)(A,l.SE.BITBUCKET)),yield(0,i.Q7)(e)}function*D(e,t,o){yield(0,i.T1)(O,e,t,o),yield(0,i.T1)(R)}function*N(){yield(0,i.T1)(v),(yield(0,i.Lt)(c.HJ))&&(yield(0,i.T1)(R),yield(0,i.yJ)((0,d.sH)(T)))}function*P(){yield(0,i.T1)(v),(yield(0,i.Lt)(c.r5))&&(yield(0,i.T1)(R),yield(0,i.yJ)((0,d.sH)(S)))}function*L(){yield(0,i.cH)(d.wt,(0,i.T1)(N),T,2500)}function*w(){yield(0,i.cH)(d.wt,(0,i.T1)(P),S,2500)}function*M(e,t){const{state:o}=t;if(o.completionAction!==g.kD.SourceConnectionsPopup)window.close();else{const t=(0,E.appendQueryParams)((0,E.link)(b.a$.CODEBUILD_SOURCE_CONNECTIONS).href,{provider:e});window.location.href=`${window.location.origin}/${t}`}}function*k(e,t,o){const n=(0,a.Ib)();if(e===l.SE.GITHUB||e===l.SE.BITBUCKET){const{code:a,state:r}=t;if(!r||!a)return;if(!r.csrfToken||r.csrfToken!==n)return;try{if(r.target===g.h4.SecretsManager){if(!o)return void(yield(0,i.yJ)((0,h.X8)("oauth-connect-error",{content:(0,y.t)("common:error.generalError")})));yield(0,i.T1)(U,a,e,o)}else e===l.SE.BITBUCKET?yield(0,i.T1)(O,e,a,l.f0):yield(0,i.T1)(O,e,a);if(r.completionAction===g.kD.SourceConnectionsPopup){const t=(0,E.appendQueryParams)((0,E.link)(b.a$.CODEBUILD_SOURCE_CONNECTIONS).href,{provider:e});return void(window.location.href=`${window.location.origin}/${t}`)}window.close()}catch(e){yield(0,i.yJ)((0,h.X8)("oauth-connect-error",{content:(0,f.j)(e)}))}}}function*U(e,t,o){let a=o.encryptedToken;if(!a){var n;const r=yield(0,i.T1)(s.persistOAuthToken,{authCode:e,authServerType:t,oauthAppVersion:t===l.SE.BITBUCKET?l.f0:void 0,returnEncryptedToken:!0});a=null==r||null===(n=r.response)||void 0===n||null===(n=n.encryptedToken)||void 0===n?void 0:n.token,o.setEncryptedToken(a)}yield(0,i.T1)(C.es,{name:o.secretName,description:o.secretDescription,serverType:t,tokenType:l.F1.OAUTH,token:{token:a,username:void 0,password:void 0}})}function*B(e,t,o){const a={token:t,serverType:e.toUpperCase(),authType:o};yield(0,i.T1)(u.p.importSourceCredentials,a)}function*G(e,t,o,a){const n={token:t,serverType:e.toUpperCase(),authType:o};a&&(n.username=a),yield(0,i.yJ)((0,c.o1)(!0)),yield(0,i.T1)(u.p.importSourceCredentials,n),yield(0,i.yJ)((0,c.OR)({[e]:{isConnected:!0}}))}function*W(e,t,o,a){yield(0,i.T1)(G,e,t,o,a),yield(0,i.T1)(R)}},38556:(e,t,o)=>{"use strict";o.d(t,{P:()=>s,h4:()=>n,jK:()=>c,kD:()=>r,xd:()=>a});var i=o(86663);let a=function(e){return e.V1="v1",e.V2="v2",e}({}),n=function(e){return e.CodeBuildManaged="cb",e.SecretsManager="sm",e}({}),r=function(e){return e.Close="c",e.SourceConnectionsPopup="sc",e}({});const s=e=>{const t={csrfToken:"",completionAction:r.Close,target:n.CodeBuildManaged};if(!e)return t;const o=d(e);return o?o.version===a.V1?{...t,csrfToken:o.state.csrfToken}:o.state:t},c=e=>e.version===a.V1?l(e.state):u(e),l=e=>encodeURIComponent(e.csrfToken),d=e=>{const t=decodeURIComponent(e);if(t.startsWith("v=v")){if(t.split(",").length<1)return;const e=i.parse(t);return e.v?m(e):void 0}return{version:a.V1,state:{csrfToken:t}}},u=e=>{if(e.version===a.V2){const t=e.state,o=JSON.stringify({t:t.target,c:t.csrfToken,a:t.completionAction});return p(a.V2,btoa(o))}},p=(e,t)=>encodeURIComponent(`v=${e}&s=${t}`),m=e=>{if(e.v===a.V2){const t=JSON.parse(atob(e.s));return{version:a.V2,state:{csrfToken:t.c,target:t.t,completionAction:t.a}}}}},35306:(e,t,o)=>{"use strict";o.d(t,{Fo:()=>d,_H:()=>s});var i=o(1081),a=o(66480),n=o(48926),r=o(75528);const s=e=>e.location.type===a.a$.CODEBUILD_BUILD_START||e.location.type===a.a$.CODEBUILD_BUILD_START_DEFAULT||e.location.type===a.a$.CODEBUILD_BUILD_START_ADVANCED,c=(0,i.Mz)(r.k,n.h),l=(0,i.Mz)(c,(function(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];return t.filter((e=>void 0!==e))})),d=(0,i.Mz)(l,(e=>!e.length))},12885:(e,t,o)=>{"use strict";o.d(t,{L3:()=>h,NC:()=>u,XV:()=>y,eP:()=>g,u2:()=>p,w2:()=>m,w5:()=>b});var i=o(1081),a=o(25787),n=o(82264),r=o(91501),s=o(90157);const c={},l=(0,i.Mz)((e=>e.codebuild.builds),(e=>e)),d=((0,i.Mz)(l,(e=>(0,n.Z)(e))),(0,i.Mz)(l,((e,t)=>t),((e,t)=>(0,n.Z)(e).filter((e=>e.projectName===t)))),(0,i.Mz)((function(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,r.We)();const i=(0,s.Ae)({buildId:t,accountId:o}).toString();return e.codebuild.builds[i]?e.codebuild.builds[i]:void 0}),(e=>e))),u=(0,i.Mz)((e=>{const{buildId:t}=e.location.payload;return t}),(e=>e)),p=(0,i.Mz)((e=>d(e,u(e),e.location.payload.accountId)),(e=>e)),m=e=>({type:a.mz.SET_BUILDS,payload:e}),h=e=>({type:a.mz.UPDATE_BUILDS,payload:e}),y=()=>({type:a.mz.RESET_BUILDS}),g=(e,t)=>({type:a.mz.SET_BUILDS_FOR_PROJECT,payload:{builds:e,projectArn:t}}),E=(e,t)=>{const o=(0,n.Z)(e).filter((e=>e.projectArn!==t));return(0,n.v)("arn",o)},b=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:c,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case a.mz.SET_BUILDS:return{...(0,n.v)("arn",t.payload)};case a.mz.UPDATE_BUILDS:return{...e,...(0,n.v)("arn",t.payload)};case a.mz.RESET_BUILDS:return{...c};case a.mz.SET_BUILDS_FOR_PROJECT:return{...E(e,t.payload.projectArn),...(0,n.v)("arn",t.payload.builds)}}return e}},18445:(e,t,o)=>{"use strict";o.d(t,{$Lx:()=>ne,$SH:()=>dt,$al:()=>Le,A3f:()=>uo,AM2:()=>so,AY7:()=>mo,Ay$:()=>di,B9v:()=>vo,CJg:()=>mt,CQ6:()=>ze,DO$:()=>_o,DWC:()=>Ke,Dby:()=>F,EaW:()=>si,Ebh:()=>Ge,Ejh:()=>re,F2e:()=>_e,F5Y:()=>Go,Fi7:()=>tt,Fxj:()=>io,GwE:()=>rt,H29:()=>zo,HTA:()=>Xo,HVv:()=>Ct,HYp:()=>Ce,IdH:()=>Ot,IuP:()=>Dt,J4B:()=>Fo,JQd:()=>J,JdN:()=>L,KFh:()=>ei,Lvx:()=>Co,LwB:()=>Pe,M$A:()=>Zo,M$O:()=>ye,MGk:()=>He,Myq:()=>je,NCu:()=>St,NoB:()=>Ro,NyJ:()=>se,NzD:()=>Gt,OEQ:()=>go,OSV:()=>ue,OuI:()=>Ne,P9D:()=>G,P9r:()=>So,PD7:()=>ho,PO3:()=>Ue,P_S:()=>k,PaO:()=>Bo,Qnk:()=>Rt,RKm:()=>Se,RWt:()=>wt,Rv1:()=>ae,S5n:()=>xt,SYj:()=>Pt,SuE:()=>Io,TWM:()=>Jo,TWU:()=>Lo,Ttq:()=>Q,Uow:()=>kt,VWd:()=>Vo,VrY:()=>Mo,Vys:()=>ut,W7R:()=>Ao,WCG:()=>Yo,WGf:()=>Bt,WU_:()=>gt,WfH:()=>Qe,Wp:()=>Wo,XTG:()=>xe,XVZ:()=>Ve,Xup:()=>ee,Y51:()=>Oe,YHm:()=>X,Ygx:()=>K,ZIm:()=>pt,ZQ$:()=>co,Zgy:()=>ft,Zm2:()=>Z,ZqU:()=>To,_Bv:()=>ii,_E_:()=>qe,_M4:()=>we,_bd:()=>no,_t6:()=>ct,a$x:()=>V,a4f:()=>It,ahj:()=>We,b42:()=>Nt,bBk:()=>yt,bGn:()=>te,c93:()=>me,cCo:()=>Xe,cJy:()=>lt,c_Z:()=>z,cls:()=>Be,cxq:()=>oe,dXP:()=>Ie,e35:()=>xo,eKs:()=>Yt,eXg:()=>jo,e_X:()=>Vt,ejN:()=>H,elf:()=>Ee,emn:()=>Po,fx6:()=>$e,gUV:()=>U,gVR:()=>le,gie:()=>ot,guk:()=>Ht,hV$:()=>ro,hkd:()=>ie,i8w:()=>Je,jEZ:()=>B,jNi:()=>pe,k5S:()=>Ft,key:()=>Wt,ktB:()=>fo,llL:()=>Uo,mDj:()=>ko,mGs:()=>lo,mbf:()=>yo,mbn:()=>$,mcs:()=>Ze,mho:()=>w,mns:()=>de,nYf:()=>Oo,n_Y:()=>No,ntv:()=>Me,oP:()=>bt,oZq:()=>ti,ouo:()=>Tt,pMo:()=>Eo,pe5:()=>Do,q$F:()=>Te,q61:()=>at,q6A:()=>Qo,qTG:()=>Xt,qVR:()=>he,qXo:()=>st,r1l:()=>jt,r74:()=>M,rJ2:()=>j,rjf:()=>Fe,rzw:()=>q,sNn:()=>Ut,sbY:()=>ao,shn:()=>De,snq:()=>bo,tot:()=>Ko,uF2:()=>ht,uNJ:()=>Et,uc9:()=>wo,uci:()=>_t,uf9:()=>oi,uv$:()=>Ye,v01:()=>it,vSh:()=>ve,w2n:()=>nt,wGc:()=>$o,wgF:()=>Ae,x9j:()=>Ho,yve:()=>qo,yzB:()=>ce,zIS:()=>fe});var i=o(1081),a=o(89501),n=o(2543),r=o(7474),s=o(89221),c=o(18562),l=o(59759),d=o(86791),u=o(92538),p=o(33585),m=o(52593),h=o(28217),y=o(19971),g=o(1484),E=o(7414),b=o(49348),C=o(46634),f=o(25896),T=o(63158),S=o(46266),v=o(74615),A=o(91501),_=o(24229),O=o(83710),I=o(73808),R=o(73896),D=o(59567),N=o(3751);let P=function(e){return e.CLEAR_FORM="reducer/codebuild/createprojectform/CLEAR_FORM",e.SET_SUBMITTED="reducer/codebuild/createprojectform/SET_SUBMITTED",e.UPDATE_PROJECT_CONFIG="reducer/codebuild/createprojectform/UPDATE_PROJECT_CONFIG",e.ADD_SOURCE="reducer/codebuild/createprojectform/ADD_SOURCE",e.REMOVE_SOURCE="reducer/codebuild/createprojectform/REMOVE_SOURCE",e.UPDATE_SOURCE="reducer/codebuild/createprojectform/UPDATE_SOURCE",e.UPDATE_ENVIRONMENT="reducer/codebuild/createprojectform/UPDATE_ENVIRONMENT",e.UPDATE_FLEET_ENVIRONMENT="reducer/codebuild/createprojectform/UPDATE_FLEET_ENVIRONMENT",e.UPDATE_BUILDSPEC="reducer/codebuild/createprojectform/UPDATE_BUILDSPEC",e.UPDATE_BATCH_BUILDS="reducer/codebuild/createprojectform/UPDATE_BATCH_BUILDS",e.UPDATE_ENCRYPTION_KEY="reducer/codebuild/createprojectform/UPDATE_ENCRYPTION_KEY",e.ADD_ARTIFACT="reducer/codebuild/createprojectform/ADD_ARTIFACT",e.UPDATE_ARTIFACTS="reducer/codebuild/createprojectform/UPDATE_ARTIFACTS",e.UPDATE_CACHE="reducer/codebuild/createprojectform/UPDATE_CACHE",e.UPDATE_CURATED_ENVIRONMENTS="reducer/codebuild/createprojectform/UPDATE_CURATED_ENVIRONMENTS",e.UPDATE_SERVER_ERRORS="reducer/codebuild/createprojectform/UPDATE_SERVER_ERRORS",e.REMOVE_ARTIFACT="reducer/codebuild/createprojectform/REMOVE_ARTIFACT",e.UPDATE_CW_LOGS_CONFIG="reducer/codebuild/createprojectform/UPDATE_CW_LOGS_CONFIG",e.UPDATE_S3_LOGS_CONFIG="reducer/codebuild/createprojectform/UPDATE_S3_LOGS_CONFIG",e}({}),L=function(e){return e.dockerLayerCache="LOCAL_DOCKER_LAYER_CACHE",e.sourceCache="LOCAL_SOURCE_CACHE",e.customCache="LOCAL_CUSTOM_CACHE",e}({});const w=e=>e.codebuild.createProjectForm.submitted,M=e=>e.codebuild.createProjectForm.serverErrorMessage,k=e=>e.codebuild.createProjectForm.projectConfiguration.projectName,U=e=>e.codebuild.createProjectForm.projectConfiguration.description,B=e=>e.codebuild.createProjectForm.projectConfiguration.buildBadge,G=e=>e.codebuild.createProjectForm.projectConfiguration.tags,W=(0,i.Mz)(k,d.$A),x=(0,i.Mz)(U,d._7),F=(0,i.Mz)(W,x,((e,t)=>({name:e,description:t}))),j=e=>e.codebuild.createProjectForm.encryptionKey,H=e=>e.codebuild.createProjectForm.artifacts,z=(e,t)=>e.codebuild.createProjectForm.artifacts[t].artifactIdentifier,V=(e,t)=>e.codebuild.createProjectForm.artifacts[t].type,Y=(e,t)=>e.codebuild.createProjectForm.artifacts[t].type===h.Ko.S3?e.codebuild.createProjectForm.artifacts[t]:void 0,$=e=>(0,E.yn)(Dt(e))||Ke(e)===h.br.FLEET,q=(0,i.Mz)(Y,(e=>e?e.name:void 0)),K=(0,i.Mz)(Y,(e=>!!e&&e.overrideArtifactName)),J=(0,i.Mz)(Y,(e=>e?e.path:void 0)),Q=(0,i.Mz)(Y,(e=>e?e.namespaceType:void 0)),X=(0,i.Mz)(Y,(e=>e?e.bucketName:void 0)),Z=(0,i.Mz)(Y,(e=>e&&e.packaging)),ee=(0,i.Mz)(Y,(e=>e&&e.encryptionDisabled)),te=e=>({type:P.REMOVE_ARTIFACT,payload:e}),oe=(0,i.Mz)(z,(e=>(0,f.$U)(e)&&(0,c.t)("codebuild:createProject.validation.sourceIdentifierRequired"))),ie=(0,i.Mz)(z,V,X,((e,t)=>t),d.yf),ae=e=>e.codebuild.createProjectForm.cache.type,ne=e=>e.codebuild.createProjectForm.cache.bucket,re=e=>e.codebuild.createProjectForm.cache.pathPrefix,se=e=>e.codebuild.createProjectForm.cache.lifecycle,ce=e=>{const t=Ze(e);return!!(0,E.J2)(t)||e.codebuild.createProjectForm.cache.dockerLayerCache},le=e=>e.codebuild.createProjectForm.cache.sourceCache,de=e=>e.codebuild.createProjectForm.cache.customCache,ue=e=>e.codebuild.createProjectForm.cache.lifecycleSubmitted,pe=e=>e.codebuild.createProjectForm.cache.lifecycleLoading,me=e=>e.codebuild.createProjectForm.cache.bucketServerError,he=e=>e.codebuild.createProjectForm.cache.serverError,ye=(0,i.Mz)(ae,ne,re,ce,le,de,d.v8),ge=(0,i.Mz)(ye,(e=>e.bucket||e.path||e.local)),Ee=e=>e.codebuild.createProjectForm.source,be=(e,t)=>e.codebuild.createProjectForm.source[t]||{},Ce=(0,i.Mz)(be,(e=>e.referenceType)),fe=(0,i.Mz)(be,(e=>e.reference)),Te=(0,i.Mz)(be,(e=>e.referenceCommit)),Se=(0,i.Mz)(be,(e=>e.identifier)),ve=(0,i.Mz)(be,(e=>e.provider)),Ae=(0,i.Mz)(be,(e=>e.sourceVersion)),_e=(0,i.Mz)(be,(e=>e.location)),Oe=(0,i.Mz)(be,(e=>e.codeConnectionsScope||h.Vt.ACCOUNT_LEVEL)),Ie=(0,i.Mz)(be,(e=>e.codeConnectionsArn)),Re=(0,i.Mz)(ve,_e,((e,t)=>{if(e===l.sO.s3)return(0,g.h)(t)})),De=(0,i.Mz)(Re,(e=>{if(e)return e.bucket})),Ne=(0,i.Mz)(Re,(e=>{if(e)return e.objectKey})),Pe=(0,i.Mz)(_e,d.N$),Le=(0,i.Mz)(ve,Ce,fe,d.ng),we=(0,i.Mz)(ve,Ce,Te,d.in),Me=(0,i.Mz)(Se,(e=>(0,f.$U)(e)&&(0,c.t)("codebuild:createProject.validation.sourceIdentifierRequired"))),ke=(0,i.Mz)(Se,ve,_e,((e,t)=>t),((e,t,o,i)=>{if(i>0&&(0,f.$U)(e))return(0,c.t)("codebuild:createProject.validation.sourceIdentifierRequired");const a=(0,d.D7)(t,o);return void 0===a||"string"==typeof a?a:a.bucket||a.objectKey})),Ue=(0,i.Mz)(be,(e=>e.gitCloneDepth)),Be=(0,i.Mz)(be,(e=>e.gitSubmodulesConfig)),Ge=(0,i.Mz)(be,(e=>e.insecureSSL)),We=(0,i.Mz)(be,(e=>e.buildStatus)),xe=(0,i.Mz)(be,(e=>e.buildStatusConfig)),Fe=(0,i.Mz)(be,(e=>e.webhook)),je=(0,i.Mz)(be,(e=>e.webhookFilter)),He=(0,i.Mz)(be,(e=>e.webhookFilterGroups)),ze=(0,i.Mz)(be,(e=>e.manualCreation)),Ve=(0,i.Mz)(be,(e=>e.scopeConfiguration)),Ye=(0,i.Mz)(be,(e=>e.oauthRepositoryType)),$e=(0,i.Mz)(ve,Ye,((e,t)=>e===l.sO.gitLab||e===l.sO.gitLabSelfManaged||e===l.sO.gitHubEnt||(e===l.sO.gitHub||e===l.sO.bitBucket)&&(t===b.g3.account||t===b.g3.webhook))),qe=(0,i.Mz)(be,(e=>e.auth)),Ke=e=>e.codebuild.createProjectForm.environment.provisioningModelType,Je=e=>e.codebuild.createProjectForm.environment.fleetArn,Qe=e=>e.codebuild.createProjectForm.environment.fleetState,Xe=e=>e.codebuild.createProjectForm.environment.managedImageType,Ze=e=>e.codebuild.createProjectForm.environment.type,et=(0,i.Mz)(Qe,(e=>null==e?void 0:e.operatingSystem)),tt=e=>e.codebuild.createProjectForm.environment.operatingSystem,ot=(0,i.Mz)(tt,et,d.Ps),it=e=>e.codebuild.createProjectForm.environment.runtime,at=(0,i.Mz)(it,et,d.T3),nt=e=>e.codebuild.createProjectForm.environment.image,rt=(0,i.Mz)(nt,et,d.N3),st=e=>e.codebuild.createProjectForm.environment.imageVersion,ct=e=>e.codebuild.createProjectForm.curatedEnvironmentImages,lt=(0,i.Mz)((e=>{const t=ct(e);if(Ke(e)===h.br.FLEET)switch(Ze(e)){case h.OX.Windows_2019:return Object.keys(t).filter((e=>e.includes("WINDOWS_SERVER_2019")));case h.OX.Windows_2022:return Object.keys(t).filter((e=>e.includes("WINDOWS_SERVER_2022")));case h.OX.Arm:return Object.keys(t).filter((e=>e.includes("AMAZON_LINUX")));case h.OX.LinuxGpu:case h.OX.Linux:return Object.keys(t).filter((e=>e.includes("AMAZON_LINUX")||e.includes("UBUNTU")));default:return Object.keys(t)}return Object.keys(t).filter((e=>!e.includes("WINDOWS_SERVER_2022")))}),(e=>e)),dt=(e,t,o)=>{const i=ct(e);if(void 0!==t)try{const e=i[t].languages,a=(0,E.yn)(o);return Object.keys(e).filter((t=>Object.keys(e[t].images).filter((e=>a?e.includes("lambda"):!e.includes("lambda"))).length>0))}catch{return}},ut=(e,t,o,i)=>{const a=ct(e);if(void 0!==o&&void 0!==i)try{const n=a[o].languages[i].images;if(t)switch(Ze(e)){case h.OX.Arm:return Object.keys(n).filter((e=>e.includes("aarch64")));case h.OX.Linux:return Object.keys(n).filter((e=>!e.includes("aarch64")));default:return Object.keys(n)}return Object.keys(n)}catch{return}},pt=(e,t,o,i)=>{const a=ct(e);if(void 0!==t&&void 0!==o&&void 0!==i)try{return a[t].languages[o].images[i].versions}catch{return}},mt=e=>e.codebuild.createProjectForm.environment.serviceRole.roleName,ht=e=>e.codebuild.createProjectForm.environment.serviceRole.newRole,yt=e=>e.codebuild.createProjectForm.environment.serviceRole.modifyRoleAllowed,gt=(0,i.Mz)(ht,mt,S.cr,d.s),Et=(0,i.Mz)((e=>e.codebuild.createProjectForm.environment.timeout),(e=>e)),bt=(0,i.Mz)(Et,(()=>!0),d.mj),Ct=(0,i.Mz)((e=>e.codebuild.createProjectForm.environment.queuedTimeout),(e=>e)),ft=(0,i.Mz)(Ct,d.mj),Tt=e=>(0,E.yn)(Dt(e)),St=e=>e.codebuild.createProjectForm.environment.customCertificate,vt=(0,i.Mz)(St,(e=>e.codebuild.createProjectForm.environment.certificate),((e,t)=>e?t:void 0)),At=(0,i.Mz)(vt,g.h),_t=(0,i.Mz)(At,(e=>e.bucket)),Ot=(0,i.Mz)(At,(e=>e.objectKey)),It=(0,i.Mz)(St,vt,d.c6),Rt=e=>e.codebuild.createProjectForm.environment.computeType,Dt=e=>e.codebuild.createProjectForm.environment.computeConfig,Nt=e=>e.codebuild.createProjectForm.environment.privilegedMode,Pt=e=>e.codebuild.createProjectForm.environment.customEntrypoint,Lt=(0,i.Mz)((e=>e.codebuild.createProjectForm.environment),(e=>{var t;return null===(t=e.fleetState)||void 0===t?void 0:t.environmentType})),wt=(0,i.Mz)([tt,it,Dt,Lt],((e,t,o,i)=>(0,E.Mo)(e)||i===h.OX.MacArm||e===h.v9.UBUNTU&&t===h.MJ.DOCKER||(0,E.yn)(o))),Mt=(0,i.Mz)(It,(e=>void 0===e?e:e.bucket||e.objectKey)),kt=e=>{const t=tt(e),o=Ze(e);return(0,E.Mo)(t)||(0,E.J2)(o)},Ut=e=>ve(e,0)===l.sO.noSource,Bt=e=>(0,E.H)(Ze(e),Rt(e),Dt(e)),Gt=e=>(0,E.yn)(Dt(e)),Wt=e=>e.codebuild.createProjectForm.buildspec.specification,xt=e=>e.codebuild.createProjectForm.buildspec.buildspec,Ft=(0,i.Mz)(Wt,xt,d.US),jt=e=>e.codebuild.createProjectForm.batchBuilds.batchConfiguration,Ht=e=>e.codebuild.createProjectForm.logsConfig||{},zt=e=>e.codebuild.createProjectForm.logsConfig&&e.codebuild.createProjectForm.logsConfig.s3Logs||{},Vt=e=>(0,g.h)(zt(e).location).bucket,Yt=e=>(0,g.h)(zt(e).location).objectKey,$t=(0,i.Mz)(zt,Vt,d.c3),qt=(0,i.Mz)(G,(e=>{const t=e.map(u.z7).find((e=>!(!e.key&&!e.value)));return void 0===t?t:t.key||t.value})),Kt=function(){let e;for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return o.forEach((t=>{void 0===t||(e=t)})),e},Jt=(0,i.Mz)(W,x,qt,Kt),Qt=(0,i.Mz)(Je,d.Gk),Xt=e=>({noFleetArn:Qt(e)}),Zt=(0,i.Mz)(Ke,(e=>e===h.br.FLEET?(0,i.Mz)(Qt,Kt):()=>{})),eo=(0,i.Mz)(Xe,(e=>{switch(e){case h.ov.customManaged:return(0,i.Mz)(m.xr,Kt);case h.ov.awsManaged:default:return(0,i.Mz)(ot,at,rt,Kt)}})),to=(0,i.Mz)(Ft,Kt),oo=(0,i.Mz)($t,Kt),io=(0,i.Mz)(Jt,(e=>{const t=eo(e),o=Zt(e);return(0,i.Mz)(t,gt,p.ox,p.mT,bt,Mt,C.pk,o,Kt)(e)}),(e=>{const t=Ee(e).map(((t,o)=>ke(e,o)));return Kt(...t)}),to,oo,(e=>{const t=H(e).map(((t,o)=>ie(e,o)));return Kt(...t)}),ge,(function(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];return t.some((e=>void 0!==e))})),ao=e=>{try{return a.s.fromString(e),e}catch{return`arn:${(0,R.PO)()}:secretsmanager:${(0,v.kh)()}:${(0,A.We)()}:secret:${e}`}},no=()=>`arn:${(0,R.PO)()}:secretsmanager:${(0,v.kh)()}:${(0,A.We)()}:secret:/CodeBuild/`,ro=(e,t,o)=>{let{dockerLayerCache:i,sourceCache:a,customCache:n}=e;const r=[];return!t&&i&&r.push(L.dockerLayerCache),o&&a&&r.push(L.sourceCache),n&&r.push(L.customCache),r},so=(e,t)=>{let{source:o}=e;const{referenceType:i,reference:a,referenceCommit:n}=o[t];if(a||n)switch(i){case I.ss.branch:case I.ss.tag:return n&&n.commitId?a&&`${a.referenceName}^{${n.commitId}}`:a&&a.referenceName;case I.ss.commit:return n&&n.commitId;default:return a&&a.commitId}},co=(0,i.Mz)((e=>e.codebuild.createProjectForm),(e=>{var t,o;const{artifacts:i,cache:a,encryptionKey:n,projectConfiguration:c,environment:d,source:u,buildspec:p,logsConfig:m}=e;if(void 0===c.projectName||void 0===d.image)return;let C;C=p.specification===h.ik.overrideOneline?(0,h.$K)(p.buildspec):p.buildspec;const f=c.tags.filter((e=>e.key));let S=h.rq;d.timeout&&(d.timeout.hours||d.timeout.minutes)&&(S=(0,y.LV)({hours:d.timeout.hours,minutes:d.timeout.minutes}));const v=d.queuedTimeout&&(d.queuedTimeout.hours||d.queuedTimeout.minutes)&&(0,y.LV)({hours:d.queuedTimeout.hours,minutes:d.queuedTimeout.minutes}),A={type:a.type};if(a.type===h.PT.s3&&(A.location=(0,g.L)(a.bucket,a.pathPrefix)),(0,r.G7)(s.H.CodeBuildLocalCache)){const e=u[0].provider!==l.sO.noSource;a.type===h.PT.local&&(A.modes=ro(a,(0,E.Mo)(d.type),e))}const[_,...O]=u.map((e=>{var t;const o={type:e.provider,gitCloneDepth:parseInt(e.gitCloneDepth,10),insecureSsl:e.insecureSSL,location:e.location,buildspec:C};var i,a;return e.provider!==l.sO.gitLab&&e.provider!==l.sO.gitLabSelfManaged&&(0,E.QM)(e.provider)&&e.gitSubmodulesConfig&&(o.gitSubmodulesConfig=e.gitSubmodulesConfig),e.identifier&&(o.sourceIdentifier=e.identifier),((e.provider===l.sO.gitHub||e.provider===l.sO.bitBucket)&&e.oauthRepositoryType===b.g3.account||e.provider===l.sO.gitHubEnt||e.provider===l.sO.gitLab||e.provider===l.sO.gitLabSelfManaged)&&(o.reportBuildStatus=e.buildStatus,(null!==(i=e.buildStatusConfig)&&void 0!==i&&i.context||null!==(a=e.buildStatusConfig)&&void 0!==a&&a.targetUrl)&&(0,r.G7)(s.H.CodeBuildConfigurableBuildStatus)&&(o.buildStatusConfig=e.buildStatusConfig)),e.provider!==l.sO.gitLab&&e.provider!==l.sO.gitLabSelfManaged||e.codeConnectionsScope!==h.Vt.PROJECT_LEVEL||!e.codeConnectionsArn?(null===(t=e.auth)||void 0===t?void 0:t.type)===N.UH.SECRETS_MANAGER&&(o.auth={resource:e.auth.resource,type:N.UH.SECRETS_MANAGER}):o.auth={resource:e.codeConnectionsArn,type:N.UH.CODE_CONNECTIONS},o})),[I,...R]=i.map((e=>{let t={type:e.type};if(e.type===h.Ko.S3){const{artifactIdentifier:o,type:i,name:a,overrideArtifactName:n,path:r,bucketName:s,namespaceType:c,packaging:l,encryptionDisabled:d}=e;t={type:i,path:r,packaging:l,namespaceType:c,encryptionDisabled:d,overrideArtifactName:n,name:n?"":a||"",location:s,artifactIdentifier:o||void 0}}return t}));let P=f.length>0?f:void 0;P&&(P=P.filter((e=>e.key)).map((e=>e.value?e:{key:e.key,value:""})));let L,w=u[0].sourceVersion;(0,r.G7)(s.H.CodeBuildSourceVersion)&&u[0].provider===l.sO.codeCommit&&(w=so(e,0)),(0,r.G7)(s.H.CodeBuildSourceVersion)&&O&&(L=O.reduce(((t,o,i)=>{let{type:a,sourceIdentifier:n=""}=o;const r=a===l.sO.codeCommit&&so(e,i+1)||u[i+1].sourceVersion;return n&&r?[...t,{sourceIdentifier:n,sourceVersion:r}]:t}),[]));const M=(0,r.G7)(s.H.CodeBuildProvisionedModel)&&d.provisioningModelType===h.br.FLEET,k=(0,T.X)({sourceVersion:w,secondarySourceVersions:L,timeoutInMinutes:S,queuedTimeoutInMinutes:d.computeConfig!==h.as.lambda||(0,D.Cr)(d.image)?v:void 0,logsConfig:m,artifacts:I,secondaryArtifacts:_.type!==l.sO.codePipeline?R:void 0,cache:A,description:c.description,environment:{certificate:d.customCertificate?d.certificate:void 0,registryCredential:d.registryCredential?{credential:d.registryCredential,credentialProvider:h.ts.secretsManager}:void 0,computeType:M?null===(t=d.fleetState)||void 0===t?void 0:t.computeType:d.computeType,image:d.managedImageType===h.ov.awsManaged&&d.imageVersion||d.image,fleet:M?{fleetArn:d.fleetArn}:void 0,type:M?null===(o=d.fleetState)||void 0===o?void 0:o.environmentType:d.computeConfig===h.as.lambda&&(0,D.Cr)(d.image)?d.type:d.computeConfig===h.as.lambda?d.image.includes("aarch64")?h.OX.ArmLambda:h.OX.LinuxLambda:d.type,privilegedMode:d.privilegedMode,customEntrypoint:d.customEntrypoint},serviceRole:"",name:c.projectName,badgeEnabled:c.buildBadge,source:_,secondarySources:_.type!==l.sO.codePipeline?O:void 0,tags:P});return n&&n.length>0&&(k.encryptionKey=n),k})),lo=e=>({type:P.CLEAR_FORM,payload:e||ni}),uo=e=>({type:P.SET_SUBMITTED,payload:e}),po=e=>({type:P.UPDATE_PROJECT_CONFIG,payload:e}),mo=e=>po({projectName:e}),ho=e=>po({description:e}),yo=e=>po({buildBadge:e}),go=e=>po({tags:e}),Eo=()=>({type:P.ADD_SOURCE}),bo=e=>({type:P.REMOVE_SOURCE,payload:e}),Co=(e,t)=>({type:P.UPDATE_SOURCE,payload:{sourceIndex:e,source:t}}),fo=e=>{const t=(0,E.yn)(e.computeConfig),o=e.fleetState;return e.operatingSystem&&(0,E.Mo)(e.operatingSystem)&&(e.privilegedMode=!1),e.runtime&&e.runtime===h.MJ.DOCKER&&(e.privilegedMode=!0),t&&(e.timeout=(0,y.fD)(h.Hn),e.customCertificate=!1,e.privilegedMode=!1),e.provisioningModelType===h.br.FLEET&&(e.operatingSystem=null==o?void 0:o.operatingSystem,e.type=null==o?void 0:o.environmentType,e.runtime=void 0),{type:P.UPDATE_ENVIRONMENT,payload:e}},To=e=>({type:P.UPDATE_FLEET_ENVIRONMENT,payload:e}),So=e=>fo({serviceRole:{newRole:e,modifyRoleAllowed:!e||void 0,roleName:void 0}}),vo=e=>fo({serviceRole:{roleName:e}}),Ao=e=>fo({serviceRole:{modifyRoleAllowed:e}}),_o=e=>fo({registryCredential:e}),Oo=e=>fo({customCertificate:e}),Io=e=>({type:P.UPDATE_SERVER_ERRORS,payload:e}),Ro=e=>{let t={operatingSystem:e,runtime:void 0,image:void 0,imageVersion:void 0};return(0,E.pR)(e)||(t={...t,computeConfig:h.as.ec2,computeType:h.QE.BUILD_GENERAL1_SMALL}),(0,E.Mo)(e)&&(t={...t,computeType:h.QE.BUILD_GENERAL1_MEDIUM}),fo(t)},Do=e=>{let t={type:e};if(e===h.OX.LinuxGpu||e===h.OX.Arm){if((0,r.G7)(s.H.CodeBuildSmallArmImage)&&e===h.OX.Arm||(0,r.G7)(s.H.CodeBuildLinuxGpuSmallCompute)&&e===h.OX.LinuxGpu)return fo({...t,computeType:h.QE.BUILD_GENERAL1_SMALL});t={...t,computeType:h.QE.BUILD_GENERAL1_LARGE}}return fo(t)},No=e=>fo({runtime:e,image:void 0,imageVersion:void 0}),Po=e=>({type:P.UPDATE_CURATED_ENVIRONMENTS,payload:e}),Lo=e=>fo({timeout:e}),wo=e=>fo({queuedTimeout:e}),Mo=e=>({type:P.UPDATE_BUILDSPEC,payload:e}),ko=()=>({type:P.ADD_ARTIFACT}),Uo=e=>({type:P.UPDATE_CW_LOGS_CONFIG,payload:e}),Bo=e=>({type:P.UPDATE_S3_LOGS_CONFIG,payload:e}),Go=(e,t)=>({type:P.UPDATE_ARTIFACTS,payload:{artifactIndex:e,newArtifacts:t}}),Wo=(e,t)=>{let o=e;return t&&(o={bucketServerError:void 0,serverError:void 0,...e}),{type:P.UPDATE_CACHE,payload:o}},xo=()=>Wo({type:h.PT.none,lifecycleSubmitted:!1,lifecycleLoading:!1}),Fo=e=>{return t=e,{type:P.UPDATE_ENCRYPTION_KEY,payload:t};var t},jo=e=>Wo({type:e}),Ho=e=>Wo({dockerLayerCache:e}),zo=e=>Wo({sourceCache:e}),Vo=e=>Wo({customCache:e}),Yo=e=>Wo({bucket:e}),$o=e=>Wo({pathPrefix:e}),qo=e=>Wo({lifecycle:e}),Ko=(e,t)=>Go(e,{artifactIdentifier:t}),Jo=(e,t)=>{let o={type:t};return t===h.Ko.S3&&(o={type:t,namespaceType:h.V5.NONE,bucketName:"",packaging:h.ln.NONE,name:"",overrideArtifactName:!1,path:""}),Go(e,o)},Qo=(e,t)=>Go(e,{name:t}),Xo=(e,t)=>Go(e,{overrideArtifactName:t}),Zo=(e,t)=>Go(e,{path:t}),ei=(e,t)=>Go(e,{namespaceType:t}),ti=(e,t)=>Go(e,{bucketName:t}),oi=(e,t)=>Go(e,{packaging:t}),ii=(e,t)=>Go(e,{encryptionDisabled:t}),ai={identifier:"",provider:l.sO.noSource,gitCloneDepth:"1",gitSubmodulesConfig:(0,r.G7)(s.H.CodeBuildGitSubmodulesConfig)?O.Vz:void 0,insecureSSL:!1,webhook:!1,buildStatus:!1,oauthRepositoryType:null===b.g3||void 0===b.g3?void 0:b.g3.account,referenceType:I.ss.branch},ni={projectConfiguration:{tags:[{}]},source:[ai],environment:{provisioningModelType:h.br.ON_DEMAND,fleetArn:"",managedImageType:h.ov.awsManaged,type:h.OX.Linux,serviceRole:{newRole:!0},registryCredential:"",computeType:h.QE.BUILD_GENERAL1_SMALL,computeConfig:h.as.ec2,timeout:(0,y.fD)(h.rq),queuedTimeout:(0,r.G7)(s.H.QueuedTTL)?(0,y.fD)(h.ne):void 0,customCertificate:!1,privilegedMode:!1},buildspec:{specification:h.ik.overrideOneline},batchBuilds:{useBatchBuilds:!1},artifacts:[{type:h.Ko.NO_ARTIFACTS}],cache:{type:h.PT.none,lifecycleSubmitted:!1,lifecycleLoading:!1},submitted:!1,curatedEnvironmentImages:{},serverErrorMessage:"",logsConfig:(0,r.G7)(s.H.CodeBuildS3Logs)?{cloudWatchLogs:{status:_.gy.Enabled},s3Logs:{status:_.gy.Disabled}}:void 0},ri=e=>e.reduce(((e,t)=>{return void 0!==t.platform?{...e,[t.platform]:{...t,languages:(o=t.languages,void 0===o?{}:o.reduce(((e,t)=>{return void 0!==t.language?{...e,[t.language]:{...t,images:(o=t.images,void 0===o?{}:o.reduce(((e,t)=>void 0!==t.name?{...e,[t.name]:t}:e),{}))}}:e;var o}),{}))}}:e;var o}),{}),si=e=>{const t=e.toLowerCase();return t.includes("lambda")?t.includes("aarch64")?h.OX.ArmLambda:h.OX.LinuxLambda:t.includes("aarch64")?h.OX.Arm:t.includes("linux")||t.includes("standard")?h.OX.Linux:t.includes("windows")?t.includes("windows-base:2019")?h.OX.Windows_2019:t.includes("windows-base:2022")?h.OX.Windows_2022:h.OX.Windows:null},ci=(e,t,o)=>{try{const i=o===h.as.lambda?h.as.lambda:(e.operatingSystem||"").toString();if(e.operatingSystem&&!e.runtime&&h.IF.has(i)){const o=h.IF.get(i)||["",new RegExp("")];e.runtime=o[0].toString();const a=o[1],n=Object.keys(t[e.operatingSystem].languages[e.runtime].images).filter((e=>a.test(e))).sort(((e,t)=>Number((a.exec(e)||["","-1"])[1])>Number((a.exec(t)||["","-1"])[1])?-1:1));0!==n.length&&(e.image=n[0]),e.type=si(e.image||"")}}catch(e){console.error("Encountered an issue when updating image defaults: "+e)}},li=(e,t,o)=>{const i=(0,n.cloneDeep)(e);return i.operatingSystem||(i.operatingSystem=h.Nk.AMAZON_LINUX),ci(i,t,o),i},di=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ni,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case P.CLEAR_FORM:return t.payload;case P.SET_SUBMITTED:return{...e,submitted:t.payload};case P.UPDATE_SERVER_ERRORS:return{...e,serverErrorMessage:t.payload};case P.UPDATE_CURATED_ENVIRONMENTS:return{...e,environment:li(e.environment,ri(t.payload),e.environment.computeConfig),curatedEnvironmentImages:ri(t.payload)};case P.UPDATE_PROJECT_CONFIG:return{...e,projectConfiguration:{...e.projectConfiguration,...t.payload}};case P.ADD_SOURCE:return{...e,source:[...e.source,{...ai}]};case P.REMOVE_SOURCE:return{...e,source:[...e.source.slice(0,t.payload),...e.source.slice(t.payload+1)]};case P.UPDATE_SOURCE:return{...e,source:[...e.source.slice(0,t.payload.sourceIndex),{...e.source[t.payload.sourceIndex],...t.payload.source},...e.source.slice(t.payload.sourceIndex+1)]};case P.UPDATE_ENVIRONMENT:return o=t.payload,i=e.curatedEnvironmentImages,a=e.environment.computeConfig,n=e.environment.fleetState,o.fleetState||n||(o.computeConfig&&!o.operatingSystem&&(o.operatingSystem=h.Nk.AMAZON_LINUX,o.computeConfig===h.as.ec2&&(o.type=h.OX.Linux)),!o.operatingSystem||o.runtime||o.image||ci(o,i,o.computeConfig?o.computeConfig:a)),{...e,environment:{...e.environment,...t.payload,serviceRole:{...e.environment.serviceRole,...t.payload.serviceRole},timeout:{...e.environment.timeout,...t.payload.timeout}}};case P.UPDATE_FLEET_ENVIRONMENT:return{...e,environment:{...e.environment,fleetState:{...e.environment.fleetState,environmentType:t.payload}}};case P.UPDATE_BUILDSPEC:return{...e,buildspec:{...e.buildspec,...t.payload}};case P.UPDATE_BATCH_BUILDS:return{...e,batchBuilds:{...e.batchBuilds,...t.payload}};case P.UPDATE_CW_LOGS_CONFIG:return{...e,logsConfig:{...e.logsConfig,cloudWatchLogs:t.payload}};case P.UPDATE_S3_LOGS_CONFIG:return{...e,logsConfig:{...e.logsConfig,s3Logs:t.payload}};case P.UPDATE_ENCRYPTION_KEY:return{...e,encryptionKey:t.payload};case P.ADD_ARTIFACT:return{...e,artifacts:[...e.artifacts,{type:h.Ko.NO_ARTIFACTS}]};case P.UPDATE_ARTIFACTS:return{...e,artifacts:[...e.artifacts.slice(0,t.payload.artifactIndex),{...e.artifacts[t.payload.artifactIndex],...t.payload.newArtifacts},...e.artifacts.slice(t.payload.artifactIndex+1)]};case P.UPDATE_CACHE:return{...e,cache:{...e.cache,...t.payload}};case P.REMOVE_ARTIFACT:return{...e,artifacts:[...e.artifacts.slice(0,t.payload),...e.artifacts.slice(t.payload+1)]}}var o,i,a,n;return e}},46634:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>R,EX:()=>p,M9:()=>_,Qb:()=>C,UC:()=>h,aK:()=>m,ad:()=>S,lM:()=>f,mM:()=>c,o6:()=>d,pe:()=>v,pk:()=>E,qh:()=>O,qu:()=>y,x0:()=>T,yX:()=>l,yY:()=>A});var i=o(2543),a=o(59759),n=o(83197),r=o(66480);let s=function(e){return e.UPDATE_ENVIRONMENT_VARIABLE="saga/codebuild/environmentvariables/UPDATE",e.ADD_ENVIRONMENT_VARIABLE="saga/codebuild/environmentvariables/ADD",e.REMOVE_ENVIRONMENT_VARIABLE="saga/codebuild/environmentvariables/REMOVE",e.SET_NEW_PARAMETER_VARIABLE="saga/codebuild/environmentvariables/SET",e.SET_EXISTING_ENVIRONMENT_VARIABLES="saga/codebuild/environmentvariables/SET_ALL",e.SET_AUTO_DISCOVER_ENABLED="saga/codebuild/environmentvariables/SET_AUTO_DISCOVER_ENABLED",e.SET_AUTO_DISCOVER_DIRECTORY="saga/codebuild/environmentvariables/SET_AUTO_DISCOVER_DIRECTORY",e}({});const c="CODEBUILD_CONFIG_AUTO_DISCOVER",l="CODEBUILD_CONFIG_AUTO_DISCOVER_DIR",d={name:"",value:"",type:a.a$.plaintext},u={variables:[d],autoDiscoverEnabled:!0,autoDiscoverDirectory:""},p=e=>e.codebuild.environmentVariables.variables,m=e=>e.codebuild.environmentVariables.autoDiscoverEnabled,h=e=>e.codebuild.environmentVariables.autoDiscoverDirectory,y=e=>g(p(e)),g=e=>(0,i.reject)(e,{name:"",value:""}),E=e=>{const t=g(p(e));return b(t)},b=e=>{if(!(e.length<1))return(0,i.filter)(e,{name:""}).length>0?"Names required":(0,i.uniqBy)(e,"name").length<e.length?"Names must be unique":void 0},C=(e,t)=>""!==t&&(0,i.filter)(e,{name:t}).length>1,f=(e,t)=>({type:s.UPDATE_ENVIRONMENT_VARIABLE,payload:{index:e,newEntry:t}}),T=()=>({type:s.ADD_ENVIRONMENT_VARIABLE}),S=e=>({type:s.REMOVE_ENVIRONMENT_VARIABLE,payload:{itemIndex:e}}),v=e=>({type:s.SET_NEW_PARAMETER_VARIABLE,payload:{value:e}}),A=e=>({type:s.SET_EXISTING_ENVIRONMENT_VARIABLES,payload:{environmentVariables:e}}),_=e=>({type:s.SET_AUTO_DISCOVER_ENABLED,payload:{autoDiscoverEnabled:e}}),O=e=>({type:s.SET_AUTO_DISCOVER_DIRECTORY,payload:{autoDiscoverDirectory:e}}),I=e=>{const t=e.filter((e=>e.name!==c&&e.name!==l));return 0!==t.length?t:u.variables},R=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:u,t=arguments.length>1?arguments[1]:void 0;if((0,r.ED)(t))return u;switch(t.type){case s.UPDATE_ENVIRONMENT_VARIABLE:const o=e.variables,{index:i,newEntry:r}=t.payload,u={...o[i],...r};return{...e,variables:[...e.variables.slice(0,i),u,...e.variables.slice(i+1)]};case n.z.setProject:case s.SET_EXISTING_ENVIRONMENT_VARIABLES:const p=t.payload.environmentVariables;return p&&p.length>0?(e=>({variables:I(e),autoDiscoverEnabled:-1===e.findIndex((e=>e.name===c&&"false"===e.value)),autoDiscoverDirectory:(e.find((e=>e.name===l))||d).value}))(p):e;case s.ADD_ENVIRONMENT_VARIABLE:return{...e,variables:[...e.variables,d]};case s.REMOVE_ENVIRONMENT_VARIABLE:const{itemIndex:m}=t.payload;return{...e,variables:[...e.variables.slice(0,m),...e.variables.slice(m+1)]};case s.SET_NEW_PARAMETER_VARIABLE:const h={name:"",value:t.payload.value,type:a.a$.parameterStore};return{...e,variables:[...e.variables,h]};case s.SET_AUTO_DISCOVER_ENABLED:return{...e,autoDiscoverEnabled:t.payload.autoDiscoverEnabled};case s.SET_AUTO_DISCOVER_DIRECTORY:return{...e,autoDiscoverDirectory:t.payload.autoDiscoverDirectory}}return e}},5683:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>m,DU:()=>p,PL:()=>d,_:()=>l,g2:()=>c,k:()=>u,lK:()=>s});var i=o(1081),a=o(25787),n=o(75528),r=o(28217);const s=e=>({type:a.mz.SET_CURRENT_PROJECT,payload:e}),c=()=>({type:a.mz.RESET_CURRENT_PROJECT}),l=(0,i.Mz)(((e,t)=>Boolean(e.codebuild.projects[t])?e.codebuild.projects[t]:{}),(e=>e)),d=((0,i.Mz)(((e,t)=>Boolean(e.codebuild.projects[t])?[e.codebuild.projects[t].primarySource,...e.codebuild.projects[t].secondarySources]:[]),(e=>e)),(0,i.Mz)((e=>l(e,(0,n.k)(e))),(e=>e))),u=((0,i.Mz)((e=>l(e,(0,n.k)(e))),(e=>e.primaryArtifact)),(0,i.Mz)((e=>l(e,(0,n.k)(e))),(e=>e.environment&&e.environment.toLowerCase().includes("lambda")?r.as.lambda:r.as.ec2))),p=(0,i.Mz)((e=>l(e,(0,n.k)(e))),(e=>e.environment&&e.fleet&&e.fleet.fleetArn?r.br.FLEET:r.br.ON_DEMAND)),m=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1?arguments[1]:void 0;switch(t.type){case a.mz.SET_CURRENT_PROJECT:return t.payload;case a.mz.RESET_CURRENT_PROJECT:return""}return e}},75528:(e,t,o)=>{"use strict";o.d(t,{k:()=>a,v:()=>n});var i=o(1081);const a=(0,i.Mz)((e=>{const{projectName:t}=e.location.payload;return t}),(e=>e)),n=(0,i.Mz)((e=>{const{triggerName:t}=e.location.payload;return t}),(e=>e))},59759:(e,t,o)=>{"use strict";o.d(t,{a$:()=>n,bf:()=>l,bl:()=>i,gC:()=>c,nw:()=>a,qK:()=>r,sO:()=>s});let i=function(e){return e.ALL="RETRY_ALL_BUILDS",e.FAILED="RETRY_FAILED_BUILDS",e}({}),a=function(e){return e.SingleBuild="BUILD",e.BatchBuild="BUILD_BATCH",e}({}),n=function(e){return e.plaintext="PLAINTEXT",e.parameterStore="PARAMETER_STORE",e.secretsManager="SECRETS_MANAGER",e}({}),r=function(e){return e.default="default",e.codeConnection="CodeConnection",e.codeCommit="CodeCommit",e}({}),s=function(e){return e.noSource="NO_SOURCE",e.s3="S3",e.codeCommit="CODECOMMIT",e.codePipeline="CODEPIPELINE",e.gitHub="GITHUB",e.bitBucket="BITBUCKET",e.gitHubEnt="GITHUB_ENTERPRISE",e.gitLab="GITLAB",e.gitLabSelfManaged="GITLAB_SELF_MANAGED",e}({}),c=function(e){return e.codePipeline="CODEPIPELINE",e.s3="S3",e.noArtifacts="NO_ARTIFACTS",e}({}),l=function(e){return e.none="NONE",e.zip="ZIP",e}({})},56990:(e,t,o)=>{"use strict";o.d(t,{k:()=>i});let i=function(e){return e.PRIVATE="PRIVATE",e.PUBLIC_READ="PUBLIC_READ",e}({})},25787:(e,t,o)=>{"use strict";o.d(t,{NK:()=>n,kd:()=>s,mz:()=>a,o_:()=>r});var i=o(18562);let a=function(e){return e.SET_PROJECTS="reducer/codebuild/projects/SET_PROJECTS",e.UPDATE_PROJECTS="reducer/codebuild/projects/UPDATE_PROJECTS",e.SET_CURRENT_PROJECT="reducer/codebuild/projects/SET_CURRENT_PROJECT",e.RESET_CURRENT_PROJECT="reducer/codebuild/projects/RESET_CURRENT_PROJECT",e.SET_BUILDS="reducer/codebuild/builds/SET_BUILDS",e.SET_BUILDS_FOR_PROJECT="reducer/codebuild/builds/SET_BUILDS_FOR_PROJECT",e.UPDATE_BUILDS="reducer/codebuild/builds/UPDATE_BUILDS",e.RESET_BUILDS="reducer/codebuild/builds/RESET_BUILDS",e.SET_LOGS="reducer/codebuild/logs/SET_LOGS",e.UPDATE_LOGS="reducer/codebuild/logs/UPDATE_LOGS",e.RESET_LOGS="reducer/codebuild/logs/RESET_LOGS",e.START_BUILD_UPDATE_SOURCE_LIST="reducer/codebuild/builds/START_BUILD_UPDATE_SOURCE_LIST",e.START_BUILD_UPDATE_REFERENCE="reducer/codebuild/builds/START_BUILD_UPDATE_REFERENCE",e.START_BUILD_UPDATE_SOURCE_VERSION="reducer/codebuild/builds/START_BUILD_SOURCE_VERSION",e.START_BUILD_UPDATE_SOURCE_VERSION_REFERENCE_TYPE="reducer/codebuild/builds/START_BUILD_SOURCE_VERSION_REFERENCE_TYPE",e.START_BUILD_UPDATE_SOURCE_VERSION_REFERENCE_COMMIT="reducer/codebuild/builds/START_BUILD_SOURCE_VERSION_REFERENCE_COMMIT",e.START_BUILD_UPDATE_TIMEOUT="reducer/codebuild/builds/START_BUILD_UPDATE_TIMEOUT",e.START_BUILD_UPDATE_BUILD_TYPE="reducer/codebuild/builds/START_BUILD_UPDATE_BUILD_TYPE",e.START_BUILD_UPDATE_GIT_CLONE_DEPTH="reducer/codebuild/builds/START_BUILD_UPDATE_GIT_CLONE_DEPTH",e.START_BUILD_UPDATE_ARTIFACTS_DISABLED="reducer/codebuild/builds/START_BUILD_UPDATE_ARTIFACTS_DISABLED",e.START_BUILD_FROM_BUILD="reducer/codebuild/builds/START_BUILD_FROM_BUILD",e.START_BUILD_FROM_BUILD_AND_REDIRECT="reducer/codebuild/builds/START_BUILD_FROM_BUILD_AND_REDIRECT",e.START_BUILD_UPDATE_LOADING="reducer/codebuild/builds/START_BUILD_UPDATE_LOADING",e.START_BUILD_RESET_START_BUILD="reducer/codebuild/builds/START_BUILD_RESET_START_BUILD",e.START_BUILD_UPDATE_START_BUILD="reducer/codebuild/builds/START_BUILD_UPDATE_START_BUILD",e.START_BUILD_UPDATE_HAS_SUBMITTED="reducer/codebuild/builds/START_BUILD_UPDATE_HAS_SUBMITTED",e.START_BUILD_UPDATE_IS_SUBMITTING="reducer/codebuild/builds/START_BUILD_UPDATE_IS_SUBMITTING",e.DEBUG_BUILD_PRECHECK_ERROR="reducer/codebuild/builds/DEBUG_BUILD_PRECHECK_ERROR",e.LIST_BUILDS_UPDATE_LOADING="reducer/codebuild/builds/LIST_BUILDS_UPDATE_LOADING",e.DELETE_BUILDS="saga/codebuild/builds/DELETE_BUILDS",e.STOP_BUILD="saga/codebuild/builds/STOP_BUILD",e}({});const n={SUCCEEDED:{status:"SUCCEEDED",label:(0,i.t)("codebuild:buildStatus.label.succeeded")},FAILED:{status:"FAILED",label:(0,i.t)("codebuild:buildStatus.label.failed")},FAULT:{status:"FAULT",label:(0,i.t)("codebuild:buildStatus.label.fault")},TIMED_OUT:{status:"TIMED_OUT",label:(0,i.t)("codebuild:buildStatus.label.timedOut")},IN_PROGRESS:{status:"IN_PROGRESS",label:(0,i.t)("codebuild:buildStatus.label.inProgress")},STOPPED:{status:"STOPPED",label:(0,i.t)("codebuild:buildStatus.label.stopped")},CLIENT_ERROR:{status:"CLIENT_ERROR",label:(0,i.t)("codebuild:buildStatus.label.clientError")},RETRY:{status:"RETRY",label:(0,i.t)("codebuild:buildStatus.label.retry")},PENDING:{status:"PENDING",label:(0,i.t)("codebuild:buildStatus.label.pending")}},r=5e3,s=5},86791:(e,t,o)=>{"use strict";o.d(t,{$A:()=>g,D7:()=>b,Gk:()=>R,N$:()=>C,N3:()=>P,Ps:()=>D,T3:()=>N,US:()=>_,_7:()=>E,c3:()=>I,c6:()=>B,in:()=>T,mj:()=>F,nF:()=>Y,ng:()=>f,s:()=>L,v8:()=>V,yf:()=>j,yv:()=>S});var i=o(7474),a=o(18562),n=o(28217),r=o(59759),s=o(1484),c=o(19971),l=o(25896),d=o(24229),u=o(89221),p=o(73808),m=o(55178);const h=/^[A-Za-z0-9][A-Za-z0-9\-_]{1,254}$/,y=new RegExp(/^[A-Za-z0-9+=,.@_-]*$/),g=e=>e?e.length>255?(0,a.t)("codebuild:createProject.validation.projectNameRequired"):e.length<2?(0,a.t)("codebuild:createProject.validation.nameTooLong"):h.test(e)?void 0:(0,a.t)("codebuild:createProject.validation.nameInvalidCharacters"):(0,a.t)("codebuild:createProject.validation.projectNameRequired"),E=e=>{if(void 0!==e)return e.length>255?(0,a.t)("codebuild:createProject.validation.descriptionTooLong"):void 0},b=(e,t)=>{switch(e){case r.sO.codeCommit:case r.sO.gitLab:case r.sO.gitLabSelfManaged:return C(t);case r.sO.s3:return S(t);default:return}},C=e=>{if(void 0===e||""===e)return(0,a.t)("codebuild:createProject.validation.repositoryRequired")},f=(e,t,o)=>{if(e===r.sO.codeCommit&&(0,i.G7)(u.H.CodeBuildSourceVersion)&&t!==p.ss.commit)return o&&o.referenceName?void 0:t===p.ss.branch?(0,a.t)("codebuild:createProject.validation.branch.required"):t===p.ss.tag?(0,a.t)("codebuild:createProject.validation.tag.required"):(0,a.t)("codebuild:createProject.validation.reference.required")},T=(e,t,o)=>{if(e===r.sO.codeCommit&&(0,i.G7)(u.H.CodeBuildSourceVersion))return t!==p.ss.commit||o&&o.commitId?void 0:(0,a.t)("codebuild:createProject.validation.commitId.required")},S=e=>{const{bucket:t,objectKey:o}=(0,s.h)(e),i={};return t||o?o?t?o&&o.endsWith("//")&&(i.objectKey=(0,a.t)("codebuild:createProject.validation.invalidS3Prefix")):i.bucket=(0,a.t)("codebuild:createProject.validation.bucketRequired"):i.objectKey=(0,a.t)("codebuild:createProject.validation.folderRequired"):(i.objectKey=(0,a.t)("codebuild:createProject.validation.folderRequired"),i.bucket=(0,a.t)("codebuild:createProject.validation.bucketRequired")),i},v=(0,a.t)("codebuild:createProject.validation.buildSpecRequired");let A;const _=(e,t)=>(A||o.e(8096).then(o.t.bind(o,57210,23)).then((e=>{A=e.safeLoad})).catch(),O(e,t,A)),O=(e,t,o)=>{if((e===n.ik.overrideOneline||e===n.ik.overrideWithEditor)&&!t)return v;if(e===n.ik.overrideWithEditor){if(!o)return;try{o(t)}catch(e){return e.message}}},I=(e,t)=>{if((0,i.G7)(u.H.CodeBuildS3Logs)&&(0,d.ZH)(e)&&!t)return(0,a.t)("codebuild:createProject.validation.s3Logs.locationRequired")},R=e=>{if(!e)return(0,a.t)("codebuild:createProject.validation.fleetArn")},D=(e,t)=>{if(void 0===e&&t!==m.fr.MAC)return(0,a.t)("codebuild:createProject.validation.operatingSystemRequired")},N=(e,t)=>{if(void 0===e&&t!==m.fr.MAC)return(0,a.t)("codebuild:createProject.validation.imageTypeRequired")},P=(e,t)=>{if(void 0===e&&t!==m.fr.MAC)return(0,a.t)("codebuild:createProject.validation.imageVersionRequired")},L=(e,t,o)=>void 0!==t&&t.trim()?e&&o&&o.find((e=>e.value===t||e.label===t))?(0,a.t)("codebuild:createProject.validation.roleNameExists"):e&&!y.test(t)?(0,a.t)("codebuild:createProject.validation.invalidRoleName"):void 0:e?(0,a.t)("codebuild:createProject.validation.roleNameRequired"):(0,a.t)("codebuild:createProject.validation.roleRequired"),w=(0,a.t)("codebuild:createProject.validation.bucketRequired"),M=(0,a.t)("codebuild:createProject.validation.objectKeyRequired"),k=(0,a.t)("codebuild:createProject.validation.certInvalidKey"),U=(0,i.G7)(u.H.CodeBuildProlongedBuild),B=(e,t)=>{if(!e)return;const{bucket:o,objectKey:i}=(0,s.h)(t),a={};return o||(a.bucket=w),i?i.endsWith(".pem")||i.endsWith(".zip")||(a.objectKey=k):a.objectKey=M,a},G=(0,a.t)("codebuild:createProject.validation.invalidTimeout",{minTimeoutMinutes:n.tw,maxTimeoutMinutes:n.ni}),W=U?n.eW:n.ni,x=(0,a.t)("codebuild:createProject.validation.invalidTimeout",{minTimeoutMinutes:n.Gx,maxTimeoutMinutes:W}),F=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{const o=(0,c.LV)(e);return t?o>=n.Gx&&o<=W?void 0:x:o>=n.tw&&o<=n.ni?void 0:G}catch(e){return x}},j=(e,t,o,i)=>i>0&&(0,l.$U)(e)?(0,a.t)("codebuild:createProject.validation.artifactIdentifierRequired"):t===n.Ko.S3?o?void 0:(0,a.t)("codebuild:createProject.validation.artifactBucketRequired"):void 0,H=new RegExp("^(([0-9a-zA-Z!_'()\\-\\.\\*])*(/[0-9a-zA-Z!_'()\\-\\.\\*]+)*(/)?)$"),z=(0,a.t)("codebuild:createProject.validation.invalidS3Prefix"),V=(e,t,o,r,s,c)=>{const l={};return e===n.PT.none||(e===n.PT.s3&&(void 0===t&&(l.bucket=w),l.path=(e=>{if(e&&!H.test(e))return z})(o)),(0,i.G7)(u.H.CodeBuildLocalCache)&&e===n.PT.local&&(r||s||c||(l.local=(0,a.t)("codebuild:cache.local.error")))),l},Y=e=>{if(void 0===e)return(0,a.t)("codebuild:createProject.validation.lifecycleRequired");const t=Number(e);return isNaN(t)?(0,a.t)("codebuild:createProject.validation.lifecycleMustBeNumber"):Math.floor(t)<=0?(0,a.t)("codebuild:createProject.validation.lifecycleMustBePositive"):void 0}},48926:(e,t,o)=>{"use strict";o.d(t,{S:()=>r,h:()=>n});var i=o(18562),a=o(59759);const n=e=>{if(!e)return(0,i.t)("codebuild:startBuildValidators.validation.projectNameRequired")},r=(e,t)=>e.some(((e,o)=>!!e.location&&e.location.endsWith("/")&&e.type===a.sO.s3&&!!t[o]))},52593:(e,t,o)=>{"use strict";o.d(t,{AB:()=>p,Al:()=>y,Ay:()=>O,KN:()=>h,Pm:()=>E,Um:()=>g,Xf:()=>T,Y:()=>C,Z:()=>f,b$:()=>m,dc:()=>b,mu:()=>A,nz:()=>v,xr:()=>_});var i=o(2543),a=o(88437),n=o(91601),r=o(28217),s=o(18445),c=o(7414),l=o(7474),d=o(89221);let u=function(e){return e.RESET_VIEW_STATE="reducers/codebuild/customImage/RESET_VIEW_STATE",e.SET_COMPUTE_CONFIG="reducers/codebuild/customImage/SET_COMPUTE_CONFIG",e.SET_ENVIRONMENT_TYPE="reducers/codebuild/customImage/SET_ENVIRONMENT_TYPE",e.SET_CUSTOM_IMAGE_TYPE="reducers/codebuild/customImage/SET_CUSTOM_IMAGE_TYPE",e.SET_IMAGE_CREDENTIAL_TYPE="reducers/codebuild/customImage/SET_IMAGE_CREDENTIAL_TYPE",e.SET_REGISTRY_CREDENTIAL="reducers/codebuild/customImage/SET_REGISTRY_CREDENTIAL",e.SET_CUSTOM_ENVIRONMENT_IMAGE="reducers/codebuild/customImage/SET_CUSTOM_ENVIRONMENT_IMAGE",e}({});const p=()=>Object.keys(r.OX).map((e=>({value:r.OX[e],label:(0,c.EK)(r.OX[e])}))).filter((e=>e.value===r.OX.Linux||e.value===r.OX.LinuxGpu&&(0,l.G7)(d.H.CodeBuildLinuxGpuImage)||e.value===r.OX.Arm&&(0,l.G7)(d.H.CodeBuildArmImage)||e.value===r.OX.Windows_2019&&(0,l.G7)(d.H.CodeBuildWindows2019)||(0,c.yn)(e.value))),m=()=>Object.keys(r.OX).map((e=>({value:r.OX[e],label:(0,c.EK)(r.OX[e])}))).filter((e=>e.value===r.OX.LinuxLambda&&(0,l.G7)(d.H.CodeBuildLambda)||e.value===r.OX.ArmLambda&&(0,l.G7)(d.H.CodeBuildLambda)||(0,c.yn)(e.value))),h=e=>({type:u.SET_COMPUTE_CONFIG,payload:e}),y=e=>({type:u.SET_ENVIRONMENT_TYPE,payload:e}),g=()=>({type:u.RESET_VIEW_STATE});let E=function(e){return e.Ecr="Ecr",e.Custom="Custom",e}({});const b=e=>({type:u.SET_CUSTOM_IMAGE_TYPE,payload:e}),C=e=>({type:u.SET_CUSTOM_ENVIRONMENT_IMAGE,payload:e}),f=e=>({type:u.SET_IMAGE_CREDENTIAL_TYPE,payload:e}),T=e=>({type:u.SET_REGISTRY_CREDENTIAL,payload:e}),S={selectedComputeConfig:r.as.ec2,selectedEnvironmentType:void 0,selectedCustomEnvironmentImage:void 0,customImageType:E.Ecr,selectedCredentialType:r.J3.projectRole,selectedRegistryCredential:""},v=e=>e.codebuild.customImageViewState,A=e=>(0,c.yn)(e.codebuild.createProjectForm.environment.computeConfig)||(0,c.yn)(e.codebuild.editProjectForm.environment.image.computeConfig),_=e=>{const{selectedEnvironmentType:t,selectedCustomEnvironmentImage:o,customImageType:c}=v(e),l=(()=>{switch(c){case E.Ecr:return(0,n.$s)(e);case E.Custom:return(0,s.DWC)(e)===r.br.FLEET&&(0,s.i8w)(e)?[(0,a.P3)(o)]:[(0,a.e)(t),(0,a.P3)(o)]}})();return(0,i.find)(l,(e=>!!e))},O=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:S,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case u.SET_COMPUTE_CONFIG:return{...e,selectedComputeConfig:t.payload};case u.SET_ENVIRONMENT_TYPE:return{...e,selectedEnvironmentType:t.payload};case u.SET_CUSTOM_ENVIRONMENT_IMAGE:return{...e,selectedCustomEnvironmentImage:t.payload};case u.SET_CUSTOM_IMAGE_TYPE:return{...e,customImageType:t.payload};case u.SET_IMAGE_CREDENTIAL_TYPE:return{...e,selectedCredentialType:t.payload};case u.SET_REGISTRY_CREDENTIAL:return{...e,selectedRegistryCredential:t.payload};case u.RESET_VIEW_STATE:return{...S};default:return e}}},88437:(e,t,o)=>{"use strict";o.d(t,{P3:()=>r,e:()=>n});var i=o(18562);const a=e=>t=>t?void 0:e,n=a((0,i.t)("codebuild:environmentType.validation.empty")),r=a((0,i.t)("codebuild:environmentImage.validation.empty"))},34141:(e,t,o)=>{"use strict";o.d(t,{$I:()=>l,Ay:()=>m,CS:()=>s,HX:()=>d,J3:()=>r,LL:()=>c,cA:()=>n,he:()=>u});var i=o(2543);const a=e=>e.map((e=>{let{imageTag:t,imageDigest:o}=e;return{imageTag:t,imageDigest:o}}));let n=function(e){return e.SET_ECR_REPOSITORIES="reducers/codebuild/createprojectform/SET_ECR_REPOSITORIES",e.SET_ECR_IMAGES="reducers/codebuild/createprojectform/SET_ECR_IMAGES",e.FETCH_ECR_IMAGES_FROM_SELECTED_REPOSITORY="reducers/codebuild/createprojectform/FETCH_ECR_IMAGES_FROM_SELECTED_REPOSITORY",e}({});const r=e=>({type:n.SET_ECR_REPOSITORIES,payload:e}),s=e=>({type:n.FETCH_ECR_IMAGES_FROM_SELECTED_REPOSITORY,payload:e}),c=e=>({type:n.SET_ECR_IMAGES,payload:a(e)}),l=e=>e.codebuild.ecr.service.repositories,d=e=>e.codebuild.ecr.service.images,u=e=>t=>{const{repositories:o}=e.codebuild.ecr.service;return(0,i.find)(o,(e=>e.repositoryName===t))},p={repositories:[],images:[]},m=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:p,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case n.SET_ECR_REPOSITORIES:return{...e,repositories:t.payload};case n.SET_ECR_IMAGES:return{...e,images:t.payload};default:return e}}},91601:(e,t,o)=>{"use strict";o.d(t,{$5:()=>h,$s:()=>m,Ay:()=>E,B3:()=>p,Oy:()=>c,Um:()=>s,bq:()=>u,jr:()=>l,sH:()=>y,y1:()=>d});var i=o(2543),a=o(34141),n=o(3331);let r=function(e){return e.RESET_VIEW_STATE="reducers/codebuild/createprojectform/RESET_VIEW_STATE",e.SET_ECR_SELECTED_ACCOUNT_TYPE="reducers/codebuild/createprojectform/SET_ECR_SELECTED_ACCOUNT_TYPE",e.SET_ECR_SELECTED_REPOSITORY="reducers/codebuild/createprojectform/SET_ECR_SELECTED_REPOSITORY",e.SET_ECR_SELECTED_IMAGE="reducers/codebuild/createprojectform/SET_ECR_SELECTED_IMAGE",e}({});const s=()=>({type:r.RESET_VIEW_STATE});let c=function(e){return e.internal="internal",e.external="external",e}({});const l=e=>({type:r.SET_ECR_SELECTED_ACCOUNT_TYPE,payload:e}),d=e=>({type:r.SET_ECR_SELECTED_REPOSITORY,payload:e}),u=e=>({type:r.SET_ECR_SELECTED_IMAGE,payload:e}),p=e=>e.codebuild.ecr.view,m=e=>{const{selectedAccountType:t,selectedRepository:o,selectedImage:a}=p(e);switch(t){case c.internal:return(0,i.find)([(0,n.N$)(o),(0,n.QW)(a)],(e=>!!e));case c.external:return(0,i.find)([(0,n.rg)(a)],(e=>!!e))}},h=e=>(0,a.$I)(e).map((e=>({value:e.repositoryName,label:e.repositoryName}))),y=e=>{const{selectedRepository:t}=p(e),o=(0,a.he)(e)(t);return o&&o.repositoryUri?(0,a.HX)(e).map((e=>({value:e.imageTag?`${o.repositoryUri}:${e.imageTag}`:`${o.repositoryUri}@${e.imageDigest}`,label:e.imageTag||e.imageDigest}))):[]},g={selectedAccountType:c.internal,selectedRepository:void 0,selectedImage:void 0},E=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case r.SET_ECR_SELECTED_ACCOUNT_TYPE:return{...e,selectedAccountType:t.payload};case r.SET_ECR_SELECTED_REPOSITORY:return{...e,selectedRepository:t.payload};case r.SET_ECR_SELECTED_IMAGE:return{...e,selectedImage:t.payload};case r.RESET_VIEW_STATE:return{...g};default:return e}}},59567:(e,t,o)=>{"use strict";o.d(t,{AA:()=>n,Cr:()=>r,Xj:()=>i,Y8:()=>a,_p:()=>s});const i="@sha256:",a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(!e.includes(i)){const[t,o]=e.split(":");return{selectedRepositoryUri:t,selectedTag:o,selectedDigest:""}}const[t,o]=e.split(i),[a,n]=(t||"").split(":");return{selectedRepositoryUri:a,selectedTag:n,selectedDigest:o}},n=e=>!!/^public\.ecr\.aws\/[:\.\-_/#A-Za-z0-9]*$/.exec(e),r=e=>!(!/^public\.ecr\.aws\/[:\.\-_/#A-Za-z0-9]*$/.exec(e)&&!/\d{12}\.dkr\.ecr\.([a-z\-]+[0-9]+)\.amazonaws\.com[.]?[a-z]{0,3}\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(:[a-zA-Z0-9_.-]+)?(@sha256:[A-Fa-f0-9]{64})?$/.exec(e)),s=e=>{const t=/(\d+)\.[^\.]+\.ecr\.(.+)\.amazonaws\.(com|com.cn)?\/(.+)/.exec(e);if(t){const[,e,o,,i]=t;return{accountId:e,region:o,repositoryName:i}}return{}}},3331:(e,t,o)=>{"use strict";o.d(t,{N$:()=>s,QW:()=>d,rg:()=>c,w$:()=>u});var i=o(18562),a=o(59567);const n=e=>t=>t?void 0:e,r=/^\d+$/,s=n((0,i.t)("codebuild:ecr.validation.selectRepository")),c=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const{selectedRepositoryUri:t}=(0,a.Y8)(e);if((0,a.AA)(t))return;const{accountId:o,repositoryName:n}=(0,a._p)(t);return o&&n&&r.test(o)?void 0:(0,i.t)("codebuild:ecr.validation.selectRepositoryUri")},l=(0,i.t)("codebuild:ecr.validation.selectImage"),d=n(l),u=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return(0,a.Y8)(e).selectedTag?void 0:l}},13953:(e,t,o)=>{"use strict";o.d(t,{UB:()=>h,Vz:()=>r,ZA:()=>y,_b:()=>p,eG:()=>m,eu:()=>E,oO:()=>c,oU:()=>n,os:()=>s,z8:()=>l});var i=o(1081),a=o(2543);let n=function(e){return e.UPDATE_AVAILABLE_VPCS="saga/codebuild/createprojectform/UPDATE_AVAILABLE_VPCS",e.FETCH_SUBNETS="saga/codebuild/createprojectform/FETCH_SUBNETS",e.FETCH_SUBNETS_AND_SECURITY_GROUPS="saga/codebuild/createprojectform/FETCH_SUBNETS_AND_SECURITY_GROUPS",e.FETCH_SUBNETS_AND_SECURITY_GROUPS_WITH_DEFAULT="saga/codebuild/createprojectform/FETCH_SUBNETS_AND_SECURITY_GROUPS_WITH_DEFAULT",e.UPDATE_SUBNETS_AND_SECURITY_GROUPS="saga/codebuild/createprojectform/UPDATE_SUBNETS_AND_SECURITY_GROUPS",e}({});const r=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;return{type:n.UPDATE_AVAILABLE_VPCS,payload:e.filter((e=>!(!e.VpcId||e.OwnerId&&t&&e.OwnerId!==t))).map((e=>({value:e.VpcId,label:e.VpcId,description:u(e),labelTag:e.IsDefault?"Default":""})))}},s=(e,t)=>({type:n.UPDATE_SUBNETS_AND_SECURITY_GROUPS,payload:{subnets:e.filter((e=>!!e.SubnetId)).map((e=>({value:e.SubnetId,label:e.SubnetId,description:u(e),labelTag:e.AvailabilityZone}))),securityGroups:null==t?void 0:t.filter((e=>!!e.GroupId)).map((e=>({value:e.GroupId,label:e.GroupId,description:e.GroupName})))}}),c=e=>({type:n.FETCH_SUBNETS_AND_SECURITY_GROUPS,payload:e}),l=e=>({type:n.FETCH_SUBNETS_AND_SECURITY_GROUPS_WITH_DEFAULT,payload:e}),d=e=>t=>o=>(0,i.Mz)((t=>e(t.codebuild.vpcs.service)),(e=>{const i=Array.isArray(o)?e.filter((e=>(0,a.find)(o,(t=>e.value===t)))):(0,a.find)(e,(e=>e.value===o))||null;return t(i)})),u=e=>{if(!e.Tags)return;const t=e.Tags.find((e=>"Name"===e.Key));return t&&t.Value||(0,a.get)(e,"Tags[0].Value","")},p=d((e=>{let{vpcs:t}=e;return t})),m=d((e=>{let{subnets:t}=e;return t})),h=d((e=>{let{securityGroups:t}=e;return t})),y=e=>e.codebuild.vpcs.service,g={vpcs:[],subnets:[],securityGroups:[]},E=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case n.UPDATE_AVAILABLE_VPCS:return{vpcs:t.payload,subnets:[],securityGroups:[]};case n.UPDATE_SUBNETS_AND_SECURITY_GROUPS:return{...e,...t.payload}}return e}},33585:(e,t,o)=>{"use strict";o.d(t,{k5:()=>d,mT:()=>C,pi:()=>f,hQ:()=>m,YD:()=>g,ox:()=>b,hG:()=>E,Ve:()=>p,__:()=>v,EK:()=>S,Ml:()=>T,jr:()=>u,Hk:()=>h,Up:()=>_});var i=o(1081),a=o(13953),n=o(18562);const r=e=>(t,o)=>o&&0===t.length&&e||void 0,s=r((0,n.t)("codebuild:vpc.validation.subnetsEmpty")),c=r((0,n.t)("codebuild:vpc.validation.securityGroupsEmpty"));var l=o(66480);let d=function(e){return e.GET_VPCTYPE_FROM_SERVICE_AND_SET_SELECTED="reducers/codebuild/vpc/GET_VPCTYPE_FROM_SERVICE_AND_SET_SELECTED",e.SET_SELECTED_VPC_TYPE="reducers/codebuild/vpc/SET_SELECTED_VPC_TYPE",e.RESET_SELECTED_VPC_TYPES="reducers/codebuild/vpc/RESET_SELECTED_VPC_TYPES",e}({});const u=e=>({type:d.SET_SELECTED_VPC_TYPE,payload:e}),p=()=>({type:d.RESET_SELECTED_VPC_TYPES}),m=e=>({type:d.GET_VPCTYPE_FROM_SERVICE_AND_SET_SELECTED,payload:e}),h=e=>e?e.map((e=>{let{value:t,label:o,description:i,labelTag:a}=e;return t&&{value:t,label:o,description:i,labelTag:a}})).filter((e=>e)):[],y=e=>e.value,g=(0,i.Mz)((e=>e.codebuild.vpcs.view),(e=>{let{vpc:t,subnets:o,securityGroups:i}=e;return{selectedVpcId:t?y(t):void 0,selectedSubnetsIds:o.map(y),selectedSecurityGroupsIds:i.map(y)}})),E=(0,i.Mz)(a.ZA,(e=>{let{vpcs:t,subnets:o,securityGroups:i}=e;return{vpcs:h(t),subnets:h(o),securityGroups:h(i)}})),b=(0,i.Mz)(g,(e=>{let{selectedVpcId:t,selectedSubnetsIds:o}=e;return s(o,t)})),C=(0,i.Mz)(g,(e=>{let{selectedVpcId:t,selectedSecurityGroupsIds:o}=e;return c(o,t)})),f=(0,i.Mz)((e=>e.codebuild.vpcs.view),(e=>{let{vpc:t,subnets:o,securityGroups:i}=e;return t?{vpcId:y(t),subnets:o.map(y),securityGroupIds:i.map(y)}:null})),T=(0,a._b)((e=>({vpc:e}))),S=(0,a.eG)((e=>({subnets:e}))),v=(0,a.UB)((e=>({securityGroups:e}))),A={vpc:null,subnets:[],securityGroups:[]},_=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:A,t=arguments.length>1?arguments[1]:void 0;if((0,l.ED)(t))return A;switch(t.type){case d.SET_SELECTED_VPC_TYPE:return{...e,...t.payload};case d.RESET_SELECTED_VPC_TYPES:return{...A}}return e}},86619:(e,t,o)=>{"use strict";o.d(t,{A:()=>r,r:()=>n});var i=o(83197);const a={},n=e=>e.codebuild.editProjectForm.buildBatchConfig,r=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case i.z.setProject:const{buildBatchConfig:o}=t.payload;return o||e;case i.z.resetEdit:return a;default:return e}}},92972:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>C,S5:()=>u,W_:()=>b,gN:()=>g,k5:()=>m,ke:()=>p,ux:()=>y,zt:()=>E});var i=o(1081),a=o(28217),n=o(83197),r=o(86791),s=o(73643),c=function(e){return e.updateBuildspec="codebuild/editProject/buildspec/updateBuildspec",e}(c||{});const l={specification:a.ik.origin,buildspec:""},d=(0,i.Mz)((e=>e.codebuild.editProjectForm),(e=>e.buildspec)),u=(0,i.Mz)(d,(e=>e.buildspec)),p=(0,i.Mz)(d,(e=>e.specification)),m=(0,i.Mz)(p,u,r.US),h=e=>({type:c.updateBuildspec,payload:e}),y=e=>h({buildspec:e}),g=e=>h({specification:e,buildspec:void 0}),E=(e,t)=>h({specification:e,buildspec:(0,a.wk)(t)}),b=e=>h({specification:a.ik.overrideWithEditor,buildspec:e}),C=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case c.updateBuildspec:return{...e,...t.payload};case n.z.setProject:const{buildspec:o}=t.payload;return(0,s.A)(o)?{...e,buildspec:o,specification:a.ik.overrideWithEditor}:o?{...e,buildspec:o,specification:a.ik.origin}:e;case n.z.resetEdit:return l;default:return e}}},74976:(e,t,o)=>{"use strict";o.d(t,{$z:()=>S,Ay:()=>P,FD:()=>A,Gu:()=>_,Jk:()=>O,K:()=>T,Kr:()=>v,NB:()=>f,Wg:()=>b,ZH:()=>E,od:()=>C});var i=o(82960),a=o(1081),n=o(2543),r=o(58470),s=o(25163),c=o(83197),l=o(8546),d=o(83710),u=o(4632),p=o(92972),m=o(86619),h=o(45146),y=o(64660),g=o(59759);let E=function(e){return e.configuration="configuration",e.source="source",e.environment="environment",e.buildspec="buildspec",e.batchConfiguration="batchConfiguration",e.artifacts="artifacts",e.logsConfig="logsConfig",e}({});const b=[E.artifacts,E.source,E.logsConfig,E.environment],C=(0,r._)(c.z.setProject),f=e=>({type:c.z.setSubmitted,payload:e}),T=e=>({type:c.z.setError,payload:e}),S=()=>({type:c.z.resetEdit}),v=(0,a.Mz)(s.y,(e=>e.section)),A=e=>e.codebuild.editProjectForm.isSubmitted,_=e=>e.codebuild.editProjectForm.error,O=e=>e.codebuild.editProjectForm.buildBatchConfig&&!(0,n.isEmpty)(e.codebuild.editProjectForm.buildBatchConfig)?g.nw.BatchBuild:g.nw.SingleBuild,I={},R=!1,D=!0,N=(0,i.HY)({allowEZCRCUpdate:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:D,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case c.z.setAllowEZCRCUpdate:return t.payload;case c.z.resetEdit:return D}return e},isSubmitted:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:R,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case c.z.setSubmitted:return t.payload;case c.z.resetEdit:return R}return e},error:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1?arguments[1]:void 0;switch(t.type){case c.z.setError:return t.payload;case c.z.resetEdit:return""}return e},configuration:l.Ay,source:d.Ay,artifactsForm:u.Ay,buildspec:p.Ay,buildBatchConfig:m.A,environment:h.Ay,logsConfig:y.Ay}),P=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I,t=arguments.length>1?arguments[1]:void 0;return t.type===c.z.resetEdit?I:N(e,t)}},4632:(e,t,o)=>{"use strict";o.d(t,{$L:()=>W,Ay:()=>Ee,Dm:()=>ge,Ej:()=>x,H2:()=>k,HT:()=>v,JQ:()=>le,KF:()=>_,M$:()=>Z,Ny:()=>F,Nz:()=>q,OS:()=>K,Rv:()=>G,TW:()=>T,Tt:()=>de,Uo:()=>V,VW:()=>U,WC:()=>P,WG:()=>$,Wp:()=>D,Xu:()=>me,YH:()=>ue,Yg:()=>se,Zm:()=>pe,_B:()=>R,a$:()=>ae,bG:()=>B,c9:()=>Q,c_:()=>ie,cx:()=>he,eX:()=>N,ej:()=>oe,gV:()=>H,hk:()=>ye,jN:()=>J,mD:()=>E,mb:()=>ce,mn:()=>z,oZ:()=>O,q6:()=>S,qV:()=>X,qg:()=>te,rJ:()=>ee,rz:()=>re,sN:()=>Y,tO:()=>A,to:()=>f,uf:()=>I,wG:()=>L,x9:()=>M,yv:()=>w,yz:()=>j});var i=o(1081),a=o(2543),n=o(18562),r=o(18445),s=o(28217),c=o(86791),l=o(83197),d=o(59759),u=o(1484),p=o(25896),m=o(7414),h=o(45146),y=o(5683);let g=function(e){return e.ADD_ARTIFACT="reducer/codebuild/editartifactsform/ADD_ARTIFACT",e.UPDATE_ARTIFACTS="reducer/codebuild/editartifactsform/UPDATE_ARTIFACTS",e.UPDATE_ENCRYPTION_KEY="reducer/codebuild/editartifactsform/UPDATE_ENCRYPTION_KEY",e.UPDATE_CACHE="reducer/codebuild/editartifactsform/UPDATE_CACHE",e.REMOVE_ARTIFACT="reducer/codebuild/editartifactsform/REMOVE_ARTIFACT",e}({});const E=()=>({type:g.ADD_ARTIFACT}),b=(e,t)=>({type:g.UPDATE_ARTIFACTS,payload:{artifactIndex:e,newArtifacts:t}}),C={artifacts:[{type:s.Ko.NO_ARTIFACTS}],cache:{type:s.PT.none,lifecycleLoading:!1,lifecycleSubmitted:!1}},f=(e,t)=>b(e,{artifactIdentifier:t}),T=(e,t)=>{let o={type:t};return t===s.Ko.S3?o={type:s.Ko.S3,namespaceType:s.V5.NONE,bucketName:"",packaging:s.ln.NONE,name:"",overrideArtifactName:!1,path:"",encryptionDisabled:!1}:t===s.Ko.CODEPIPELINE&&(o={type:s.Ko.CODEPIPELINE}),b(e,o)},S=(e,t)=>b(e,{name:t}),v=(e,t)=>b(e,{overrideArtifactName:t}),A=(e,t)=>b(e,{path:t}),_=(e,t)=>b(e,{namespaceType:t}),O=(e,t)=>b(e,{bucketName:t}),I=(e,t)=>b(e,{packaging:t}),R=(e,t)=>b(e,{encryptionDisabled:t}),D=(e,t)=>{let o=e;return t&&(o={bucketServerError:void 0,serverError:void 0,...e}),{type:g.UPDATE_CACHE,payload:o}},N=e=>D({type:e}),P=e=>D({bucket:e}),L=e=>D({pathPrefix:e}),w=e=>D({lifecycle:e}),M=e=>D({dockerLayerCache:e}),k=e=>D({sourceCache:e}),U=e=>D({customCache:e}),B=e=>({type:g.REMOVE_ARTIFACT,payload:e}),G=e=>e.codebuild.editProjectForm.artifactsForm.cache.type,W=e=>e.codebuild.editProjectForm.artifactsForm.cache.bucket,x=e=>e.codebuild.editProjectForm.artifactsForm.cache.pathPrefix,F=e=>e.codebuild.editProjectForm.artifactsForm.cache.lifecycle,j=e=>e.codebuild.editProjectForm.artifactsForm.cache.dockerLayerCache,H=e=>e.codebuild.editProjectForm.artifactsForm.cache.sourceCache,z=e=>e.codebuild.editProjectForm.artifactsForm.cache.customCache,V=e=>{const t=(0,h.uF)(e);return(0,m.Mo)(t)},Y=e=>(0,y.PL)(e).sourceProvider===d.sO.noSource,$=e=>{const t=(0,y.PL)(e).environment,o=(0,y.PL)(e).compute;return!t||!o||(0,m.H)(t,o,(0,h.Iu)(e))},q=e=>(0,m.yn)((0,h.Iu)(e)),K=e=>e.codebuild.editProjectForm.artifactsForm.cache.lifecycleSubmitted,J=e=>e.codebuild.editProjectForm.artifactsForm.cache.lifecycleLoading,Q=e=>e.codebuild.editProjectForm.artifactsForm.cache.bucketServerError,X=e=>e.codebuild.editProjectForm.artifactsForm.cache.serverError,Z=(0,i.Mz)(G,W,x,j,H,z,c.v8),ee=e=>e.codebuild.editProjectForm.artifactsForm.encryptionKey,te=e=>({type:g.UPDATE_ENCRYPTION_KEY,payload:e}),oe=e=>e.codebuild.editProjectForm.artifactsForm.artifacts,ie=(e,t)=>e.codebuild.editProjectForm.artifactsForm.artifacts[t].artifactIdentifier,ae=(e,t)=>e.codebuild.editProjectForm.artifactsForm.artifacts[t].type,ne=(e,t)=>e.codebuild.editProjectForm.artifactsForm.artifacts[t].type===s.Ko.S3?e.codebuild.editProjectForm.artifactsForm.artifacts[t]:void 0,re=(0,i.Mz)(ne,(e=>e?e.name:void 0)),se=(0,i.Mz)(ne,(e=>!!e&&e.overrideArtifactName)),ce=e=>(0,m.yn)((0,h.Iu)(e))||(0,h.DW)(e)===s.br.FLEET,le=(0,i.Mz)(ne,(e=>e?e.path:void 0)),de=(0,i.Mz)(ne,(e=>e?e.namespaceType:void 0)),ue=(0,i.Mz)(ne,(e=>e?e.bucketName:void 0)),pe=(0,i.Mz)(ne,(e=>e&&e.packaging)),me=(0,i.Mz)(ne,(e=>e&&!!e.encryptionDisabled)),he=(0,i.Mz)(ie,(e=>(0,p.$U)(e)&&(0,n.t)("codebuild:createProject.validation.sourceIdentifierRequired"))),ye=(0,i.Mz)(ie,ae,ue,((e,t)=>t),c.yf),ge=e=>{const t=oe(e).map(((t,o)=>ye(e,o))),o=Z(e);return[...t,...Object.values(o)].some((e=>!!e))},Ee=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:C,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case l.z.setProject:const o=t.payload,i=[o.primaryArtifact,...o.secondaryArtifacts].map((e=>{const t=e.type;let o={type:t||s.Ko.NO_ARTIFACTS};if(t===d.gC.s3){let t=s.ln.NONE;String(e.packaging)===String(s.ln.ZIP)&&(t=s.ln.ZIP);let i=s.V5.NONE;String(e.namespaceType)===String(s.V5.BUILD_ID)&&(i=s.V5.BUILD_ID),o={packaging:t,namespaceType:i,artifactIdentifier:e.artifactIdentifier||void 0,type:s.Ko.S3,bucketName:e.location||"",name:e.overrideArtifactName?"":e.name||"",overrideArtifactName:e.overrideArtifactName||!1,path:e.path||"",encryptionDisabled:e.encryptionDisabled||!1}}return o})),n={type:s.PT.none,lifecycleLoading:!1,lifecycleSubmitted:!1};if(o.cacheType===s.PT.s3){n.type=s.PT.s3;const{bucket:e,objectKey:t}=(0,u.h)(o.cacheLocation);n.bucket=e,n.pathPrefix=t}o.cacheType===s.PT.local&&(n.type=s.PT.local,n.dockerLayerCache=!(0,m.Mo)(o.environment)&&(0,a.includes)(o.cacheModes,r.JdN.dockerLayerCache),n.customCache=(0,a.includes)(o.cacheModes,r.JdN.customCache),n.sourceCache=(0,a.includes)(o.cacheModes,r.JdN.sourceCache));const c=o.encryptionKey;return{...e,artifacts:i,encryptionKey:c,cache:n};case g.ADD_ARTIFACT:return{...e,artifacts:[...e.artifacts,{type:s.Ko.NO_ARTIFACTS}]};case g.UPDATE_ARTIFACTS:return{...e,artifacts:[...e.artifacts.slice(0,t.payload.artifactIndex),{...e.artifacts[t.payload.artifactIndex],...t.payload.newArtifacts},...e.artifacts.slice(t.payload.artifactIndex+1)]};case g.UPDATE_CACHE:return{...e,cache:{...e.cache,...t.payload}};case g.UPDATE_ENCRYPTION_KEY:return{...e,encryptionKey:t.payload};case g.REMOVE_ARTIFACT:return{...e,artifacts:[...e.artifacts.slice(0,t.payload),...e.artifacts.slice(t.payload+1)]};case l.z.resetEdit:return C;default:return e}}},45146:(e,t,o)=>{"use strict";o.d(t,{$t:()=>Z,AA:()=>de,Ae:()=>v,Ay:()=>Fe,BN:()=>B,Bq:()=>We,By:()=>W,D5:()=>O,DO:()=>k,DW:()=>Ie,HV:()=>$,Iu:()=>ne,JG:()=>A,KX:()=>te,L$:()=>ke,L6:()=>fe,LB:()=>le,Mo:()=>G,OV:()=>N,PC:()=>q,Pl:()=>Se,RB:()=>De,Sz:()=>D,TW:()=>f,U7:()=>w,Uz:()=>R,WU:()=>Ue,X9:()=>Ee,Zg:()=>K,Zq:()=>H,_k:()=>he,bR:()=>T,dV:()=>Be,di:()=>we,e8:()=>C,eK:()=>j,eR:()=>Ge,f7:()=>oe,fH:()=>ee,gH:()=>U,hG:()=>ae,hM:()=>Re,i1:()=>Te,i8:()=>Ne,kY:()=>L,lY:()=>M,mB:()=>re,oP:()=>Y,oU:()=>Oe,oV:()=>F,ou:()=>ve,pg:()=>ie,q5:()=>P,qT:()=>Le,rs:()=>I,se:()=>Ae,uF:()=>ue,uN:()=>V,uc:()=>X,vr:()=>Q,wh:()=>ye,xN:()=>be,yJ:()=>Ce,yT:()=>_e,ys:()=>_});var i=o(1081),a=o(7474),n=o(28217),r=o(86791),s=o(19971),c=o(7414),l=o(1484),d=o(83197),u=o(52593),p=o(89221),m=o(5683),h=(o(59759),o(63158)),y=o(58470),g=o(2543),E=o(55178),b=function(e){return e.updateEnvironment="codebuild/editProject/environment/updateEnvironment",e.updateEnvironmentImageSelection="codebuild/editProject/environment/updateImageSelection",e.updateEnvironmentFleet="codebuild/editProject/environment/updateEnvironmentFleet",e.updateServiceRole="codebuild/editProject/environment/updateServiceRole",e.updateCertificate="codebuild/editProject/environment/updateCertificate",e.updateSessionConnection="codebuild/editProject/environment/updateSessionConnection",e.updateFleetEnvironmentType="codebuild/editProject/environment/updateFleetEnvironmentType",e}(b||{});const C=e=>({type:b.updateEnvironment,payload:e}),f=e=>C({timeout:e}),T=e=>C({queuedTimeout:e}),S=e=>({type:b.updateCertificate,payload:e}),v=e=>S({customCertificate:e}),A=e=>S({certificateBucket:e}),_=e=>S({certificatePath:e}),O=e=>((e.operatingSystem&&(0,c.Mo)(e.operatingSystem)||(0,c.yn)(e.computeConfig))&&(e.privilegedMode=!1),e.runtime&&e.runtime===n.MJ.DOCKER&&(e.privilegedMode=!0),{type:b.updateEnvironmentImageSelection,payload:e}),I=()=>({type:b.updateEnvironment,payload:{changeProvisioningModelFlag:!0}}),R=()=>({type:b.updateEnvironment,payload:{imageOverrideFlag:!0}}),D=e=>O({computeType:e}),N=e=>{let t={type:e};if(e===n.OX.LinuxGpu||e===n.OX.Arm){if((0,a.G7)(p.H.CodeBuildSmallArmImage)&&e===n.OX.Arm||(0,a.G7)(p.H.CodeBuildLinuxGpuSmallCompute)&&e===n.OX.LinuxGpu)return O({...t,computeType:n.QE.BUILD_GENERAL1_SMALL});t={...t,computeType:n.QE.BUILD_GENERAL1_LARGE}}return O(t)},P=(e,t)=>O({managedImageType:e,computeConfig:t}),L=e=>C({provisioningModelType:e,fleet:void 0}),w=e=>{var t;const o=null==e?void 0:e.value,i=null==e?void 0:e.codebuildFleet,a=null==i||null===(t=i.compute)||void 0===t?void 0:t.os,r={fleetArn:o,os:a,environmentType:null==i?void 0:i.environmentType,computeType:null==i?void 0:i.computeType},s={image:{type:r.environmentType,operatingSystem:r.os,runtime:void 0,managedImageType:n.ov.awsManaged,privilegedMode:!1},imageOverrideFlag:a!==E.fr.MAC,fleet:r};return C(s)},M=e=>{let t={operatingSystem:e,runtime:void 0};return(0,c.pR)(e)||(t={...t,computeConfig:n.as.ec2,computeType:n.QE.BUILD_GENERAL1_SMALL}),(0,c.Mo)(e)&&(t={...t,computeType:n.QE.BUILD_GENERAL1_MEDIUM}),O(t)},k=e=>O({registryCredential:e}),U=e=>O({privilegedMode:e}),B=e=>O({runtime:e,image:void 0}),G=()=>O({operatingSystem:void 0,runtime:void 0,image:void 0,privilegedMode:!1}),W=(0,y._)(b.updateSessionConnection),x=e=>({type:b.updateServiceRole,payload:e}),F=e=>x({roleArn:e}),j=e=>x({modifyRoleAllowed:e}),H=e=>({type:b.updateFleetEnvironmentType,payload:e}),z=e=>e.codebuild.editProjectForm.environment,V=(0,i.Mz)(z,(e=>e.timeout)),Y=(0,i.Mz)(V,(()=>!0),r.mj),$=(0,i.Mz)(z,(e=>e.queuedTimeout)),q=(0,i.Mz)(z,(e=>e.runtimeConfig)),K=(0,i.Mz)($,r.mj),J=(0,i.Mz)(z,(e=>e.certificate)),Q=(0,i.Mz)(J,(e=>e.customCertificate)),X=(0,i.Mz)(J,(e=>e.certificateBucket)),Z=(0,i.Mz)(J,(e=>e.certificatePath)),ee=(0,i.Mz)(Q,X,Z,((e,t,o)=>(0,r.c6)(e,(0,l.L)(t,o)))),te=(0,i.Mz)(z,(e=>e.imageOverrideFlag)),oe=(0,i.Mz)(z,(e=>e.changeProvisioningModelFlag)),ie=(0,i.Mz)(z,(e=>e.image)),ae=(0,i.Mz)(ie,(e=>e.computeType)),ne=(0,i.Mz)(ie,m.k,((e,t)=>void 0===e.computeConfig?t:e.computeConfig)),re=(0,i.Mz)(ie,(e=>e.image)),se=(0,i.Mz)(z,(e=>{var t;return null===(t=e.fleet)||void 0===t?void 0:t.os})),ce=(0,i.Mz)(re,se,r.N3),le=(0,i.Mz)(ie,(e=>e.managedImageType)),de=(0,i.Mz)(ie,(e=>e.registryCredential)),ue=(0,i.Mz)(ie,(e=>e.operatingSystem)),pe=(0,i.Mz)((e=>e.codebuild.editProjectForm.buildBatchConfig),(e=>e)),me=(0,i.Mz)(ue,se,r.Ps),he=(0,i.Mz)(ie,(e=>e.runtime)),ye=(0,i.Mz)(ie,(e=>e.imageVersion)),ge=(0,i.Mz)(he,se,r.T3),Ee=(0,i.Mz)(ie,(e=>e.type)),be=(0,i.Mz)(ie,(e=>e.privilegedMode)),Ce=(0,i.Mz)(z,(e=>{var t;return null===(t=e.fleet)||void 0===t?void 0:t.environmentType})),fe=(0,i.Mz)(ue,he,ne,Ce,((e,t,o,i)=>(0,c.Mo)(e)||i===n.OX.MacArm||e===n.v9.UBUNTU&&t===n.MJ.DOCKER||(0,c.yn)(o))),Te=(0,i.Mz)(ue,pe,ne,((e,t,o)=>(0,c.yn)(o)||!!(0,c.Mo)(e)&&(!(0,c.Dz)(t)||!(0,a.G7)(p.H.CodeBuildSessionManagerBatchBuildWindows)))),Se=(0,i.Mz)(re,ne,((e,t)=>!(0,c.yn)(t)&&(null==e?void 0:e.startsWith("aws/codebuild"))&&(null==e?void 0:e.includes("standard"))&&!(null!=e&&e.includes("corretto")))),ve=((0,i.Mz)([ue],(e=>(0,c.Mo)(e))),(0,i.Mz)(ne,(e=>(0,c.yn)(e)))),Ae=e=>{const t=ie(e);if(Ce(e)===n.OX.MacArm)return!1;switch(t.managedImageType){case n.ov.customManaged:return(0,u.xr)(e);case n.ov.awsManaged:return[me(e),ge(e),ce(e)].some((e=>!!e));default:return!1}},_e=(0,i.Mz)(me,ge,ce,((e,t,o)=>({operatingSystem:e,runtime:t,environmentImage:o}))),Oe=(0,i.Mz)(z,(e=>e.sessionConnectionEnabled)),Ie=(0,i.Mz)(z,(e=>e.provisioningModelType)),Re=(0,i.Mz)(z,(e=>e.fleet)),De=(0,i.Mz)(z,(e=>{const t=e.fleet;return{environmentType:null==t?void 0:t.environmentType,operatingSystem:null==t?void 0:t.os}})),Ne=(0,i.Mz)(z,(e=>{var t;return null===(t=e.fleet)||void 0===t?void 0:t.fleetArn})),Pe=(0,i.Mz)(Ne,r.Gk),Le=e=>({noFleetArn:Pe(e)}),we=e=>Ie(e)===n.br.FLEET&&Pe(e),Me=(0,i.Mz)(z,(e=>e.serviceRole)),ke=(0,i.Mz)(Me,(e=>e.roleArn)),Ue=(0,i.Mz)(ke,(e=>({serviceRole:(0,r.s)(!1,e)}))),Be=(0,i.Mz)(Me,(e=>e.modifyRoleAllowed)),Ge=(0,i.Mz)(z,(e=>e.defaultVpcOptions)),We=(e,t)=>{let o={};return Object.entries(e).forEach((e=>{let[i,{languages:a}]=e;Object.entries(a).forEach((e=>{let[a,{images:n}]=e;const r=Object.keys(n).find((e=>Boolean(t&&t.includes(e))));if(r){const[e,n]=new RegExp(`${r}(?=-(.*))|${r}`).exec(t)||[];o={operatingSystem:i,runtime:a,image:e,imageVersion:n&&t}}}))})),o},xe={image:{computeType:n.QE.BUILD_GENERAL1_SMALL,managedImageType:n.ov.awsManaged,registryCredential:"",privilegedMode:!1,type:n.OX.Linux},serviceRole:{newRole:!1,modifyRoleAllowed:!0},timeout:(0,s.fD)(n.rq),queuedTimeout:(0,a.G7)(p.H.QueuedTTL)?(0,s.fD)(n.ne):void 0,certificate:{customCertificate:!1},defaultVpcOptions:{},imageOverrideFlag:!1,changeProvisioningModelFlag:!1,sessionConnectionEnabled:!1,provisioningModelType:n.br.ON_DEMAND,fleet:{fleetArn:""}},Fe=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:xe,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case b.updateEnvironment:return(0,h.j)({...e,...t.payload});case b.updateCertificate:return{...e,certificate:{...e.certificate,...t.payload}};case b.updateEnvironmentImageSelection:return{...e,image:{...e.image,...t.payload}};case b.updateEnvironmentFleet:return{...e,fleet:{...e.fleet,...t.payload}};case b.updateSessionConnection:return{...e,sessionConnectionEnabled:t.payload};case b.updateServiceRole:return{...e,serviceRole:{...e.serviceRole,...t.payload}};case b.updateFleetEnvironmentType:return{...e,fleet:{...e.fleet,environmentType:t.payload}};case d.z.setProject:const{privileged:o,compute:i,computeConfig:a,environment:r,timeout:c,queuedTimeout:u,serviceRole:p,certificate:m,environmentVariables:y,vpcId:E,subnets:C,securityGroupIds:f,runtimeConfig:T,fleet:S,serviceRoleModificationEnabled:v}=t.payload;let A=e.serviceRole;p&&(A={roleArn:p,newRole:!1,modifyRoleAllowed:null==v||v});let _=e.certificate;if(m){const{bucket:e,objectKey:t}=(0,l.h)(m);_={customCertificate:!0,certificateBucket:e,certificatePath:t}}let O=e.fleet,I=n.br.ON_DEMAND;return(0,g.isUndefined)(S)||(0,g.isUndefined)(S.fleetArn)||(O={fleetArn:S.fleetArn},I=n.br.FLEET),{...e,runtimeConfig:T,envVariables:y,timeout:void 0!==c?(0,s.fD)(c):e.timeout,queuedTimeout:void 0!==u?(0,s.fD)(u):e.queuedTimeout,image:{...e.image,computeType:i,computeConfig:a,type:r,privilegedMode:o},serviceRole:A,certificate:_,defaultVpcOptions:{vpcId:E,securityGroupIds:f,subnetIds:C},provisioningModelType:I,fleet:O};case d.z.resetEdit:return xe;default:return e}}},83197:(e,t,o)=>{"use strict";o.d(t,{z:()=>i});let i=function(e){return e.setProject="reducer/codebuild/editProject/setProject",e.setSubmitted="reducer/codebuild/editProject/setSubmitted",e.setError="reducer/codebuild/editProject/setError",e.resetEdit="reducer/codebuild/editProject/reset",e.setAllowEZCRCUpdate="reducer/codebuild/editProject/setAllowEZCRCUpdate",e}({})},64660:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>b,Dq:()=>d,NL:()=>E,Wm:()=>p,eK:()=>h,e_:()=>m,g0:()=>u,hK:()=>g,sj:()=>y});var i=o(1081),a=o(86791),n=o(1484),r=o(83197),s=o(24229),c=function(e){return e.updateCloudWatchLogsConfig="codebuild/editProject/logs/updateCloudWatchLogsConfig",e.updateS3LogsConfig="codebuild/editProject/logs/updateS3LogsConfig",e}(c||{});const l={cloudWatchLogs:{status:s.gy.Enabled},s3Logs:{status:s.gy.Disabled}},d=e=>e.codebuild.editProjectForm.logsConfig||{},u=e=>e.codebuild.editProjectForm.logsConfig&&e.codebuild.editProjectForm.logsConfig.cloudWatchLogs||{},p=e=>e.codebuild.editProjectForm.logsConfig&&e.codebuild.editProjectForm.logsConfig.s3Logs||{},m=e=>(0,n.h)(p(e).location).bucket,h=e=>(0,n.h)(p(e).location).objectKey,y=(0,i.Mz)(p,m,h,a.c3),g=e=>({type:c.updateCloudWatchLogsConfig,payload:e}),E=e=>({type:c.updateS3LogsConfig,payload:e}),b=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case c.updateCloudWatchLogsConfig:return{...e,cloudWatchLogs:t.payload};case c.updateS3LogsConfig:return{...e,s3Logs:t.payload};case r.z.setProject:const{logsConfig:o}=t.payload;return o||e;case r.z.resetEdit:return l;default:return e}}},8546:(e,t,o)=>{"use strict";o.d(t,{AY:()=>T,Ay:()=>_,Db:()=>C,IX:()=>g,P9:()=>y,P_:()=>u,ZN:()=>v,Zg:()=>A,e_:()=>E,gU:()=>p,jE:()=>m,ub:()=>S,wM:()=>h,yZ:()=>b});var i=o(1081),a=o(83197),n=o(86791),r=o(92538),s=o(56990);const c={systemTags:[{}],tags:[{}]};var l=function(e){return e.updateConfiguration="codebuild/editProject/projectConfiguration/updateConfiguration",e}(l||{});const d=(0,i.Mz)((e=>e.codebuild.editProjectForm),(e=>e.configuration)),u=(0,i.Mz)(d,(e=>e.name)),p=(0,i.Mz)(d,(e=>e.description)),m=(0,i.Mz)(d,(e=>e.buildBadgeEnabled)),h=(0,i.Mz)(d,(e=>e.concurrentBuildLimit)),y=(0,i.Mz)(d,(e=>e.tags)),g=(0,i.Mz)(d,(e=>e.systemTags)),E=(0,i.Mz)(d,(e=>e.projectVisibility)),b=((0,i.Mz)(d,(e=>e.projectVisibility===s.k.PUBLIC_READ)),(0,i.Mz)(d,(e=>e.publicBuildServiceRole))),C=((0,i.Mz)(b,(e=>null==e?void 0:e.roleArn)),(0,i.Mz)(b,(e=>null==e?void 0:e.roleName)),(0,i.Mz)(b,(e=>null==e?void 0:e.isNewServiceRole)),(0,i.Mz)(b,(e=>null==e?void 0:e.isModifyRoleAllowed)),(0,i.Mz)(u,p,y,((e,t,o)=>({name:(0,n.$A)(e),description:(0,n._7)(t),tags:o.map(r.z7)})))),f=e=>({type:l.updateConfiguration,payload:e}),T=e=>f({name:e}),S=e=>f({description:e}),v=e=>f({buildBadgeEnabled:e}),A=e=>f({tags:e}),_=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:c,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case l.updateConfiguration:return{...e,...t.payload};case a.z.setProject:const{name:o,description:i,buildBadge:n,concurrentBuildLimit:r,projectVisibility:d,resourceAccessRole:u,tags:p}=t.payload;let m=p||[{}],h=[{}];0===m.length?m=[{}]:(h=m.filter((e=>{var t;return null===(t=e.key)||void 0===t?void 0:t.startsWith("aws:")})),m=m.filter((e=>{var t;return!(null!==(t=e.key)&&void 0!==t&&t.startsWith("aws:"))})));const y=d===s.k.PUBLIC_READ&&u?{isNewServiceRole:!1,roleArn:u}:void 0;return{...e,name:o,description:i,concurrentBuildLimit:r,projectVisibility:d,systemTags:h,publicBuildServiceRole:y,buildBadgeEnabled:n,tags:m};case a.z.resetEdit:return c;default:return e}}},83710:(e,t,o)=>{"use strict";o.d(t,{$:()=>W,$9:()=>ye,$Q:()=>ge,Ay:()=>De,BR:()=>fe,CQ:()=>J,Cs:()=>ne,DR:()=>N,Dx:()=>ce,HY:()=>k,Ik:()=>me,JO:()=>V,Lv:()=>de,MG:()=>q,My:()=>$,NT:()=>re,O0:()=>Y,OL:()=>P,OT:()=>M,Ol:()=>be,PO:()=>R,Qx:()=>H,RK:()=>O,SP:()=>se,TB:()=>Ee,Vr:()=>ae,Vu:()=>A,Vz:()=>T,XT:()=>w,XV:()=>Q,Xz:()=>Ce,Y5:()=>F,_M:()=>x,ah:()=>L,bT:()=>X,cl:()=>D,cm:()=>z,d5:()=>Oe,dH:()=>Z,dX:()=>j,h1:()=>Te,ln:()=>Se,mF:()=>ve,nY:()=>v,nt:()=>ee,pM:()=>le,q$:()=>B,s3:()=>K,sO:()=>I,sn:()=>pe,wJ:()=>he,wg:()=>G,zI:()=>U});var i=o(1081),a=o(5683),n=o(59759),r=o(1484),s=o(10978),c=o(86791),l=o(83197),d=o(25896),u=o(18562),p=o(49348),m=o(17667),h=o(73808),y=o(5673),g=o(28217),E=o(3751),b=function(e){return e.addSource="reducer/codebuild/editProject/source/addSource",e.updateSource="reducer/codebuild/editProject/source/updateSource",e.setSource="reducer/codebuild/editProject/source/setSource",e.removeSource="reducer/codebuild/editProject/source/removeSource",e}(b||{});const C={identifier:"",sourceVersion:"",provider:n.sO.s3},f={identifier:"",provider:n.sO.codePipeline},T={fetchSubmodules:!1},S=e=>({provider:e,identifier:"",gitCloneDepth:"1",sourceVersion:"",gitSubmodulesConfig:T,insecureSSL:!1,oauthRepositoryType:p.g3.account,referenceType:h.ss.branch}),v=e=>{if("number"==typeof e&&!isNaN(e))return`${e}`;if("string"==typeof e){if(null!=e&&e.match(/^[0-9]+$/))return e;switch(e.toLowerCase()){case"null":case"undefined":return"0"}}return"0"},A=(0,i.Mz)((e=>e.codebuild.editProjectForm),(e=>e.source)),_=(e,t)=>A(e)[t]||{},O=(e,t)=>e.codebuild.editProjectForm.source[t].identifier,I=(0,i.Mz)(_,(e=>e.provider)),R=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.gitCloneDepth})),D=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.gitSubmodulesConfig})),N=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.insecureSSL})),P=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.location})),L=(0,i.Mz)(_,I,((e,t)=>t!==n.sO.s3&&t!==n.sO.codePipeline&&!!e.buildStatus)),w=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.buildStatusConfig})),M=(0,i.Mz)(_,I,((e,t)=>t===n.sO.s3||t===n.sO.codePipeline?p.g3.account:e.oauthRepositoryType)),k=(0,i.Mz)(_,(e=>e.referenceType)),U=(0,i.Mz)(_,(e=>e.reference)),B=(0,i.Mz)(_,(e=>e.referenceCommit)),G=(0,i.Mz)(_,(e=>e.sourceVersion)),W=(0,i.Mz)(I,k,U,c.ng),x=(0,i.Mz)(I,k,B,c.in),F=(0,i.Mz)(_,(e=>e.codeConnectionsScope||g.Vt.ACCOUNT_LEVEL)),j=(0,i.Mz)(_,(e=>e.codeConnectionsArn)),H=(0,i.Mz)(_,(e=>e.auth)),z=(0,i.Mz)(I,M,((e,t)=>t),((e,t,o)=>!(0!==o||e!==n.sO.gitHubEnt&&e!==n.sO.gitLab&&e!==n.sO.gitLabSelfManaged&&(e!==n.sO.gitHub&&e!==n.sO.bitBucket||t!==p.g3.account&&t!==p.g3.webhook)))),V=(0,i.Mz)(I,P,a.PL,((e,t,o)=>!(o.primarySource.location!==t||o.primarySource.type!==e||o.primarySource.type!==n.sO.gitHub&&o.primarySource.type!==n.sO.gitHubEnt||!o.webhook))),Y=(0,i.Mz)(_,I,((e,t)=>t!==n.sO.s3&&t!==n.sO.codePipeline&&!!e.webhook)),$=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.webhookFilter})),q=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.webhookFilterGroups})),K=(0,i.Mz)(_,I,((e,t)=>t!==n.sO.s3&&t!==n.sO.codePipeline&&e.rotateSecretKey)),J=(0,i.Mz)(_,I,((e,t)=>t!==n.sO.s3&&t!==n.sO.codePipeline&&e.manualCreation)),Q=(0,i.Mz)(_,I,((e,t)=>{if(t!==n.sO.s3&&t!==n.sO.codePipeline)return e.scopeConfiguration})),X=(0,i.Mz)(_,I,((e,t)=>{if(t===n.sO.s3)return e.bucket})),Z=(0,i.Mz)(_,I,((e,t)=>{if(t===n.sO.s3)return e.objectKey})),ee=(0,i.Mz)(O,(e=>(0,d.$U)(e)&&(0,u.t)("codebuild:createProject.validation.sourceIdentifierRequired"))),te=(0,i.Mz)(X,Z,((e,t)=>(0,c.yv)((0,r.L)(e,t)))),oe=(0,i.Mz)(P,c.N$),ie=e=>e.map((e=>(0,d.$U)(e.identifier)&&(0,u.t)("codebuild:createProject.validation.sourceIdentifierRequired"))),ae=e=>e.map((e=>{switch(e.provider){case n.sO.s3:const t=(0,c.yv)((0,r.L)(e.bucket,e.objectKey));return t.bucket||t.objectKey;case n.sO.codeCommit:return(0,c.ng)(e.provider,e.referenceType,e.reference)||(0,c.in)(e.provider,e.referenceType,e.referenceCommit);case n.sO.bitBucket:case n.sO.gitHub:case n.sO.gitHubEnt:return(0,c.N$)(e.location);default:return}})),ne=(0,i.Mz)(A,(e=>[...ie(e.slice(1)),...ae(e)].some((e=>!!e)))),re=(0,i.Mz)(P,oe,((e,t)=>({repository:e,errors:{repository:t}}))),se=(0,i.Mz)(P,M,oe,((e,t,o)=>({selectedRepository:e,repositoryType:t,error:o}))),ce=(0,i.Mz)(X,Z,te,((e,t,o)=>({bucket:e,objectKey:t,errors:o}))),le=()=>({type:b.addSource}),de=(e,t)=>({type:b.updateSource,payload:{sourceIndex:e,newSource:t}}),ue=(e,t)=>({type:b.setSource,payload:{sourceIndex:e,newSource:t}}),pe=e=>({type:b.removeSource,payload:e}),me=(e,t)=>de(e,{identifier:t}),he=(e,t,o)=>o===n.sO.s3?ue(t,{...C,identifier:e}):o===n.sO.codePipeline?ue(t,{...f,identifier:e}):o===n.sO.noSource?ue(t,{identifier:e,provider:n.sO.noSource}):ue(t,{...S(o),identifier:e}),ye=(e,t)=>de(e,{location:t}),ge=(e,t)=>de(e,{bucket:t}),Ee=(e,t)=>de(e,{objectKey:t}),be=(e,t)=>de(e,{buildStatus:t}),Ce=(e,t)=>de(t,{webhook:e}),fe=(e,t)=>de(t,{webhookFilter:e}),Te=(e,t)=>de(t,{rotateSecretKey:e}),Se=(e,t)=>de(t,{manualCreation:e}),ve=(e,t)=>de(t,{scopeConfiguration:e}),Ae=[{...C}],_e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return e===n.sO.codeCommit&&(0,m.w)(t)||t},Oe=e=>{let t,o,i=h.ss.branch;const a=e.indexOf("^"),n=e.indexOf("{"),r=e.indexOf("}"),s=-1!==n&&-1!==r;return i=e.startsWith(h.hR.BRANCH)?h.ss.branch:e.startsWith(h.hR.TAG)?h.ss.tag:h.ss.commit,t=s?{referenceName:e.substring(0,a),commitId:e.substring(n+1,r)}:{referenceName:e},o=s?{commitId:e.substring(n+1,r)}:void 0,(0,y.PX)(e)||(0,y.dz)(e)||(o={commitId:e}),{referenceType:i,reference:t,referenceCommit:o}},Ie=(e,t,o,i)=>{var a;const{sourceVersion:c,secondarySourceVersions:l}=t;let d={provider:e.type,identifier:e.sourceIdentifier};const u=l.find((t=>t.sourceIdentifier===e.sourceIdentifier)),m="primary"===o?c:u&&u.sourceVersion;switch(e.type){case n.sO.s3:const{bucket:t,objectKey:l}=(0,r.h)(e.location);d={...d,objectKey:l,bucket:(0,s.P)(t||""),sourceVersion:m};break;case n.sO.codeCommit:let y,b,C=h.ss.branch;if("primary"===o&&c){const e=Oe(m||"");C=e.referenceType,y=e.reference,b=e.referenceCommit}else if("secondary"===o&&void 0!==i&&u){const e=Oe(m||"");C=e.referenceType,y=e.reference,b=e.referenceCommit}d={...d,referenceType:C,reference:y,referenceCommit:b,location:_e(e.type,e.location),gitCloneDepth:v(e.gitCloneDepth),gitSubmodulesConfig:e.gitSubmodulesConfig||T,insecureSSL:!!e.insecureSsl,oauthRepositoryType:p.g3.account,buildStatus:e.reportBuildStatus,buildStatusConfig:e.buildStatusConfig};break;case n.sO.gitHub:case n.sO.gitHubEnt:case n.sO.bitBucket:d={...d,location:_e(e.type,e.location),gitCloneDepth:v(e.gitCloneDepth),gitSubmodulesConfig:e.gitSubmodulesConfig||T,insecureSSL:!!e.insecureSsl,oauthRepositoryType:p.g3.account,buildStatus:e.reportBuildStatus,buildStatusConfig:e.buildStatusConfig,sourceVersion:m,auth:null!==(a=e.auth)&&void 0!==a?a:{type:E.UH.OAUTH}};break;case n.sO.gitLab:case n.sO.gitLabSelfManaged:d={...d,location:_e(e.type,e.location),gitCloneDepth:v(e.gitCloneDepth),gitSubmodulesConfig:null,insecureSSL:!!e.insecureSsl,buildStatus:e.reportBuildStatus,buildStatusConfig:e.buildStatusConfig,sourceVersion:m,codeConnectionsArn:e.auth?e.auth.resource:"",codeConnectionsScope:e.auth&&e.auth.resource?g.Vt.PROJECT_LEVEL:g.Vt.ACCOUNT_LEVEL};break;case n.sO.noSource:e.auth&&(d.auth=e.auth);case n.sO.codePipeline:}return d},Re=(e,t)=>{const o=Ie(e,t,"primary");return o.provider!==n.sO.gitHub&&o.provider!==n.sO.bitBucket&&o.provider!==n.sO.gitLab&&o.provider!==n.sO.gitLabSelfManaged&&o.provider!==n.sO.gitHubEnt||(o.webhook=t.webhook,o.webhookFilter=t.webhookBranchFilter,o.webhookFilterGroups=t.webhookFilterGroups,o.scopeConfiguration=t.webhookScopeConfiguration,o.oauthRepositoryType=o.location===p.gw?p.g3.webhook:p.g3.account),o},De=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ae,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case b.addSource:return[...e,{...S(n.sO.codeCommit)}];case b.updateSource:return[...e.slice(0,t.payload.sourceIndex),{...e[t.payload.sourceIndex],...t.payload.newSource},...e.slice(t.payload.sourceIndex+1)];case b.setSource:return[...e.slice(0,t.payload.sourceIndex),{...t.payload.newSource},...e.slice(t.payload.sourceIndex+1)];case b.removeSource:return[...e.slice(0,t.payload),...e.slice(t.payload+1)];case l.z.setProject:return[Re(t.payload.primarySource,t.payload),...(t.payload.secondarySources||[]).map(((e,o)=>Ie(e,t.payload,"secondary",o)))];case l.z.resetEdit:return Ae;default:return e}}},59948:(e,t,o)=>{"use strict";o.d(t,{y:()=>i});let i=function(e){return e.build="build-history",e.batch="batch-history",e}({})},3751:(e,t,o)=>{"use strict";o.d(t,{UH:()=>i,Z3:()=>a,fL:()=>n});let i=function(e){return e.UNKNOWN="UNKNOWN",e.OAUTH="OAUTH",e.CODE_CONNECTIONS="CODECONNECTIONS",e.SECRETS_MANAGER="SECRETS_MANAGER",e}({});const a="codebuild:source",n="CodeBuildManaged"},25915:(e,t,o)=>{"use strict";o.d(t,{A:()=>d});var i=o(86117),a=o(72922),n=o(17350),r=o(18408),s=o(44649),c=o(18562),l=o(96540);const d=e=>{const[t,o]=l.useState();return l.createElement(i.A,{label:(0,c.t)("codebuild:oauthSelector.label.sourceRepository"),description:(0,c.t)(`codebuild:oauthSelector.connect.hint.${e.serverType}`),errorText:t,key:`codebuild.oauthSelector.disconnected.selector.${e.serverType}`,stretch:!0},l.createElement(r.A,{serverType:e.serverType,sourceIndex:e.sourceIndex,defaultAuthType:s.F1.OAUTH,renderOAuthSelection:()=>l.createElement(a.A,{serverType:e.serverType,sourceIndex:e.sourceIndex,setOAuthError:o}),renderTokenConnector:t=>l.createElement(n.A,{serverType:e.serverType,oauthTokenType:t})}))}},44919:(e,t,o)=>{"use strict";o.d(t,{A:()=>b});var i=o(7474),a=o(86117),n=o(78453),r=o(43630),s=o(18735),c=o(61947),l=o(44649),d=o(80011),u=o(89221),p=o(61088),m=o(13651),h=o(18562),y=o(96540),g=o(17040),E=o(43786);const b=(0,g.Ng)(((e,t)=>{const{serverType:o}=t;return{connectionType:(0,c.dc)(e)[o].connectionType}}),((e,t)=>({disconnectAccount:()=>{e((0,p.qE)((0,E.T1)(d.vV,t.serverType))),e((0,p.qE)((0,m.wy)(`codebuild.oauthsourceprovider.accountchoice.${t.serverType}`)))}})))((e=>y.createElement(a.A,{label:(0,h.t)("codebuild:oauthSelector.disconnectLabel")},y.createElement(n.A,{direction:"vertical",size:"s"},y.createElement("div",null,(0,h.t)(`codebuild:oauthSelector.disconnectText.${e.serverType}.${e.connectionType===l.F1.OAUTH?"oauth":e.connectionType===l.F1.BASIC_AUTH?"basic":"token"}`)),(0,i.G7)(u.H.CodeBuildSourceCredentialDisconnectionModal)?y.createElement(y.Fragment,null,y.createElement(s.I,{serverType:e.serverType}),y.createElement(s.i,{serverType:e.serverType,disconnectHandler:e.disconnectAccount})):y.createElement(r.A,{onClick:e.disconnectAccount,formAction:"none"},(0,h.t)(`codebuild:oauthSelector.disconnectButton.${e.serverType}`))))))},2694:(e,t,o)=>{"use strict";o.d(t,{F6:()=>y,Xo:()=>g,es:()=>h,lo:()=>u});var i=o(44649),a=o(59098),n=o(62219),r=o(63158),s=o(74615),c=o(30420),l=o(28790),d=o(43786);const u="create-secret-loading-key",p="create-secret-error-key",m="create-secret-success-key";function*h(e){const t={Name:e.name,Description:e.description,SecretString:E(e),Tags:[{Key:"codebuild:source",Value:""},{Key:"codebuild:source:type",Value:e.tokenType.toLowerCase()},{Key:"codebuild:source:provider",Value:e.serverType.toLowerCase()}]},o=yield function*(e){return(yield(0,d.T1)(a.A.createSecret,e)).ARN}(t);return o}function*y(e,t){yield(0,d.yJ)((0,l.r1)(u));try{const o=yield h(e);yield(0,d.yJ)((0,c.o$)(p)),yield(0,d.yJ)((0,c.o$)(m)),yield(0,d.yJ)((0,c.IR)(m,{content:`Created secret ${o}`})),t()}catch(e){yield(0,d.yJ)((0,c.o$)(p)),yield(0,d.yJ)((0,c.o$)(m)),yield(0,d.yJ)((0,c.X8)(p,{content:(0,n.j)(e)}))}finally{yield(0,d.yJ)((0,l.uO)(u))}}const g=e=>`aws secretsmanager create-secret --region ${(0,s.kh)()} \\\n    --name '${e.name}' \\\n    --description '${e.description}' \\\n    --secret-string '${E(e)}' \\\n    --tags Key=codebuild:source,Value='' \\\n           Key=codebuild:source:type,Value=${e.tokenType.toLowerCase()} \\\n           Key=codebuild:source:provider,Value=${e.serverType.toLowerCase()}`,E=e=>{const t=i.SE.BITBUCKET&&e.tokenType===i.F1.BASIC_AUTH;return JSON.stringify((0,r.X)({ServerType:e.serverType.toUpperCase(),AuthType:e.tokenType.toUpperCase(),Token:b(t?e.token.password:e.token.token),Username:b(e.token.username)}))},b=e=>e||void 0},86281:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>v});var i=o(86117),a=o(70714),n=o(43630),r=o(4918),s=o(49348),c=o(7414),l=o(61947),d=o(44649),u=o(80011),p=o(66079),m=o(68634),h=o(19994),y=o(61088),g=o(18562),E=o(96540),b=o(17040),C=o(43786);const f="CODEBUILD_DEFAULT_WEBHOOK_SOURCE_LOCATION",T=e=>{const t=(e=>[{id:s.g3.account,label:(0,g.t)(`codebuild:oauthSelector.tiles.account.${e}`)},{id:s.g3.public,label:(0,g.t)("codebuild:oauthSelector.tiles.public")}])(e);return e!==d.SE.GITHUB?t:t.concat({id:s.g3.webhook,label:(0,g.t)("codebuild:webhook.webhook.orgLevel.tile.github")})};class S extends E.Component{constructor(e){super(e),this.state={selectedRepository:this.props.selectedRepository}}handleTileChange=e=>{e===s.g3.webhook?(this.props.updateWebhook(!0),this.props.updateRepository(f)):this.props.updateRepository(this.state.selectedRepository||""),this.props.updateRepositoryType(e)};handleInputChange=e=>{this.setState({selectedRepository:e.detail.value}),this.props.updateRepository(e.detail.value)};handleSelectChange=e=>{this.setState({selectedRepository:e.detail.value}),this.props.updateRepository(e.detail.value)};showPublicRepositoryChoice=()=>{var e;return E.createElement(i.A,{label:(0,g.t)("codebuild:oauthSelector.label.repository.url"),constraintText:(0,g.t)(`codebuild:oauthSelector.publicUrl.hint.${this.props.serverType}`),errorText:this.props.showErrors&&this.props.error},E.createElement(a.A,{onChange:this.handleInputChange,value:(this.props.serverType===d.SE.BITBUCKET?null===(e=this.state.selectedRepository)||void 0===e?void 0:e.replace(c.eI,"//"):this.state.selectedRepository)||""}))};showAccountRepositoryChoice=()=>{var e;return E.createElement(i.A,{label:(0,g.t)(`codebuild:oauthSelector.label.repository.${this.props.serverType}`),secondaryControl:E.createElement(n.A,{iconName:"refresh",formAction:"none",onClick:this.props.refreshRepositories,loading:this.props.isReposLoading}),constraintText:(0,g.t)(`codebuild:oauthSelector.publicUrl.hint.${this.props.serverType}`),errorText:this.props.showErrors&&this.props.error},E.createElement(r.A,{filteringResultsText:e=>1===e?(0,g.t)("common:noResults"):"",empty:(0,g.t)("common:noResults"),options:this.props.repositories,onChange:this.handleSelectChange,value:(this.props.serverType===d.SE.BITBUCKET?null===(e=this.state.selectedRepository)||void 0===e?void 0:e.replace(c.eI,"//"):this.state.selectedRepository)||""}))};showRepositoryChoices=()=>this.props.supressListRepositories?this.showPublicRepositoryChoice():E.createElement(h.A,{statusKey:`codebuild.oauthsourceprovider.accountchoice.${this.props.serverType}`,effect:(0,C.T1)(u.SM,this.props.serverType)},this.props.repositoryType===s.g3.public?this.showPublicRepositoryChoice():this.showAccountRepositoryChoice());render(){return E.createElement(E.Fragment,null,E.createElement(i.A,{label:(0,g.t)("codebuild:oauthSelector.label.sourceRepository"),stretch:!0},E.createElement(p.A,{tiles:T(this.props.serverType),onChange:this.handleTileChange,groupName:`oauthSelectorRepoType::${this.props.sourceIndex}`,currentSelection:this.props.repositoryType})),E.createElement(m.A,null),this.props.repositoryType===s.g3.webhook?E.createElement(i.A,{label:(0,g.t)(`codebuild:oauthSelector.label.repository.${this.props.serverType}`)},E.createElement(a.A,{disabled:!0,value:f})):this.showRepositoryChoices())}}const v=(0,b.Ng)(((e,t)=>({isReposLoading:(0,l.mV)(e,t.serverType),repositories:((0,l.w4)(e,t.serverType)||[]).map((e=>({value:e.cloneURL,label:e.fullName,description:e.cloneURL})))})),((e,t)=>({refreshRepositories:()=>{e((0,y.qE)((0,C.T1)(u.SM,t.serverType)))}})))(S)},59339:(e,t,o)=>{"use strict";o.d(t,{aA:()=>i,c8:()=>a,uS:()=>n});let i=function(e){return e.history="history",e.batch="batch-history",e.details="details",e.triggers="triggers",e.metrics="metrics",e}({}),a=function(e){return e.ENABLED="ENABLED",e.DISABLED="DISABLED",e}({}),n=function(e){return e.CRON="cron",e.RATE="rate",e}({})},56631:(e,t,o)=>{"use strict";o.d(t,{o:()=>i});const i={encode:e=>btoa(e),decode:e=>atob(e),encodeURI:e=>btoa(e).replace(/=/g,"").replace(/[+\/]/g,(e=>"+"==e?"-":"_"))}},38497:(e,t,o)=>{"use strict";o.d(t,{HY:()=>n,XD:()=>a,a7:()=>i});const i=e=>/^[a-f0-9]{40}$/.test(e),a=e=>e.substr(0,8),n=e=>{const t=e.trim();if(t.length<=80&&!t.includes("\n"))return t;const o=t.substr(0,80).split("\n");return 1===o.length?`${o[0].trim()}...`:o[0].trim()}},5673:(e,t,o)=>{"use strict";o.d(t,{AY:()=>u,LI:()=>p,PX:()=>r,WM:()=>c,dz:()=>s,mE:()=>d,os:()=>l});var i=o(60826),a=o(73808),n=o(38497);const r=e=>("string"==typeof e?e:e.referenceName).startsWith(a.hR.BRANCH),s=e=>("string"==typeof e?e:e.referenceName).startsWith(a.hR.TAG),c=e=>e.referenceName===e.commitId&&(0,n.a7)(e.commitId),l=e=>((0,i.A)(r(e),`[asBranchName] ${e} is not a qualified branch name.`),e.substr(a.hR.BRANCH.length)),d=e=>((0,i.A)(s(e),`[asTagName] ${e} is not a qualified tag name.`),e.substr(a.hR.TAG.length)),u=e=>`${a.hR.BRANCH}${e}`,p=e=>{if(r(e))return l(e);if(s(e))return d(e);throw new Error(`[asUnqualifiedName] ${e} could not be parsed as a qualified branch or tag name`)}},87955:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>h,Cm:()=>l,Jv:()=>u,ZJ:()=>r,qW:()=>d,wt:()=>c});var i=o(1081),a=o(66480);const n={identifiers:{},trees:{},blobs:{}};let r=function(e){return e.IDENTIFIER="identifier",e.TREE="tree",e.BLOB="blob",e.COMMIT="commit",e}({}),s=function(e){return e.SET_OBJECT="reducers/codecommit/objects/SET_OBJECT",e}({});const c=(e,t)=>({objectType:e,type:s.SET_OBJECT,payload:{...t}}),l=(0,i.Mz)(((e,t)=>Object.values(e.codecommit.objects.identifiers).find((e=>e.input.repositoryName===t.repositoryName&&e.input.commitSpecifier===t.commitSpecifier&&e.input.path===t.path))),(e=>e&&e.output)),d=(0,i.Mz)(((e,t)=>Object.values(e.codecommit.objects.blobs).find((e=>e.input.repositoryName===t.repositoryName&&e.input.blobId===t.blobId))),(e=>e&&e.output)),u=(0,i.Mz)(((e,t)=>Object.values(e.codecommit.objects.trees).find((e=>e.input.repositoryName===t.repositoryName&&e.input.treeId===t.treeId))),(e=>e&&e.output)),p=((0,i.Mz)(((e,t)=>({state:e,input:t,output:l(e,t)})),(e=>{let{state:t,input:o,output:i}=e;if(i&&i.identifier)switch(i.type){case r.TREE:return{type:r.TREE,object:u(t,{repositoryName:o.repositoryName,treeId:i.identifier})};case r.BLOB:return{type:r.BLOB,object:d(t,{repositoryName:o.repositoryName,blobId:i.identifier})}}})),e=>({[`${e.input.repositoryName}::${e.input.treeId}`]:e})),m=e=>({[`${e.input.repositoryName}::${e.input.blobId}`]:e}),h=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments.length>1?arguments[1]:void 0;if((0,a.ED)(t))return{...n,identifiers:e.identifiers};if(t.type!==s.SET_OBJECT)return e;switch(t.objectType){case r.IDENTIFIER:return{...e,identifiers:{...e.identifiers,...(o=t.payload,{[`${o.input.repositoryName}::${o.output.identifier}`]:o})}};case r.BLOB:return{...e,blobs:{...e.blobs,...m(t.payload)}};case r.TREE:return{...e,trees:{...e.trees,...p(t.payload)}}}var o;return e}},73808:(e,t,o)=>{"use strict";o.d(t,{$d:()=>l,$z:()=>c,Fk:()=>n,I2:()=>m,SS:()=>u,f0:()=>p,hR:()=>i,l7:()=>r,oj:()=>d,ss:()=>a,t6:()=>s});let i=function(e){return e.BRANCH="refs/heads/",e.TAG="refs/tags/",e}({}),a=function(e){return e.branch="branch",e.tag="tag",e.commit="commit",e}({}),n=function(e){return e.DIRECTORY="directory",e.FILE="file",e.SYMLINK="symlink",e.GITLINK="gitlink",e}({}),r=function(e){return e.BEFORE="BEFORE",e.AFTER="AFTER",e}({}),s=function(e){return e.open="OPEN",e.closed="CLOSED",e}({}),c=function(e){return e.created="PULL_REQUEST_CREATED",e.statusChanged="PULL_REQUEST_STATUS_CHANGED",e.sourceReferenceUpdated="PULL_REQUEST_SOURCE_REFERENCE_UPDATED",e.mergeStateChanged="PULL_REQUEST_MERGE_STATE_CHANGED",e}({}),l=function(e){return e.approve="APPROVE",e.revoke="REVOKE",e}({}),d=function(e){return e.Automerge="AUTOMERGE",e}({}),u=function(e){return e.LineLevel="LINE_LEVEL",e}({}),p=function(e){return e.UseNewContent="USE_NEW_CONTENT",e.KeepSource="KEEP_SOURCE",e.KeepDestination="KEEP_DESTINATION",e}({}),m=function(e){return e.FastForward="FAST_FORWARD_MERGE",e.ThreeWay="THREE_WAY_MERGE",e.Squash="SQUASH_MERGE",e}({})},27421:(e,t,o)=>{"use strict";o.d(t,{FA:()=>c,XR:()=>r,Yu:()=>s,jD:()=>n});var i=o(7474),a=o(89221);const n=Symbol("UP_DIRECTORY"),r=20,s=(0,i.G7)(a.H.CodeCommitDefaultBranchNameChange)?"main":"master";let c=function(e){return e.create="new",e.upload="upload",e.edit="edit",e}({})},54707:(e,t,o)=>{"use strict";o.d(t,{VY:()=>d,bU:()=>l,sl:()=>c,wo:()=>n});var i=o(25163),a=o(87955);const n=e=>{const{repositoryName:t,path:o=""}=(0,i.y)(e);return{path:o,repositoryName:t}},r="browse-repo.path";let s=r;const c=e=>{s=e===a.ZJ.BLOB?"browse-repo.view":r},l=()=>s,d=e=>{const{path:t}=(0,i.y)(e);return t?t.split("/"):[]}},42560:(e,t,o)=>{"use strict";o.d(t,{D:()=>i});let i=function(e){return e.details="details",e.activity="activity",e.changes="changes",e.commits="commits",e.approvals="approvals",e}({})},40743:(e,t,o)=>{"use strict";o.d(t,{MV:()=>d,Yl:()=>r,cd:()=>c});var i=o(7474),a=o(18562),n=o(89221);let r=function(e){return e.SERVER="Server",e.LAMBDA="Lambda",e.ECS="ECS",e.KUBERNETES="Kubernetes",e}({});(0,i.G7)(n.H.CodeDeployOnPrem)?(0,a.t)("codedeploy:application.computeLabels.server"):(0,a.t)("codedeploy:application.computeLabels.ec2"),(0,a.t)("codedeploy:application.computeLabels.lambda"),(0,a.t)("codedeploy:application.computeLabels.ecs"),(0,a.t)("codedeploy:application.computeLabels.kubernetes"),(0,a.t)("codedeploy:deploymentGroup.InPlace"),(0,a.t)("codedeploy:deploymentGroup.BlueGreen");let s=function(e){return e.BLUE="Blue",e.GREEN="Green",e}({});s.BLUE,(0,a.t)("codedeploy:deployment.blue.label"),s.GREEN,(0,a.t)("codedeploy:deployment.green.label");let c=function(e){return e.InProgress="InProgress",e.Succeeded="Succeeded",e.Failed="Failed",e.Pending="Pending",e.Skipped="Skipped",e.Unknown="Unknown",e}({});(0,a.t)("codedeploy:deployment.instance.progress.pending"),(0,a.t)("codedeploy:deployment.instance.progress.inProgress"),(0,a.t)("codedeploy:deployment.instance.progress.succeeded"),(0,a.t)("codedeploy:deployment.instance.progress.failed"),(0,a.t)("codedeploy:deployment.instance.progress.skipped"),(0,a.t)("codedeploy:deployment.instance.progress.unknown"),(0,a.t)("codedeploy:deployment.instance.progress.ready"),(0,a.t)("codedeploy:deployment.progress.created"),(0,a.t)("codedeploy:deployment.progress.queued"),(0,a.t)("codedeploy:deployment.progress.inProgress"),(0,a.t)("codedeploy:deployment.progress.baking"),(0,a.t)("codedeploy:deployment.progress.succeeded"),(0,a.t)("codedeploy:deployment.progress.failed"),(0,a.t)("codedeploy:deployment.progress.stopped"),(0,a.t)("codedeploy:deployment.progress.ready");const l={TimeBasedLinear:(0,a.t)("codedeploy:deploymentConfig.type.TimeBasedLinear"),TimeBasedCanary:(0,a.t)("codedeploy:deploymentConfig.type.TimeBasedCanary"),AllAtOnce:(0,a.t)("codedeploy:deploymentConfig.type.AllAtOnce")};(0,i.G7)(n.H.CodeDeployAdaptiveDeployments)&&(l.Adaptive=(0,a.t)("codedeploy:deploymentConfig.type.Adaptive"));let d=function(e){return e.GitHub="GitHub",e.S3="S3",e.String="String",e.AppSpecContent="AppSpecContent",e}({})},99794:(e,t,o)=>{"use strict";o.d(t,{R5:()=>r,cU:()=>u,n7:()=>l});var i=o(1081),a=o(2543);let n=function(e){return e.SET_SINGLE_APPLICATION="reducer/codedeploy/applications/SET_SINGLE_APPLICATION",e.SET_APPLICATIONS="reducer/codedeploy/applications/SET_APPLICATIONS",e}({});const r=e=>({type:n.SET_SINGLE_APPLICATION,payload:e}),s={},c=((0,i.Mz)((e=>e.codedeploy.applications),Object.values),(0,i.Mz)(((e,t)=>(0,a.find)(e.codedeploy.applications,{applicationName:t})),(e=>e))),l=(0,i.Mz)((e=>{const{applicationName:t}=e.location.payload;return t}),(e=>e)),d=((0,i.Mz)((e=>c(e,l(e))),(e=>e)),(e,t)=>(0,a.pickBy)(e,(e=>e.applicationName!==t))),u=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case n.SET_APPLICATIONS:return{...(0,a.keyBy)(t.payload,"applicationName")};case n.SET_SINGLE_APPLICATION:return{...d(e,t.payload.applicationName),...(0,a.keyBy)([t.payload],"applicationName")}}return e}},51818:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>y,gw:()=>u,pW:()=>p,u0:()=>s,x1:()=>c});var i=o(1081),a=o(2543),n=o(99794);let r=function(e){return e.SET_SINGLE_DEPLOYMENT_GROUP="reducer/codedeploy/deploymentGroups/SET_SINGLE_DEPLOYMENT_GROUP",e.SET_DEPLOYMENT_GROUPS="reducer/codedeploy/deploymentGroups/SET_DEPLOYMENT_GROUPS",e}({});const s=(e,t)=>({type:r.SET_DEPLOYMENT_GROUPS,payload:{applicationName:e,deploymentGroups:t}}),c=(e,t)=>({type:r.SET_SINGLE_DEPLOYMENT_GROUP,payload:{deploymentGroup:t,applicationName:e}}),l={},d=e=>e.codedeploy.deploymentGroups,u=(0,i.Mz)(n.n7,d,((e,t)=>(0,a.filter)(t,(t=>t.applicationName===e)))),p=e=>e.location.payload.deploymentGroupName,m=((0,i.Mz)(n.n7,p,d,((e,t,o)=>o[m(e,t)])),(e,t)=>`${e}:${t}`),h=e=>(0,a.keyBy)(e,(e=>{let{applicationName:t,deploymentGroupName:o}=e;return m(t,o)})),y=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case r.SET_SINGLE_DEPLOYMENT_GROUP:return{...e,[m(t.payload.applicationName,t.payload.deploymentGroup.deploymentGroupName)]:t.payload.deploymentGroup};case r.SET_DEPLOYMENT_GROUPS:const{applicationName:o,deploymentGroups:i}=t.payload;return{...(0,a.omitBy)(e,(e=>e.applicationName===o)),...h(i)}}return e}},73944:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>h,Q:()=>u});var i=o(1081),a=o(2543),n=o(78265),r=o(40743),s=o(25163);let c=function(e){return e.CLEAR_ALL_INSTANCES="reducer/codedeploy/deployments/instances/CLEAR_ALL_INSTANCES",e.CLEAR_INSTANCES_FOR_DEPLOYMENT="reducer/codedeploy/deployments/instances/CLEAR_INSTANCES_FOR_DEPLOYMENT",e.SET_INSTANCES="reducer/codedeploy/deployments/instances/SET_INSTANCES",e.SET_SINGLE_INSTANCE="reducer/codedeploy/deployments/instances/SET_SINGLE_INSTANCE",e}({});const l={},d=e=>e.codedeploy.deploymentInstances,u=e=>e.location.payload.instanceId,p=(0,i.Mz)(d,n.E8,u,((e,t,o)=>e&&e[t]&&e[t][o])),m=((0,i.Mz)(d,n.TO,((e,t)=>t&&0!==Object.values(t).length&&0!==Object.values(e).length?Object.values(((e,t)=>e[t])(e,t.deploymentId)||{}).sort(((e,t)=>e.instanceId>t.instanceId?1:-1)):[])),(0,i.Mz)(p,(e=>(0,a.find)(e.lifecycleEvents,(e=>e.status===r.cd.Failed)))),(0,i.Mz)(s.y,(e=>e.lifecycleEventName))),h=((0,i.Mz)(p,m,((e,t)=>(0,a.find)(e.lifecycleEvents,(e=>e.status===r.cd.Failed&&(e.lifecycleEventName===t||!t))))),function(){let e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,o=arguments.length>1?arguments[1]:void 0;switch(o.type){case c.CLEAR_ALL_INSTANCES:return l;case c.CLEAR_INSTANCES_FOR_DEPLOYMENT:return e=o.payload,{...(0,a.omit)(t,e)};case c.SET_INSTANCES:return e=o.payload[0].deploymentId,{...t,[e]:{...(0,a.keyBy)(o.payload,"instanceId")}};case c.SET_SINGLE_INSTANCE:e=o.payload.deploymentId;const i=t[e],n={[o.payload.instanceId]:o.payload};return{...t,[e]:{...i,...n}}}return t})},78265:(e,t,o)=>{"use strict";o.d(t,{E8:()=>s,TO:()=>c,bg:()=>d});var i=o(1081),a=o(2543);let n=function(e){return e.SET_DEPLOYMENTS="reducer/codedeploy/deployments/SET_DEPLOYMENTS",e.SET_SINGLE_DEPLOYMENT="reducer/codedeploy/deployments/SET_SINGLE_DEPLOYMENT",e}({});const r={},s=e=>e.location.payload.deploymentId||e.location.prev.payload.deploymentId,c=e=>{const t=s(e);return e.codedeploy.deployments[t]},l=(0,i.Mz)((e=>e.codedeploy.deployments),Object.values),d=((0,i.Mz)(l,((e,t)=>t),((e,t)=>e.filter((e=>e.deploymentGroupName===t)))),function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case n.SET_DEPLOYMENTS:return{...(0,a.keyBy)(t.payload,"deploymentId")};case n.SET_SINGLE_DEPLOYMENT:return{...e,...(0,a.keyBy)([t.payload],"deploymentId")}}return e})},38022:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>l,v1:()=>c});var i=o(1081),a=o(2543);let n=function(e){return e.SET_INSTANCES="reducer/codedeploy/on-premises-instances/SET_INSTANCES",e.SET_SINGLE_INSTANCE="reducer/codedeploy/on-premises-instances/SET_SINGLE_INSTANCE",e}({});const r={},s=e=>e.codedeploy.onPremInstances,c=((0,i.Mz)(s,Object.values),e=>e.location.payload.instanceName),l=((0,i.Mz)(s,c,((e,t)=>e[t])),function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case n.SET_INSTANCES:return{...e,...(0,a.keyBy)(t.payload,"instanceName")};case n.SET_SINGLE_INSTANCE:return{...e,...(0,a.keyBy)([t.payload],"instanceName")}}return e})},95736:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>O,BQ:()=>S,_j:()=>f,uG:()=>T,p$:()=>g,wK:()=>E});var i=o(25473),a=o(1081),n=o(2543),r=o(56631),s=o(78265),c=o(99794),l=o(51818),d=(o(89501),o(60826)),u=o(40743);o(72664),o(70289),o(63158),o(43786);var p=o(75013);const m=(0,o(45573).A)((()=>Promise.resolve().then(o.t.bind(o,85072,23)).then((e=>e.default||e)).then((e=>(0,p.r)(e))))),h=(m("addTagsToOnPremisesInstances"),m("batchGetApplicationRevisions"),m("batchGetApplications"),m("batchGetDeploymentGroups"),m("batchGetDeploymentInstances"),m("batchGetDeployments"),m("batchGetDeploymentTargets"),m("batchGetOnPremisesInstances"),m("continueDeployment"),m("createApplication"),m("createDeployment"),m("createDeploymentConfig"),m("createDeploymentGroup"),m("deleteApplication"),m("deleteDeploymentConfig"),m("deleteDeploymentGroup"),m("deleteGitHubAccountToken"),m("deleteResourcesByExternalId"),m("deregisterOnPremisesInstance"),m("getApplication"),m("getApplicationRevision"),m("getDeployment"),m("getDeploymentConfig"),m("getDeploymentGroup"),m("getDeploymentInstance"),m("getDeploymentTarget"),m("getOnPremisesInstance"),m("listApplicationRevisions"),m("listApplications"),m("listDeploymentConfigs"),m("listDeploymentGroups"),m("listDeploymentInstances"),m("listDeployments"),m("listDeploymentTargets"),m("listGitHubAccountTokenNames"),m("listOnPremisesInstances"),m("listTagsForResource"),m("putLifecycleEventHookExecutionStatus"),m("registerApplicationRevision"),m("registerOnPremisesInstance"),m("removeTagsFromOnPremisesInstances"),m("skipWaitTimeForInstanceTermination"),m("stopDeployment"),m("tagResource"),m("untagResource"),m("updateApplication"),m("updateDeploymentGroup"),e=>{let t="";if(!e)return t;const{revisionType:o}=e;switch(o){case u.MV.S3:if(e.s3Location){const{bucket:o,key:i,bundleType:a,version:n,eTag:r}=e.s3Location;(0,d.A)(!!o&&!!i&&!!a,"Required parameter not provided!"),t=`s3://${o}/${i}`;let s="";n&&r?s=`?versionId=${n}&eTag=${r}`:r?s=`?eTag=${r}`:n&&(s=`?versionId=${n}`),t=s?`${t}${s}`:t}break;case u.MV.GitHub:if(e.gitHubLocation){const{repository:o,commitId:i}=e.gitHubLocation;(0,d.A)(!!o&&!!i,"Required parameter not provided!"),t=`github://${o}/${i}`}break;case u.MV.AppSpecContent:e.appSpecContent&&"string"==typeof e.appSpecContent.sha256&&(t=e.appSpecContent.sha256);break;case u.MV.String:e.string&&"string"==typeof e.string.sha256&&(t=e.string.sha256)}return t});let y=function(e){return e.SET_SINGLE_REVISION="reducer/codedeploy/revisions/SET_SINGLE_REVISION",e.SET_REVISIONS="reducer/codedeploy/revisions/SET_REVISIONS",e}({});const g=(e,t)=>({type:y.SET_REVISIONS,payload:{applicationName:e,revisions:t}}),E=e=>({type:y.SET_SINGLE_REVISION,payload:e}),b={},C=e=>e.codedeploy.revisions,f=((0,a.Mz)(C,s.TO,((e,t)=>{if(!t)return;const{applicationName:o,revision:i}=t;return v(e,o,i)})),(0,a.Mz)((e=>r.o.decode(e.location.payload.revisionLocation)),(e=>JSON.parse(e)))),T=(0,a.Mz)(f,h),S=(0,a.Mz)(C,c.n7,f,((e,t,o)=>e[A(t,o)])),v=((0,a.Mz)(S,l.gw,((e,t)=>t.length>0&&e&&e.genericRevisionInfo&&e.genericRevisionInfo.deploymentGroups&&e.genericRevisionInfo.deploymentGroups.length>0?t.filter((t=>e.genericRevisionInfo.deploymentGroups.indexOf(t.deploymentGroupName)>=0)):[])),(0,a.Mz)(c.n7,C,((e,t)=>Object.values((0,n.pickBy)(t,(t=>e===t.applicationName))))),(e,t,o)=>e[A(t,o)]),A=(e,t)=>`${e}:${i((()=>{switch(t.revisionType){case u.MV.String:return t.string.sha256;case u.MV.AppSpecContent:return t.appSpecContent.sha256;default:return t}})())}`,_=e=>(0,n.keyBy)(e,(e=>{let{applicationName:t,revisionLocation:o}=e;return A(t,o)})),O=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:b,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case y.SET_SINGLE_REVISION:return{...e,[A(t.payload.applicationName,t.payload.revisionLocation)]:t.payload};case y.SET_REVISIONS:const{applicationName:o,revisions:i}=t.payload;return{...(0,n.omitBy)(e,(e=>e.applicationName!==o)),..._(i)}}return e}},50012:(e,t,o)=>{"use strict";o.d(t,{p:()=>n});var i=o(69003);const a=(0,o(44374).F)(i.yw),n={batchDeleteBuilds:a(i.yw.batchDeleteBuilds),batchGetBuilds:a(i.yw.batchGetBuilds),batchGetProjects:a(i.yw.batchGetProjects),createProject:a(i.yw.createProject),createWebhook:a(i.yw.createWebhook),deleteProject:a(i.yw.deleteProject),deleteWebhook:a(i.yw.deleteWebhook),importSourceCredentials:a(i.yw.importSourceCredentials),listBuilds:a(i.yw.listBuilds),listBuildsForProject:a(i.yw.listBuildsForProject),listCuratedEnvironmentImages:a(i.yw.listCuratedEnvironmentImages),listProjects:a(i.yw.listProjects),startBuild:a(i.yw.startBuild),stopBuild:a(i.yw.stopBuild),updateWebhook:a(i.yw.updateWebhook),updateProject:a(i.yw.updateProject),listReportGroups:a(i.yw.listReportGroups),listSharedReportGroups:a(i.yw.listSharedReportGroups),batchGetReportGroups:a(i.yw.batchGetReportGroups),listReports:a(i.yw.listReports),batchGetReports:a(i.yw.batchGetReports),describeTestCases:a(i.yw.describeTestCases),deleteReport:a(i.yw.deleteReport),deleteReportGroup:a(i.yw.deleteReportGroup),listReportsForReportGroup:a(i.yw.listReportsForReportGroup),listSourceCredentials:a(i.yw.listSourceCredentials),deleteSourceCredentials:a(i.yw.deleteSourceCredentials)}},69003:(e,t,o)=>{"use strict";o.d(t,{E8:()=>w,FN:()=>x,H_:()=>L,LR:()=>B,dI:()=>N,eC:()=>M,pZ:()=>I,pb:()=>D,s3:()=>W,tf:()=>_,uG:()=>G,yt:()=>F,yw:()=>R});var i=o(93020),a=o(71455),n=o(85072),r=o(57556),s=o(80010),c=o(32081),l=o(3362),d=o(1993),u=o(2170),p=o(2991),m=o(77492),h=o(77969),y=o(47417),g=o(40919),E=o(83417),b=o(5761),C=o.n(b),f=o(7474),T=o(89221),S=o(75013),v=o(74615),A=o(25892);const _=["us-gov-west-1","us-iso-east-1","us-isob-east-1","us-east-1"];function O(e){return A.tb.getEventTracker().emitAwsSdkMetrics(e),e}const{codebuildoauth:I}={codebuildoauth:(0,f.G7)(T.H.CodeBuildGammaEndpoint)?O(new(C())({...S.p,region:_.indexOf((0,v.kh)())>=0?(0,v.kh)():"us-east-1",endpoint:A.Kj})):(0,f.G7)(T.H.CodeBuildBetaEndpoint)?O(new(C())({...S.p,region:"us-west-2",endpoint:A.nz})):O(new(C())(S.p))},{codebuild:R}={codebuild:(0,f.G7)(T.H.CodeBuildGammaEndpoint)?O(new r({...S.p,region:_.indexOf((0,v.kh)())>=0?(0,v.kh)():"us-east-1",endpoint:A.Kj})):(0,f.G7)(T.H.CodeBuildBetaEndpoint)?O(new r({...S.p,region:"us-west-2",endpoint:A.nz})):O(new r(S.p))},{codedeploy:D,codedeploySigner:N}=(()=>{if((0,f.G7)(T.H.CodeDeployGammaEndpoint)){const e={...S.p},t=O(new n(e));return{codedeploy:t,codedeploySigner:t}}return{codedeploy:O(new n(S.p)),codedeploySigner:O(new n(S.p))}})(),{codecommit:P,codecommitSigner:L}=(()=>{if((0,f.G7)(T.H.CodeCommitGammaEndpointIAD)){const e=O(new s({...S.p,region:"us-east-1"}));return{codecommitSigner:e,codecommit:e}}return{codecommit:O(new s(S.p)),codecommitSigner:O(new s(S.p))}})(),{codepipeline:w,codepipelineSigner:M}=(()=>{if((0,f.G7)(T.H.CodePipelineGammaEndpoint)){const e=O(new c(S.p));return{codepipeline:e,codepipelineSigner:e}}return{codepipeline:O(new c(S.p)),codepipelineSigner:O(new c(S.p))}})(),{codestarDefault:k,codestarSigner:U}=(()=>{if((0,f.G7)(T.H.CodeStarBetaEndpoint)){const e=O(new a({...S.p,endpoint:"https://devhub-preview-beta.us-east-1.amazonaws.com"}));return{codestarDefault:e,codestarSigner:e}}if((0,f.G7)(T.H.CodeStarGammaEndpoint)){const e=O(new a({...S.p,endpoint:"https://devhub-preview-gamma.us-east-1.amazonaws.com"}));return{codestarDefault:e,codestarSigner:e}}return{codestarDefault:O(new a(S.p)),codestarSigner:O(new a(S.p))}})(),B=(O(new l(S.p)),O(new d(S.p)),O(new u(S.p))),G=O(new p(S.p)),W=(O(new h(S.p)),O(new y(S.p)),O(new g(S.p)),O(new m(S.p))),x=O(new E(S.p)),F=O(new i.IAMAdmin({...S.p,region:A.Ty,endpoint:A.Kh}))},75013:(e,t,o)=>{"use strict";o.d(t,{RZ:()=>l,p:()=>s,r:()=>c});var i=o(2543),a=o(63158),n=o(74615),r=o(25892);const s={credentials:r.ZT,clientSideMonitoring:!0,region:(0,n.kh)()},c=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const o=new e({...s,...t.config});return r.tb.getEventTracker().emitAwsSdkMetrics(o),o},l=(e,t,o)=>{let{config:r={}}=o;if(r=(0,a.j)(r),(0,i.isEmpty)(r))return;const s=c(e.constructor,{config:{region:e.config.region||(0,n.kh)(),...r}});return t.bind(s)}},59098:(e,t,o)=>{"use strict";o.d(t,{A:()=>r});var i=o(45573),a=o(75013);const n=(0,i.A)((()=>o.e(774).then(o.t.bind(o,50914,23)).then((e=>e.default||e)).then((e=>(0,a.r)(e))))),r={listSecrets:n("listSecrets"),createSecret:n("createSecret")}},44374:(e,t,o)=>{"use strict";o.d(t,{F:()=>a});var i=o(75013);const a=e=>t=>{const o=t.bind(e);return function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;const r=n&&(0,i.RZ)(e,t,n);return r?r(a).promise():o(a).promise()}}},45573:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(75013),a=o(79450);const n=e=>t=>async function(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;const r=await e(),s=n&&(0,i.RZ)(r,r[t],n);try{return s?await s(o).promise():await r[t](o).promise()}catch(e){throw a.P.error({code:e.code,message:e.message,service:r.serviceIdentifier,operation:String(t),region:r.region,requestId:e.requestId,statusCode:e.statusCode})}}},62068:(e,t,o)=>{"use strict";o.d(t,{t:()=>a});var i=o(75013);const a=e=>t=>{const o=t.bind(e);return async(a,n)=>{const r=n&&(0,i.RZ)(e,t,n);return r?{response:await r(a).promise()}:{response:await o(a).promise()}}}},96537:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(96540),a=o(93196);const n=(0,i.memo)(r);function r(e){let{assertive:t=!1,delay:o=10,visible:n=!1,tagName:r="span",children:c,id:l,...d}=e;const u=(0,i.useRef)(null),p=(0,i.useRef)(null);return(0,i.useEffect)((()=>{function e(){if(p.current&&u.current){const e=s(u.current);s(p.current)!==e&&(p.current.innerText=e)}}let t;return o?t=setTimeout(e,o):e(),()=>{t&&clearTimeout(t)}})),i.createElement(i.Fragment,null,n&&i.createElement(r,{ref:u,id:l},c),i.createElement(a.A,d,!n&&i.createElement(r,{ref:u,"aria-hidden":"true"},c),i.createElement("span",{ref:p,"aria-atomic":"true","aria-live":t?"assertive":"off"})))}function s(e){return(e.innerText||"").replace(/\s+/g," ").trim()}},93196:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(96540);function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var i in o)({}).hasOwnProperty.call(o,i)&&(e[i]=o[i])}return e},a.apply(null,arguments)}function n(e){return i.createElement("span",a({},e,{className:"dx-ScreenReaderOnly"}))}},59388:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>_,y4:()=>f});var i=o(96540),a=o(17040),n=o(43630),r=o(78453),s=o(2696),c=o(69885),l=o(32242),d=o(60826),u=o(60739),p=o(18562),m=o(96537);let h=function(e){return e.oauth="OAUTH",e}({});const y=(0,p.t)("common:oauth.connect.connecting.text"),g=(0,p.t)("common:oauth.connect.connected.text"),E=(0,p.t)("common:oauth.connect.success.text"),b=(0,p.t)("common:oauth.connect.failure.text"),C=(0,p.t)("common:oauth.connect.abort.text"),f="resizable=yes,width=600,height=600",T=(e,t,o)=>{const i=window.open(e,t,`noopener,noreferrer,${f}`),a=setInterval((()=>{(null==i||i.closed)&&(clearInterval(a),o(i))}),250);return i};class S extends i.Component{constructor(e){super(e);const{authUrl:t,asyncGetAuthUrl:o}=e;(0,d.A)(!Boolean(t&&o),"Cannot pass authUrl and asyncGetAuthUrl"),this.state={loadingUrl:!1,alertDismissed:!1}}componentDidUpdate(e){this.props.status===e.status&&this.props.message===e.message||this.setState((e=>({...e,alertDismissed:!1})))}async componentDidMount(){if(window.addEventListener("message",this.handleMessage),this.props.asyncGetAuthUrl&&this.props.forcePopup){this.setState({loadingUrl:!0});try{const e=await this.props.asyncGetAuthUrl();this.setState({asyncAuthUrl:e,loadingUrl:!1})}catch(e){this.setState({loadingUrl:!1}),this.handleError(e)}}}componentWillUnmount(){window.removeEventListener("message",this.handleMessage)}handleMessage=e=>{const{id:t}=this.props;if(e.origin!==l.V||!e.data||"string"!=typeof e.data)return;let o;try{if(o=JSON.parse(e.data),o.type!==h.oauth||o.id!==t)return}catch(e){return void console.error(e)}switch(o.status){case c.Y0.successful:this.handleSuccess(o.payload);break;case c.Y0.unsuccessful:default:this.handleError(o.payload)}};closePopup=()=>{this.popup&&this.popup.close()};handleSuccess=e=>{const{updateStatus:t,successMessage:o,onSuccess:i}=this.props;t(c.Y0.successful,o||E,e),i&&i(e),this.closePopup()};handleError=e=>{const{updateStatus:t,failedMessage:o,onError:i}=this.props;t(c.Y0.unsuccessful,o||b,e),i&&i(e),this.closePopup()};handleAbort=e=>{if(this.props.legacyAuthHandler)this.props.legacyAuthHandler();else{const{updateStatus:t,status:o,onError:i}=this.props;o===c.Y0.connecting&&(t(c.Y0.aborted,C,e),i&&i(u.W.error(this.props.failedMessage||C,"ConnectButtonAborted")))}};dismissAlert=()=>{this.setState((e=>({...e,alertDismissed:!0})))};handleErrorDismiss=()=>{this.dismissAlert();const{updateStatus:e}=this.props;e(c.Y0.disconnected)};connect=async()=>{const{authUrl:e,asyncGetAuthUrl:t,updateStatus:o}=this.props,i="text"in this.props?this.props.text:"";let a;if(o(c.Y0.connecting),e)this.popup=T(e,i,this.handleAbort);else if(this.state.asyncAuthUrl&&this.props.forcePopup)this.popup=T(this.state.asyncAuthUrl,i,this.handleAbort);else{if(t)try{a=await t()}catch(e){this.handleError(e)}a&&(window.location.href=a)}};reconnect=()=>{this.props.updateStatus(c.Y0.disconnected),this.connect()};render(){if("render"in this.props)return this.props.render({loading:this.props.status===c.Y0.connecting||this.state.loadingUrl,status:this.props.status,connect:this.connect});const{text:e,authUrl:t,asyncGetAuthUrl:o,status:a=c.Y0.disconnected,message:l="",connectingText:d=y,connectedText:u=g,disabled:p=!1,variant:h="normal",showAlert:E=!0}=this.props,b=a===c.Y0.successful&&!this.props.allowReconnect;return a===c.Y0.successful&&E?i.createElement(r.A,{size:"m"},i.createElement(n.A,{formAction:"none",disabled:b,loading:this.state.loadingUrl,onClick:this.reconnect,variant:h},u),!this.state.alertDismissed&&i.createElement(s.A,{type:"success",dismissible:!0,onDismiss:()=>this.dismissAlert()},l),i.createElement(m.A,null,l)):a===c.Y0.unsuccessful&&E?i.createElement(r.A,{size:"m"},i.createElement(n.A,{formAction:"none",loading:this.state.loadingUrl,onClick:this.connect,variant:h},e),!this.state.alertDismissed&&i.createElement(s.A,{type:"error",dismissible:!0,onDismiss:this.handleErrorDismiss},l),i.createElement(m.A,null,l)):a===c.Y0.connecting?i.createElement(n.A,{formAction:"none",loading:!0,variant:h},d):a===c.Y0.aborted&&E?i.createElement(r.A,{size:"m"},i.createElement(n.A,{formAction:"none",loading:this.state.loadingUrl,onClick:this.connect,variant:h},e),!this.state.alertDismissed&&i.createElement(s.A,{type:"warning",dismissible:!0,onDismiss:this.handleErrorDismiss},l),i.createElement(m.A,null,l)):i.createElement(n.A,{formAction:"none",disabled:!t&&!o||p||b,loading:this.state.loadingUrl,onClick:this.connect,variant:h},a===c.Y0.successful&&!0!==this.props.allowReconnect?u:e)}}const v=(e,t)=>{let{id:o}=t;const{status:i,message:a}=(0,c.VC)(e,o);return{status:i,message:a}},A=(e,t)=>{let{id:o}=t;return{updateStatus:(t,i,a)=>{e((0,c.CZ)(o,t,i,a))}}},_=(0,a.Ng)(v,A)(S);(0,a.Ng)(v,A)((e=>{let{message:t,status:o,updateStatus:a}=e;const n=()=>{l(!0),a(c.Y0.disconnected)},[r,l]=(0,i.useState)(!1);(0,i.useEffect)((()=>{l(!1)}),[t,o]);const d={[c.Y0.aborted]:"warning",[c.Y0.unsuccessful]:"error",[c.Y0.successful]:"success",[c.Y0.connecting]:void 0,[c.Y0.disconnected]:void 0};return d[o]?i.createElement(i.Fragment,null,!r&&i.createElement(s.A,{type:d[o],dismissible:!0,onDismiss:()=>o===c.Y0.successful?l(!0):n},t),i.createElement(m.A,null,t)):null}))},32242:(e,t,o)=>{"use strict";o.d(t,{V:()=>a});const i=window.location.port?`:${window.location.port}`:"",a=`${window.location.protocol}//${window.location.hostname}${i}`},66079:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(96540),a=o(26521);const n=e=>{let{tiles:t,currentSelection:o,onChange:n,groupName:r,columns:s}=e;const c=t.map((e=>{let{id:t,label:o,description:i,disabled:a,image:n}=e;return{value:t,label:o,description:i,disabled:a,image:n}}));return i.createElement(a.A,{columns:s,items:c,name:r,value:o||null,onChange:e=>{let{detail:t}=e;return n(t.value)}})}},49197:(e,t,o)=>{"use strict";o.d(t,{A:()=>d});var i=o(96540),a=o(58510),n=o(62219),r=o(18562),s=o(22253),c=o(84760);class l extends i.Component{state={isExpanded:!1};toggle=()=>{this.setState((e=>({isExpanded:!e.isExpanded})))};render(){const{error:e}=this.props,{isExpanded:t}=this.state,o=e instanceof Array?e:[e],l=o[0],d=(0,n.d)(l)?l.code:(0,r.t)("common:error.header");return i.createElement(c.A,{type:"error",header:d},i.createElement(a.A,null,o.length>1?i.createElement(i.Fragment,null,t?i.createElement("ul",null,o.map(((e,t)=>i.createElement("li",{key:t},(0,n.j)(e))))):i.createElement("p",null,(0,n.j)(o[0])),i.createElement(s.A,{handleClick:this.toggle},t?(0,r.t)("common:error.collapse"):(0,r.t)("common:error.expand"))):i.createElement("p",null,(0,n.j)(o[0]))))}}const d=l},74653:(e,t,o)=>{"use strict";o.d(t,{t:()=>r});var i=o(96540),a=o(49197),n=o(63411);class r extends i.Component{didCatch=!1;report=n.LS.report({type:"VIEW_ERROR",subtype:this.props.metric});state={error:void 0};componentDidCatch(e){this.didCatch=!0,this.report.error(e),this.setState({error:e})}componentWillUnmount(){this.didCatch||this.report.success()}render(){return this.state.error?i.createElement(a.A,{error:this.state.error}):this.props.children}}},72664:(e,t,o)=>{"use strict";o.d(t,{U:()=>n,ok:()=>a});var i=o(52529);const a=e=>!(e instanceof Error||e instanceof i.i),n=e=>!(void 0===e||e instanceof Error||e instanceof i.i)},62219:(e,t,o)=>{"use strict";o.d(t,{j:()=>m,d:()=>h});var i=o(96540),a=o(89501),n=o(18562),r=o(52529),s=o(79450),c=o(51158),l=o(91501),d=o(74615);const u=e=>{const{resourceType:t}=e;let o="";switch(t){case"role":if("service-role"===e.resource.split("/")[0]){o=`roles/details/${e.resource.split("/")[1]}`;break}o=`roles/details/${e.resource}`;break;case"policy":o=`policies/details/${e}`;break;case"user":o=`users/details/${e.resource}`;break;case"assumed-role":o=`roles/details/${e.relativeId.split("/")[1]}`;break;default:o=""}return`/iamv2/home?region=${e.region||(0,d.kh)()}#/${o}`};var p=o(52703);const m=e=>h(e)?e instanceof s.P&&403===e.statusCode?i.createElement(c.Z,{size:"xs"},i.createElement("div",null,e.message),i.createElement(p.A,{href:u(a.s.fromString((0,l.k$)())),text:(0,n.t)("common:error.apiPermissionError")})):e.message:e instanceof r.i&&e.displayMessage?e.displayMessage:i.createElement("span",null,(0,n.t)("common:error.generalError")),h=e=>!!(e instanceof s.P||e.message&&e.code&&e.time&&e.requestId||e.message&&e.code&&e.time&&e.statusCode)},52529:(e,t,o)=>{"use strict";o.d(t,{i:()=>a});var i=o(18562);class a{constructor(e,t){let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this.stack=new Error(t).stack,this.displayMessage=e,this.message="string"==typeof e?e:(0,i.t)("common:error.fallbackErrorMessage.content"),this.code=t,this.isFault=o}static _fault(e,t){return new this(e,t,!0)}static _error(e,t){return new this(e,t,!1)}}},60739:(e,t,o)=>{"use strict";o.d(t,{W:()=>a});var i=o(52529);class a extends i.i{static fault(e,t){return this._fault(e,t)}static error(e,t){return this._error(e,t)}}},79450:(e,t,o)=>{"use strict";o.d(t,{P:()=>a});var i=o(52529);class a extends i.i{constructor(e){let{message:t,code:o,service:i,operation:a,region:n,requestId:r,statusCode:s}=e;super(t,o,!(arguments.length>1&&void 0!==arguments[1])||arguments[1]),this.service=i,this.operation=a,this.region=n,this.requestId=r,this.statusCode=s}static error(e){return new a(e,!1)}}},68634:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(96540),a=o(58499);const n=()=>i.createElement(a.A,{margin:{bottom:"l"}})},92695:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(96540),a=o(18562);const n=e=>{let{i18nKey:t,className:o,children:n,optional:r=!1}=e;return i.createElement("span",{className:`dx-FormFieldLabel ${o||""}`},t?(0,a.t)(t):n,r?i.createElement("i",null," - ",(0,a.t)("common:formFieldLabel.optional")):null)}},41583:(e,t,o)=>{"use strict";o.d(t,{$v:()=>s,Hn:()=>d,L:()=>c,Ro:()=>l,kR:()=>u,qD:()=>r});var i=o(2543),a=o.n(i),n=o(69003);const r="roc_partition_home_region";let s=function(e){return e.NoSuchEntityException="NoSuchEntityException",e.EntityAlreadyExistsException="EntityAlreadyExistsException",e}({});const c=async e=>{let{principalReference:t,providerType:o,marker:i}=e;const a={AuthorizedPrincipal:{providerType:o,principalReference:t},Marker:i};return await n.yt.listRolesByPrincipal(a).promise()},l=async e=>{const t=a().omit(e,["Description","TrustPolicySingleValueReplacements"]);return await n.yt.updateServiceRolePolicy(t).promise()},d=async e=>await n.yt.createPolicyForServiceRole(e).promise(),u=async e=>await n.yt.createServiceRole(e).promise()},25108:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>u,C_:()=>c,Vz:()=>l,YX:()=>r,km:()=>s});var i=o(2543),a=o(82264),n=function(e){return e.SET_SERVICE_ROLE="reducer/iamadmin/setServiceRole",e}(n||{});const r=e=>(t,o)=>t.common.iamAdmin.service[e]&&t.common.iamAdmin.service[e][o],s=e=>(t,o)=>t.common.iamAdmin.service[e]&&(0,i.find)(Object.values(t.common.iamAdmin.service[e]),(e=>{let{Arn:t}=e;return t===o})),c=e=>t=>t.common.iamAdmin.service[e]?Object.keys(t.common.iamAdmin.service[e]).map((o=>({value:t.common.iamAdmin.service[e][o].Arn,description:t.common.iamAdmin.service[e][o].Arn,label:o}))):[],l=e=>t=>({type:n.SET_SERVICE_ROLE,payload:{keyedBy:e,roles:t}}),d={},u=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:d,t=arguments.length>1?arguments[1]:void 0;return t.type===n.SET_SERVICE_ROLE?{...e,[t.payload.keyedBy]:{...(0,a.v)("RoleName",t.payload.roles)}}:e}},52703:(e,t,o)=>{"use strict";o.d(t,{A:()=>d});var i=o(96540),a=o(76486);const n=["https","http","mailto","ftp","ftps","file","ssh","s3","codecommit"],r=["/","?","#"],s=e=>{const t=e.toLowerCase().trim();if(t.startsWith("."))return e;if(t.startsWith("/"))return e;const o=t.indexOf(":");if(-1===o)return e;const i=t.substring(0,o);return r.some((e=>i.includes(e)))||n.includes(i)?e:""};var c=o(18562);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var i in o)({}).hasOwnProperty.call(o,i)&&(e[i]=o[i])}return e},l.apply(null,arguments)}const d=e=>{let{text:t,href:o,inverted:n,ariaLabel:r,...d}=e;return i.createElement(a.A,l({external:!0,externalIconAriaLabel:(0,c.t)("common:externalLinkIconLabel"),href:s(o),color:n?"inverted":"normal","data-testid":n?"inverted":"link",target:"_blank",rel:"noopener noreferrer",ariaLabel:r},d),t)}},22253:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(96540);function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var i in o)({}).hasOwnProperty.call(o,i)&&(e[i]=o[i])}return e},a.apply(null,arguments)}const n=e=>{let{className:t,handleClick:o,children:n,ariaLabel:r,handleFocus:s,...c}=e;const[l,d]=(0,i.useState)(!1);return i.createElement("a",a({className:`dx-FauxLink ${t||""}`,role:"button",tabIndex:0,onClick:o,onFocus:s,"aria-label":r,onKeyPress:(e=>t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),e(t),d(!0))})(o),"aria-pressed":l},c),n)}},93472:(e,t,o)=>{"use strict";o.d(t,{A:()=>m});var i=o(96540),a=o(17040),n=o(22751),r=o(43630),s=o(70879),c=o(58499),l=o(78453),d=o(18562),u=o(81535);const p={resetVisibleModalId:u.Iy},m=(0,a.Ng)(((e,t)=>({visible:(0,u.qw)(e,t.id)})),p)((e=>{var t;let{header:o,allowEnter:a,size:u,children:p,onConfirm:m,confirmLabel:h,cancelLabel:y,confirmDisabled:g=!1,confirmLoading:E=!1,footer:b,visible:C,resetVisibleModalId:f,onDismiss:T,preventDismissOnConfirm:S=!1,className:v,noFooter:A=!1,id:_,disableContentPaddings:O}=e;const I=e=>{T?T(e):f()},R=a?i.createElement("form",{onSubmit:e=>{e.preventDefault(),g||(m(),S||I())}},p):p;return i.createElement(s.A,{className:v?`dx-ModalContainer ${v}`:"dx-ModalContainer",size:u,visible:C,header:i.createElement(n.A,{variant:"h2"},o),onDismiss:I,closeAriaLabel:(0,d.t)("common:modalContainer.button.close"),disableContentPaddings:O,modalRoot:null!==(t=document.getElementById("app"))&&void 0!==t?t:void 0,footer:A?null:i.createElement(c.A,{float:"right"},b||i.createElement(l.A,{direction:"horizontal",size:"xs"},i.createElement(r.A,{formAction:"none","data-testid":"modal-cancel-button",variant:"link",onClick:()=>I()},y||(0,d.t)("common:modalContainer.button.cancel")),h&&m?i.createElement(r.A,{formAction:"none",variant:"primary","data-testid":"modal-confirm-click",onClick:e=>{m(),e.preventDefault()},disabled:g,loading:E},h):null))},R)}))},53118:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(96540),a=o(81535);const n=(0,o(17040).Ng)(null,(e=>({setVisibleModalId:t=>{e((0,a.FK)(t))}})))((e=>{let{render:t,setVisibleModalId:o,modalId:a}=e;return i.createElement(i.Fragment,null,t((()=>{o(a)})))}))},61097:(e,t,o)=>{"use strict";o.d(t,{A:()=>h});var i=o(96540),a=o(17040),n=o(43786),r=o(61088),s=o(1710),c=o(94357),l=o(78406),d=o(43558),u=o(13651);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var i in o)({}).hasOwnProperty.call(o,i)&&(e[i]=o[i])}return e},p.apply(null,arguments)}class m extends i.Component{componentDidMount(){const{isReady:e,refreshOnMount:t=!1}=this.props;(void 0===e||t)&&this.props.dispatchOrchestrator()}render(){const{isReady:e,result:t,error:o,render:i,replayRequest:a}=this.props;return i({error:o,result:t,replayRequest:a,isReady:!!e})}}const h=(0,a.Ng)(((e,t)=>({pageViewKey:(0,d.uq)(e),isReady:(0,s.m6)(e,t.statusKey),result:(0,l.bv)(e,t.statusKey),error:(0,s.v9)(e,t.statusKey)})),((e,t)=>{let{statusKey:o,effect:i,refreshOnMount:a}=t;const s=()=>{e((0,r.Q$)((0,n.T1)(c.z,i,o,a)))};return{dispatchOrchestrator:s,replayRequest:()=>{e((0,r.Q$)((0,u.wy)(o))),s()}}}))((e=>i.createElement(m,p({key:`${e.pageViewKey}${e.statusKey}`},e))))},19994:(e,t,o)=>{"use strict";o.d(t,{A:()=>d});var i=o(96540),a=o(54935),n=o(61097),r=o(60826),s=o(49197),c=o(74653);const l=e=>{let{isReady:t,error:o,children:n,render:l,result:d,statusKey:u,replayRequest:p}=e;return(0,r.A)(!Boolean(l&&n),"please only provide a render prop or children"),i.createElement(c.t,{metric:`ViewOrchestrator:${u}`},o&&i.createElement(s.A,{error:o}),!t&&i.createElement(a.A,null),t&&!o&&(l?l(d,{replayRequest:p}):n))},d=e=>{let{refreshOnMount:t,statusKey:o,effect:a,render:r,children:s}=e;return i.createElement(n.A,{refreshOnMount:t,statusKey:o,effect:a,render:e=>{let{isReady:t,error:a,result:n,replayRequest:c}=e;return i.createElement(l,{render:r,isReady:t,result:n,error:a,children:s,statusKey:o,replayRequest:c})}})}},78406:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>s,bv:()=>a,el:()=>n});var i=o(52863);const a=(e,t)=>e.common.orchestration[t],n=new i.A({initialState:{}}),{reducer:r}=n,s=r},63913:(e,t,o)=>{"use strict";function*i(e,t,o){try{t(yield e)}catch(e){o(e)}}o.d(t,{z:()=>i})},94357:(e,t,o)=>{"use strict";o.d(t,{z:()=>l});var i=o(43786),a=o(63411),n=o(13651),r=o(78406);const s="ORCHESTRATOR_ERROR",c=new Set;function*l(e,t,o){if(c.has(t))return;c.add(t),o&&(yield(0,n.wy)(t));const l=a.LS.report({type:s,subtype:t});try{let o;try{o=yield e,l.success()}catch(e){return l.error(e),void(yield(0,n.W0)(t,e))}yield(0,i.yJ)(r.el.update({[t]:o})),yield(0,n.f7)(t)}finally{c.delete(t)}}},51158:(e,t,o)=>{"use strict";o.d(t,{J:()=>a,Z:()=>n});var i=o(96540);const a=e=>{let{children:t,size:o,verticalSize:a=o,wrap:n=!0}=e;return i.createElement("div",null,i.createElement("div",{className:`dx-Repeater dx-Repeater--horizontal dx-Repeater--${o} dx-Repeater--verticalSize--${a} ${n?"dx-Repeater--wrap":"dx-Repeater--noWrap"}`},i.Children.map(t,(e=>e&&i.createElement("div",null,e)))))},n=e=>{let{children:t,size:o}=e;return i.createElement("div",null,i.createElement("div",{className:`dx-Repeater dx-Repeater--vertical dx-Repeater--${o}`},i.Children.map(t,(e=>e&&i.createElement("div",null,e)))))}},53974:(e,t,o)=>{"use strict";o.d(t,{A:()=>h});var i=o(96540),a=o(68634),n=o(94829),r=o(18562);const s=e=>{let{updateObjectKey:t,objectKey:o,showErrors:a,errorMessage:s,s3ObjectKeyLabel:c=(0,r.t)("codebuild:label.folder"),s3ObjectKeyHint:l}=e;return i.createElement(n.zB,{label:c,errorText:a?s:void 0,hintText:l},i.createElement(n.pd,{value:o,onInput:t,"data-testid":"codebuild-s3-object-key"}))};var c=o(17040),l=o(4918),d=o(86117),u=o(32162);const p=(0,c.Ng)((e=>({buckets:(0,u.xg)(e)})))((e=>{let{buckets:t,updateBucket:o,bucket:a,showErrors:n,errorMessage:s}=e;return i.createElement(d.A,{label:(0,r.t)("common:bucket"),errorText:n?s:void 0},i.createElement(l.A,{onChange:o,options:t.map((e=>({value:e.Name,label:e.Name}))),value:a||"","data-testid":"codebuild-s3-bucket-selector",empty:(0,r.t)("common:noResults")}))})),m=e=>t=>e(t.detail.value),h=e=>{let{bucket:t,objectKey:o,errors:n,showErrors:r,updateBucket:c,updateObjectKey:l,s3ObjectKeyLabel:d,s3ObjectKeyHint:u}=e;return i.createElement(i.Fragment,null,i.createElement(p,{bucket:t,errorMessage:n.bucket,showErrors:r,updateBucket:(h=c,e=>h(e.detail.value))}),i.createElement(a.A,null),i.createElement(s,{s3ObjectKeyLabel:d,s3ObjectKeyHint:u,objectKey:o,errorMessage:n.objectKey,showErrors:r,updateObjectKey:m(l)}));var h}},92538:(e,t,o)=>{"use strict";o.d(t,{A8:()=>n,wF:()=>a,z7:()=>r});var i=o(18562);const a=e=>e.value&&!e.key?(0,i.t)("common:tags.validation.key.empty"):e.key&&e.key.match(/^AWS:/i)?(0,i.t)("common:tags.validation.key.awsPrefix"):e.key&&e.key.length>128?(0,i.t)("common:tags.validation.key.tooLong"):void 0,n=e=>{if(e.value&&e.value.length>256)return(0,i.t)("common:tags.validation.value.tooLong")},r=e=>({key:a(e),value:n(e)})},64104:(e,t,o)=>{"use strict";o.d(t,{$J:()=>c,Q_:()=>r,r$:()=>d});var i=o(7474),a=o(89221),n=o(65975);let r=function(e){return e.none="none",e.codebuild="codebuild",e.codecommit="codecommit",e.codedeploy="codedeploy",e.codepipeline="codepipeline",e.codestar="codestar",e.codeartifact="codeartifact",e.settings="settings",e}({});const s={[r.codebuild]:1,[r.codecommit]:1,[r.codedeploy]:1,[r.codepipeline]:1,[r.codestar]:1,[r.codeartifact]:1},c=e=>1===(()=>{try{const e=(0,n.T)("subconsoles","value");if(null!=e)return{...s,...JSON.parse(e)}}catch(e){}return s})()[e],l={[r.codecommit]:a.H.CodeCommitConsole,[r.codedeploy]:a.H.CodeDeployConsole,[r.codepipeline]:a.H.CodePipelineConsole,[r.codestar]:a.H.CodeStarConsole,[r.codeartifact]:a.H.CodeArtifactConsole},d=e=>e===r.none||e===r.settings||e===r.codebuild||(()=>{try{const e=(0,n.T)("sub_console_nav_override","value");return"string"==typeof e&&"prod"!==e}catch(e){}return!1})()||(e=>(0,i.G7)(l[e]))(e)&&c(e)},89221:(e,t,o)=>{"use strict";o.d(t,{H:()=>i});let i=function(e){return e.Debug="feature-codebuild-debug",e.HideFeedbackLinkOnNav="feature-codebuild-hide-feedback-link-on-nav",e.NotInRegionUpdated="feature-codebuild-not-in-region-updated",e.ChinaRebrandStringReplace="feature-codebuild-china-rebrand-string-replace",e.RegionMismatchError="feature-codebuild-region-mismatch-error",e.TextEditorV3="feature-codebuild-text-editor-v3",e.MemoryLogger="feature-memory-logger",e.CodeBuildGammaEndpoint="feature-codebuild-gamma-endpoint",e.CodeBuildBetaEndpoint="feature-codebuild-beta-endpoint",e.CodeBuildAccessTokensOAuth="feature-codebuild-access-tokens-oauth",e.CodeBuildSourceCredentialDisconnectionModal="feature-codebuild-source-credential-disconnection-modal",e.CodeBuildWebhookFilterGroupsMergePr="feature-codebuild-webhook-filter-groups-merge-pr",e.CodeBuildCrossAccountECR="feature-codebuild-cross-account-ecr",e.CodeBuildGitHubConnectOAuth="feature-codebuild-github-connect-oauth",e.CodeBuildBitbucketConnectOAuth="feature-codebuild-bitbucket-connect-oauth",e.CodeBuildBitbucketConnectOAuth_New="feature-codebuild-bitbucket-connect-oauth-new",e.CodeBuildS3Logs="feature-codebuild-s3-logs",e.CodeBuildS3LogsEncryption="feature-codebuild-s3-logs-encryption",e.CodeBuildPrivateRegistry="feature-codebuild-private-registry",e.CodeBuildSignerBatchGetBuilds="feature-codebuild-signer-batch-get-builds",e.CodeBuildLocalCache="feature-codebuild-local-cache",e.CodeBuildGitSubmodulesConfig="feature-codebuild-git-submodules-config",e.CodeBuildBuildspecRuntimeSwitcher="feature-codebuild-build-spec-runtime-switcher",e.CodeBuildManagedImageAlert="feature-codebuild-managed-image-alert",e.CodeBuildTestReporting="feature-codebuild-test-reporting",e.CodeBuildTestReportingBeta="feature-codebuild-test-reporting-beta",e.CodeBuildTestReportingTags="feature-codebuild-test-reporting-tags",e.CodeBuildShareCreateCallToAction="feature-codebuild-share-create-call-to-action",e.HideCodeBuildOptOut="feature-codebuild-hide-codebuild-opt-out",e.QueuedTTL="feature-codebuild-queued-ttl",e.CodeBuildSourceVersion="feature-codebuild-source-version",e.CodeBuildSecretsManager="feature-codebuild-secrets-manager",e.CodeBuildProjectBuildNumber="feature-codebuild-project-build-number",e.CodeBuildExportedEnvironmentVariable="feature-codebuild-exported-environment-variable",e.CodeBuildLinuxGpuImage="feature-codebuild-linux-gpu-image",e.CodeBuildLinuxGpuSmallCompute="feature-codebuild-linux-gpu-small-compute",e.CodeBuildArmImage="feature-codebuild-arm-image",e.CodeBuildXLargeImage="feature-codebuild-xlarge-image",e.CodeBuildFileSystems="feature-codebuild-file-systems",e.CodeBuildClearCache="feature-codebuild-clear-cache",e.CodeBuildShowBuildsOnListProjects="feature-codebuild-show-builds-on-list-projects",e.CodeBuildWebhookFilterFilePathAndCommitMessage="feature-codebuild-webhook-filter-file-path-and-commit-message",e.CodeBuildShareProject="feature-codebuild-share-project",e.CodeBuildShareReportGroup="feature-codebuild-share-report-group",e.CodeBuildSessionManager="feature-codebuild-session-manager",e.CodeBuildUtilizationMetrics="feature-codebuild-utilization-metrics",e.CodeBuildUtilizationMetricsUpdate="feature-codebuild-utilization-metrics-update",e.CodeBuildConfigurableBuildStatus="feature-codebuild-configurable-build-status",e.CodeBuildWindows2019="feature-codebuild-windows-2019",e.CodeBuildWindows2022="feature-codebuild-windows-2022",e.CodeBuildBatchBuilds="feature-codebuild-batch-builds",e.CodeBuildCodeCoverage="feature-codebuild-code-coverage",e.CodeBuildProvisionedModel="feature-codebuild-provisioned-model",e.CodeBuildProvisionedModelVpc="feature-codebuild-provisioned-model-vpc",e.CodeBuildProvisionedModelWindowsVpc="feature-codebuild-provisioned-model-windows-vpc",e.CodeBuildConcurrentBuildLimit="feature-codebuild-concurrent-build-limit",e.CodeBuildPublicBuild="feature-codebuild-public-build",e.CodeBuildCodeArtifact="feature-codebuild-code-artifact",e.CodeBuildOneClickStartBuild="feature-codebuild-one-click-start-build",e.CodeBuildRetryBatchDropDown="feature-codebuild-retry-batch-dropdown",e.CodeBuildHideBuildTypeConfiguration="feature-codebuild-hide-build-type-configuration",e.CodeBuildS3UploadWithBucketOwner="feature-codebuild-s3-upload-with-bucket-owner",e.CodeBuildSessionManagerBatchBuildWindows="feature-codebuild-session-manager-batch-build-windows",e.CodeBuildDisplaySourceConnection="feature-codebuild-display-source-connection",e.CodeBuildSmallArmImage="feature-codebuild-small-arm-image",e.CodeBuildReportIndividualBuildsInBatch="feature-codebuild-report-individual-builds-in-batch",e.CodeBuildPipelineSourceLink="feature-codebuild-pipeline-source-link",e.CodeBuildAdvanceStartBuildReportIndBuilds="feature-codebuild-advance-start-build-report-ind-builds",e.CodeBuildECRPolicyUpdate="feature-codebuild-ecr-policy-update",e.CodeBuildLambda="feature-codebuild-lambda",e.CodeBuildWebhookFilterUpdate="feature-codebuild-webhook-filter-display-fix",e.CodeBuildXLargeInstance="feature-codebuild-xlarge-instance",e.CodeBuildBuildArtifactS3DeepLink="feature-codebuild-artifact-s3-deeplink",e.CodeBuildPrivilegeDiscoverability="feature-codebuild-privilege-discoverability",e.CodeBuildCodeConnectionsIntegrationFeature="feature-codebuild-codeconnections-integration",e.CodeBuildWebhookFilterGroupsClosePr="feature-codebuild-webhook-filter-groups-close-pr",e.CodeBuildWebhookFilterGroupsWorkflowName="feature-codebuild-webhook-filter-groups-workflow-name",e.CodeBuildRCTrafficDirect="feature-codebuild-rc-traffic-direct",e.CodeBuildLambdaComputeCustomImage="feature-codebuild-lambda-compute-custom-image",e.CodeBuildWebhookFilterGroupsRelease="feature-codebuild-webhook-filter-groups-release",e.CodeBuildBitBucketPersonalToken="feature-codebuild-bitbucket-personal-token",e.CodeBuildReportAutoDiscover="feature-codebuild-report-auto-discover",e.CodeBuildWindowsVpc="feature-codebuild-windows-vpc",e.CodeBuildMacBuilds="feature-codebuild-mac-builds",e.CodeBuildProlongedBuild="feature-codebuild-prolonged-build",e.CodeBuildManualCreationWebhook="feature-codebuild-manual-creation-webhook",e.CodeBuildSecretsManagerSourceAuth="feature-codebuild-secrets-manager-source-auth",e.CodeBuildTagProject="feature-codebuild-project-tag-filter",e.CodeBuildCloudEditor="feature-codebuild-cloud-editor",e.CodeBuildCustomEntrypoint="feature-codebuild-custom-entrypoint",e.CodeBuildOrganizationNameWebhookFilter="feature-codebuild-organization-name-webhook-filter",e.CodeBuildArmExpansion="feature-codebuild-arm-expansion",e.CodeBuildFinalBuildStatusFiltering="feature-codebuild-final-build-status-filtering",e.CodeCommitGammaEndpointIAD="8529be",e.CodeCommitDiffDedupRows="32x7p3",e.CodeCommitTriggers="1bkhlw",e.CodeCommitUnhighlightedLargeDiffs="2d0a3a",e.EditPR="a0b7a2",e.CodeCommitTagging="f5955e",e.CodeCommitInternalImages="a2754",e.CodeCommitBatchGetCommits="8e27b2",e.CodeCommitGuruIntegration="259904",e.CodeCommitGuruBotName="d37f23",e.CodeCommitCodeGuruOldClient="lg25Fo",e.CodeCommitGuruWithPython="409952",e.CodeCommitGitRemoteHttps="714a2c",e.CodeCommitCodeSuiteDifferences="gwTg5A",e.CodeCommitCodeSuiteDifferencesShadowMode="kFzJtT",e.CodeCommitPullRequestApproval="594946",e.CodeCommitApprovalRuleTemplates="dc62cd",e.CodeCommitLineLinks="1n349x",e.CodeCommitBrowseRepositoryMk2Frame="831b6a",e.CodeCommitReactionIntegration="zjh321",e.CodeCommitPullRequestGuruReviewStatus="jfs876",e.CodeCommitPaginatedGetReaction="mnb736",e.CodeCommitReactionModalFix="jfh856",e.CodeCommitDefaultBranchNameChange="819f33",e.CodeCommitGovCloudDocEndpointFix="ksh830",e.CodeDeployAutoUpdateOutdatedInstances="B0771E",e.CodeDeployGammaEndpoint="Q29kZU",e.CodeDeployGithubOAuth="8o0b5",e.CodeDeployNewGithubOauth="def123",e.CodeDeployECSIntegration="608680",e.CodeDeployECSCustomConfigs="43898d",e.CodeDeployLambdaIntegration="43425v",e.CodeDeployAdaptiveDeployments="eaa0ae",e.CodeDeploySettingShellTabs="f8j3f8",e.CodeDeployTagging="js87gh",e.CodeDeploySSMConfig="ca3644",e.CodeDeployASGInstanceTerminationHook="1d9d95",e.CodeDeployOnPrem="ab5cc4",e.CodeDeployComputePlatformUnspecificDescription="0140c7",e.CodeDeployTbConsole="feature-codedeploy-tb-console",e.CodePipelineGammaEndpoint="204903",e.CodePipelineAppConfig="55a005",e.CodePipelineSigner="8473fh",e.CodePipelineAppConfigSigner="bf635f",e.CodeStarBetaEndpoint="csBG90",e.CodeStarGammaEndpoint="EF5BF0",e.CodeStarSigner="f7e99d",e.EstimateCost="u4f8Se",e.CodeStarCloud9="c10nd6",e.CodeNotificationGammaEndpoint="850b74",e.Notifications="feature-codebuild-codenotifications-notifications",e.EmailNotifications="feature-codebuild-codenotifications-email-notifications",e.SlackChatbot="feature-codebuild-codenotifications-slack-chatbot",e.TeamsChatbot="feature-codebuild-codenotifications-teams-chatbot",e.CodeConnectionsGammaEndpoint="7aa887",e.CodeConnectionsBetaEndpoint="7b3cce",e.CodeStarConnectionsCommonLanding="ff46a8",e.GoshawkGammaEndpoint="ghahi0",e.HideHomePageVideo="feature-codebuild-homepage-video",e.ShowHomePageMoreResources="feature-codebuild-more-resources",e.ShowHomePageGettingStarted="feature-codebuild-getting-started",e.ShowHomePagePricing="feature-codebuild-pricing",e.CodeBuildConsoleTangerineBoxRollback="feature-codebuild-console-tangerinebox-rollback",e.CodeBuildConsoleTangerineBoxPinSession="feature-codebuild-console-tangerinebox-pin-session",e.CodePipelineConsole="feature-codepipeline-console",e.CodeStarConsole="feature-codestar-console",e.CodeCommitConsole="feature-codecommit-console",e.CodeDeployConsole="feature-codedeploy-console",e.CodeArtifactConsole="feature-codeartifact-console",e.CodeStarConnectionsManagementConsole="feature-codestar-connections-management-console",e}({})},2682:(e,t,o)=>{"use strict";o.d(t,{A:()=>n});var i=o(7474);const a=Symbol("disabled"),n={filter:e=>e.filter((e=>e!==a)),whenEnabled:(e,t)=>(0,i.G7)(e)?t:a,whenDisabled:(e,t)=>(0,i.G7)(e)?a:t,when:(e,t)=>e()?t:a}},84760:(e,t,o)=>{"use strict";o.d(t,{A:()=>d});var i=o(96540),a=o(2696),n=o(63411),r=o(17040),s=o(43558);const c=new Set;let l;const d=e=>{const t="string"==typeof e.header?e.header:"unknown_header";try{const o=(0,r.d4)(s.uq);o!==l&&(l=o,c.clear()),c.has(`${e.type}-${t}`)||(c.add(`${e.type}-${t}`),n.LS.blob("ALERT_SHOWN",{header:t,type:e.type}))}catch(e){}return i.createElement(a.A,e)}},9377:(e,t,o)=>{"use strict";o.d(t,{l:()=>a});var i=o(2543);const a=(e,t)=>(o,a)=>{const n="function"==typeof e?e(o):(0,i.get)(o,e),r="function"==typeof e?e(a):(0,i.get)(a,e);return n||r?n?r?t?r.getTime()-n.getTime():n.getTime()-r.getTime():-1:1:0}},65975:(e,t,o)=>{"use strict";o.d(t,{T:()=>n,k:()=>a});const i=function(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"content";const i=document.querySelector(`meta[${e}="${t}"]`);return i?i.getAttribute(o):null},a=function(e){return i("id",e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"content")},n=function(e){return i("name",e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"content")}},60826:(e,t,o)=>{"use strict";o.d(t,{A:()=>i});const i=(e,t)=>{if(!e)throw new Error(t);return!0}},63158:(e,t,o)=>{"use strict";o.d(t,{X:()=>n,j:()=>a});var i=o(2543);const a=e=>Object.keys(e).reduce(((t,o)=>{const i=e[o];return void 0!==i&&(t[o]=i),t}),{}),n=e=>Object.keys(e).reduce(((t,o)=>{let a=e[o];return(0,i.isPlainObject)(a)&&(a=n(a)),void 0!==a&&(t[o]=a),t}),{})},73896:(e,t,o)=>{"use strict";o.d(t,{I1:()=>s,K4:()=>a,PO:()=>n,Tr:()=>c,ti:()=>r});var i=o(25892);let a=function(e){return e.AWS="aws",e.AWS_CN="aws-cn",e.AWS_GOV="aws-us-gov",e}({});const n=()=>i.tb.getCustomContext("partition")||"aws",r=()=>i.tb.getCustomContext("awsRegionalDomain")||"amazonaws.com",s=()=>i.tb.getCustomContext("awsDomain")||"aws.amazon.com",c=()=>i.tb.getCustomContext("docsUrl")||"https://docs.aws.amazon.com"},74615:(e,t,o)=>{"use strict";o.d(t,{RG:()=>m,Ud:()=>p,dC:()=>u,kh:()=>d});var i=o(65975),a=o(63411),n=o(18562),r=o(25892);const s="AWSC_MEZZ_DATA_META_MISSING",c="SERVICE_REGIONS_META_MISSING",l=((0,i.k)("airportCode"),e=>(0,i.k)(e)),d=()=>{const e=r.tb.getCustomContext("region");if("string"==typeof e)return e;const t=l("regionOverride");return"string"==typeof t?t:"us-east-1"},u=()=>{const e=l("awsc-mezz-region"),t=new URLSearchParams(location.search.substring(1)).get("region");return!(!e||!t)&&e!==t},p=e=>{const t=document.querySelector('meta[name="service_regions"]');if(!t)return void a.LS.error(c);const o=t.getAttribute("value");if(o)try{return JSON.parse(o)[e]}catch(e){return void a.LS.error(c,e.message)}else a.LS.error(c)},m=e=>{const t={"us-east-1":(0,n.t)("common:regions.us_east_1"),"us-east-2":(0,n.t)("common:regions.us_east_2"),"us-west-1":(0,n.t)("common:regions.us_west_1"),"us-west-2":(0,n.t)("common:regions.us_west_2"),"ap-east-1":(0,n.t)("common:regions.ap_east_1"),"ap-south-1":(0,n.t)("common:regions.ap_south_1"),"ap-northeast-3":(0,n.t)("common:regions.ap_northeast_3"),"ap-northeast-2":(0,n.t)("common:regions.ap_northeast_2"),"ap-northeast-1":(0,n.t)("common:regions.ap_northeast_1"),"ap-southeast-1":(0,n.t)("common:regions.ap_southeast_1"),"ap-southeast-2":(0,n.t)("common:regions.ap_southeast_2"),"ca-central-1":(0,n.t)("common:regions.ca_central_1"),"eu-central-1":(0,n.t)("common:regions.eu_central_1"),"eu-north-1":(0,n.t)("common:regions.eu_north_1"),"eu-west-1":(0,n.t)("common:regions.eu_west_1"),"eu-west-2":(0,n.t)("common:regions.eu_west_2"),"eu-west-3":(0,n.t)("common:regions.eu_west_3"),"sa-east-1":(0,n.t)("common:regions.sa_east_1"),"us-gov-west-1":(0,n.t)("common:regions.us-gov-west-1"),"us-gov-east-1":(0,n.t)("common:regions.us-gov-east-1")}[e],o=(0,i.T)("awsc-mezz-data");if(!o)return a.LS.error(s),t;try{const i=JSON.parse(o).regions.find((t=>t.id===e));return i&&i.name&&i.location?`${i.name} (${i.location})`:t}catch(e){return a.LS.error(s,e.message),t}}},82264:(e,t,o)=>{"use strict";o.d(t,{Z:()=>n,v:()=>a});var i=o(2543);const a=(e,t)=>t.reduce(((t,o)=>{const a=(0,i.get)(o,e);return a&&(t[a]=o),t}),{}),n=e=>Object.values(e)},25163:(e,t,o)=>{"use strict";o.d(t,{y:()=>i});const i=e=>e.location.payload||{}},88576:(e,t,o)=>{"use strict";o.d(t,{A:()=>a});var i=o(96540);const a=e=>null==e||""===e?i.createElement("span",{className:"dx-PolarisMissingNode"}):"string"==typeof e||"number"==typeof e?e:i.createElement("span",{className:"dx-PolarisMissingNode"},e)},25892:(e,t,o)=>{"use strict";o.d(t,{FJ:()=>d,Ib:()=>r,Kh:()=>l,Kj:()=>p,Ty:()=>c,Vv:()=>m,ZT:()=>s,nz:()=>u,t$:()=>h,tb:()=>n});var i=o(38424),a=o(89207);const n=new i.TangerineBox;function r(){return(0,a.parseTangerineBoxMetaTag)().csrfToken}const s=n.getCredentials(),c=n.getCustomContext("iamAdminRegion"),l=n.getCustomContext("iamadminEndpoint"),d=n.getCustomContext("chatbotEndpoint"),u=n.getCustomContext("betaEndPoint"),p=n.getCustomContext("gammaEndpoint"),m=n.getCustomContext("gammaGitHubClientId"),h=n.getCustomContext("gammaBitbucketClientId")},46560:(e,t,o)=>{"use strict";o.d(t,{$H:()=>u,CZ:()=>l,Ij:()=>n,MA:()=>c,OY:()=>r,Tm:()=>a,iW:()=>s,rC:()=>i,y7:()=>d}),(0,o(18562).t)("common:time.now");const i=24,a=60,n=1e6,r=1e3,s=60*r,c=60*s,l=24*c,d=30*l,u=365*l},19971:(e,t,o)=>{"use strict";o.d(t,{LV:()=>r,fD:()=>s});var i=o(60826),a=o(46560);const n=(0,o(18562).t)("common:convertTime.error"),r=e=>{let{days:t=0,hours:o=0,minutes:r=0}=e;const s=parseInt(t,10),c=parseInt(o,10),l=parseInt(r,10);return(0,i.A)(!Number.isNaN(s)&&!Number.isNaN(c)&&!Number.isNaN(l),n),s*a.rC*a.Tm+c*a.Tm+l},s=e=>{const t=parseInt(e,10);return(0,i.A)(!Number.isNaN(t),n),{hours:Math.floor(t/a.Tm),minutes:Math.floor(t%a.Tm)}}},17667:(e,t,o)=>{"use strict";o.d(t,{$:()=>n,w:()=>a});var i=o(74615);const a=e=>{const t=e.indexOf("/v1/repos/");if(!(t<0))return e.slice(t+10)},n=e=>`codecommit::${(0,i.kh)()}://${e}`},10978:(e,t,o)=>{"use strict";o.d(t,{M:()=>r,P:()=>n});var i=o(89501),a=o(35755);const n=e=>{let t,o;try{t=i.s.fromString(e),o=t.relativeId}catch(t){if(!t.message.includes("ARN should be prefixed"))throw t;o=e}return o},r=(e,t)=>{let o;try{o=n(e),o.endsWith("/")||(o=`${o}/`)}catch{return""}return(0,a.yK)(`/s3/buckets/${o}${t?`?${t}`:""}`)}},70289:(e,t,o)=>{"use strict";o.d(t,{L:()=>n});var i=o(10978),a=o(35755);const n=(e,t)=>{let o;try{o=(0,i.P)(e)}catch{return""}return(0,a.yK)(`/s3/object/${o}${t?`?${t}`:""}`)}},35755:(e,t,o)=>{"use strict";o.d(t,{y0:()=>c,yK:()=>l});var i=o(86663),a=o(7474),n=o(74615),r=o(89221);let s=function(e){return e.NONE="none",e.ZIP="zip",e}({});const c=(e,t,o)=>{const i=e.relativeId,c=e.region||(0,n.kh)(),l=i.indexOf("/")>-1,d=l?e.resourceType:i,u=e.resource;return o?`/s3/object/${d}?region=${c}&prefix=${u}`:(0,a.G7)(r.H.CodeBuildBuildArtifactS3DeepLink)&&t&&l?t===s.ZIP?`/s3/object/${d}/?region=${c}&prefix=${u}`:`/s3/buckets/${d}/?region=${c}&prefix=${u}/`:`/s3/buckets/${d}/?region=${c}`},l=e=>{const{url:t,query:o}=i.parseUrl(e);return o.region||(o.region=(0,n.kh)()),`${t}?${i.stringify(o)}`}},91501:(e,t,o)=>{"use strict";o.d(t,{TY:()=>r,We:()=>c,k$:()=>s});var i=o(3117);let a,n;const r=async()=>{const e=i.MetaDataProvider.getInstance();a=await e.getSessionARN(),n=await e.getAccountId()},s=()=>{if(!a)throw new Error("Cannot determine logged-in user ARN");return a},c=()=>{if(!n)throw new Error("Cannot determine logged-in user account ID");return n}},25896:(e,t,o)=>{"use strict";o.d(t,{$U:()=>r,Bf:()=>l,Bo:()=>u,LY:()=>a,dB:()=>p,k3:()=>n,oz:()=>s,rM:()=>c});const i=new RegExp(/\S+@\S+\.\S{2,}/),a=e=>t=>{if(t)return e||void 0},n=function(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];return e=>!t.every((t=>!t(e)))},r=e=>null==e||0===e.length||e.trim&&0===e.trim().length,s=e=>t=>Boolean(t&&t.length>e),c=(e,t)=>o=>!(o>=e&&o<=t),l=(c(1,99),e=>Boolean(e&&!i.test(e))),d=function(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];return e=>o=>n(...t)(e(o))},u=d(r),p=e=>d(r,s(e))},63411:(e,t,o)=>{"use strict";o.d(t,{LS:()=>d});var i=o(12337),a=o(52529),n=o(13104),r=o(79450),s=o(25892);const c="Unknown",l="REPORT",d=new class{constructor(e){this.eventTracker=e,this.pageViewTime=Date.now()}updateRoutes(e,t){this.basename=e,this.routesMap=t}getCurrentMetricRoute(){return this.routesMap&&this.basename?(0,n.Y)((0,i.$j)(window.location.pathname.substring(this.basename.length),this.routesMap).type):c}updatePageViewTime(){this.pageViewTime=Date.now()}decoratedEvent(e){return{eventType:"CLIENT_EVENT_LOGGER",...e,route:this.getCurrentMetricRoute(),timeOnPage:Date.now()-this.pageViewTime}}addEvent(e){this.eventTracker.addEvent(this.decoratedEvent(e))}logReport(e,t){this.addEvent({eventName:l,eventData:{report:e,data:t}}),(e.error>0||e.fault>0)&&this.error(`${l}_${e.type}`)}log(e,t){this.addEvent({eventName:e,eventData:{message:t}})}blob(e,t){this.addEvent({eventName:e,eventData:t})}error(e,t){const o={};t&&(o.message=t),this.errorWithData(e,o)}errorWithData(e,t){this.eventTracker.addError(this.decoratedEvent({eventName:e,eventData:t}))}report=e=>{let{type:t,subtype:o}=e;return{error:e=>{try{if("object"==typeof e&&null!==e&&e.message){const i="string"==typeof e.code?e.code:"string"==typeof e.message?e.message:c,{stack:n}=e,s=e.requestId,l=e.statusCode,d=e instanceof a.i&&e.isFault,u=e instanceof r.P?{apiService:e.service,apiOperation:e.operation,apiRegion:e.region}:{};this.logReport({type:t,subtype:o,fault:d?1:0,error:d?0:1,success:0},{message:i,...u,stack:n||c,requestId:s,statusCode:l})}else this.logReport({type:t,subtype:o,fault:0,error:1,success:0},{message:c,stack:c})}catch(e){this.error("ERROR_FALLBACK","object"==typeof e&&null!==e&&"string"==typeof e?e:c)}},success:()=>{this.logReport({type:t,subtype:o,fault:0,error:0,success:1},{})}}}}(s.tb.getEventTracker())},66480:(e,t,o)=>{"use strict";o.d(t,{ED:()=>s,a$:()=>n,al:()=>l});var i=o(2543),a=o(12337);let n=function(e){return e.CODESTAR_HOME="ROUTE_CODESTAR_HOME",e.CODESTAR_PROJECTS="ROUTE_CODESTAR_PROJECTS",e.CODESTAR_PROJECT="ROUTE_CODESTAR_PROJECT",e.CODESTAR_PROJECT_EXTENSIONS="ROUTE_CODESTAR_PROJECT_EXTENSIONS",e.CODESTAR_PROJECT_TEAM_MEMBERS="ROUTE_CODESTAR_PROJECT_TEAM_MEMBERS",e.CODESTAR_PROJECT_TEAM_MEMBERS_ADD="ROUTE_CODESTAR_PROJECT_TEAM_MEMBERS_ADD",e.CODESTAR_PROJECT_TEAM_MEMBERS_EDIT="ROUTE_CODESTAR_PROJECT_TEAM_MEMBERS_EDIT",e.CODESTAR_PROJECT_REPOSITORY="ROUTE_CODESTAR_PROJECT_REPOSITORY",e.CODESTAR_PROJECT_PIPELINE="ROUTE_CODESTAR_PROJECT_PIPELINE",e.CODESTAR_PROJECT_MONITORING="ROUTE_CODESTAR_PROJECT_MONITORING",e.CODESTAR_PROJECT_ISSUES="ROUTE_CODESTAR_PROJECT_ISSUES",e.CODESTAR_PROJECT_SETTINGS="ROUTE_CODESTAR_PROJECT_SETTINGS",e.CODESTAR_PROJECT_TAGS_EDIT="ROUTE_CODESTAR_PROJECT_TAGS_EDIT",e.CODESTAR_PROJECT_ENVIRONMENTS="ROUTE_CODESTAR_PROJECT_ENVIRONMENTS",e.CODESTAR_PROJECT_ENVIRONMENT_CREATE="ROUTE_CODESTAR_PROJECT_ENVIRONMENT_CREATE",e.CODESTAR_PROJECT_CREATE="ROUTE_CODESTAR_PROJECT_CREATE",e.CODESTAR_PROJECT_CREATE_GITHUB_POPUP="ROUTE_CODESTAR_PROJECT_CREATE_GITHUB_POPUP",e.CODESTAR_PROJECT_CREATE_AMAZON_DEVELOPER_POPUP="ROUTE_CODESTAR_PROJECT_CREATE_AMAZON_DEVELOPER_POPUP",e.CODESTAR_PROJECT_GITHUB_POPUP="ROUTE_CODESTAR_PROJECT_GITHUB_POPUP",e.CODESTAR_PROJECT_JIRA_POPUP="ROUTE_CODESTAR_PROJECT_JIRA_POPUP",e.CODESTAR_PROJECT_CONNECT_JIRA="ROUTE_CODESTAR_PROJECT_CONNECT_JIRA",e.CODESTAR_COMMAND_LINE_INSTRUCTIONS="ROUTE.CODESTAR_COMMAND_LINE_INSTRUCTIONS",e.CODESTAR_ECLIPSE_INSTRUCTIONS="ROUTE.CODESTAR_ECLIPSE_INSTRUCTIONS",e.CODESTAR_VISUALSTUDIO_INSTRUCTIONS="ROUTE.CODESTAR_VISUALSTUDIO_INSTRUCTIONS",e.CODESTAR_GITHUB_INSTRUCTIONS="ROUTE.CODESTAR_GITHUB_INSTRUCTIONS",e.CODEBUILD_HOME="ROUTE_CODEBUILD_HOME",e.CODEBUILD_START="ROUTE_CODEBUILD_START",e.CODEBUILD_METRICS="ROUTE_CODEBUILD_METRICS",e.CODEBUILD_BUILD="ROUTE_CODEBUILD_BUILD",e.CODEBUILD_BUILD_HISTORY="ROUTE_CODEBUILD_BUILD_HISTORY",e.CODEBUILD_BUILD_START="ROUTE_CODEBUILD_BUILD_START",e.CODEBUILD_BUILD_START_DEFAULT="ROUTE_CODEBUILD_BUILD_START_DEFAULT",e.CODEBUILD_BUILD_START_ADVANCED="CODEBUILD_BUILD_START_ADVANCED",e.CODEBUILD_BATCH_BUILD="ROUTE_CODEBUILD_BATCH_BUILD",e.CODEBUILD_CONNECT_TO_DEBUG_MODE="ROUTE_CODEBUILD_CONNECT_TO_DEBUG_MODE",e.CODEBUILD_PROJECTS="ROUTE_CODEBUILD_PROJECTS",e.CODEBUILD_PROJECT_TAGS="CODEBUILD_PROJECT_TAGS",e.CODEBUILD_PROJECT_EDIT_TAGS="CODEBUILD_PROJECT_EDIT_TAGS",e.CODEBUILD_PROJECT="ROUTE_CODEBUILD_PROJECT",e.CODEBUILD_PROJECT_CREATE="ROUTE_CODEBUILD_PROJECT_CREATE",e.CODEBUILD_PROJECT_CLONE="ROUTE_CODEBUILD_PROJECT_CLONE",e.CODEBUILD_PROJECT_EDIT="ROUTE_CODEBUILD_PROJECT_EDIT",e.CODEBUILD_PROJECT_EDIT_ALL="ROUTE_CODEBUILD_PROJECT_EDIT_ALL",e.CODEBUILD_PROJECT_TRIGGERS_CREATE="ROUTE_CODEBUILD_PROJECT_TRIGGERS_CREATE",e.CODEBUILD_PROJECT_TRIGGERS_EDIT="ROUTE_CODEBUILD_PROJECT_TRIGGERS_EDIT",e.CODEBUILD_OAUTH_INTEGRATION="ROUTE_CODEBUILD_OAUTH_INTEGRATE",e.CODEBUILD_PROJECT_NOTIFICATIONS="CODEBUILD_PROJECT_NOTIFICATIONS",e.CODEBUILD_PROJECT_CREATE_NOTIFICATION_RULE="CODEBUILD_PROJECT_CREATE_NOTIFICATIONS",e.CODEBUILD_PROJECT_EDIT_NOTIFICATION_RULE="CODEBUILD_PROJECT_EDIT_NOTIFICATIONS",e.CODEBUILD_PROJECT_VIEW_NOTIFICATION_RULE="CODEBUILD_PROJECT_VIEW_NOTIFICATION",e.CODEBUILD_TEST_REPORT_GROUP_SETTINGS="CODEBUILD_TEST_REPORT_GROUP_SETTINGS",e.CODEBUILD_TEST_REPORT_GROUP_EDIT_TAGS="CODEBUILD_TEST_REPORT_GROUP_EDIT_TAGS",e.CODEBUILD_LIST_TEST_REPORT_GROUPS="CODEBUILD_LIST_TEST_REPORT_GROUPS",e.CODEBUILD_VIEW_TEST_REPORT_GROUP="CODEBUILD_VIEW_TEST_REPORT_GROUP",e.CODEBUILD_REPORT_GROUP_CREATE="CODEBUILD_REPORT_GROUP_CREATE",e.CODEBUILD_REPORT_GROUP_EDIT="CODEBUILD_REPORT_GROUP_EDIT",e.CODEBUILD_LIST_TEST_REPORTS="CODEBUILD_LIST_TEST_REPORTS",e.CODEBUILD_VIEW_TEST_REPORT="CODEBUILD_VIEW_TEST_REPORT",e.CODEBUILD_FLEET_CREATE="CODEBUILD_FLEET_CREATE",e.CODEBUILD_EDIT_FLEET="CODEBUILD_EDIT_FLEET",e.CODEBUILD_VIEW_FLEET="CODEBUILD_VIEW_FLEET",e.CODEBUILD_LIST_FLEETS="CODEBUILD_LIST_FLEETS",e.CODEBUILD_SOURCE_CONNECTIONS="CODEBUILD_SOURCE_CONNECTIONS",e.CODECOMMIT_HOME="ROUTE_CODECOMMIT_HOME",e.CODECOMMIT_START="ROUTE_CODECOMMIT_START",e.CODECOMMIT_REPOSITORIES="ROUTE_CODECOMMIT_REPOSITORIES",e.CODECOMMIT_REPOSITORY_CREATE="ROUTE_CODECOMMIT_REPOSITORY_CREATE",e.CODECOMMIT_REPOSITORY_LIST_TAGS="ROUTE_CODECOMMIT_REPOSITORY_LIST_TAGS",e.CODECOMMIT_REPOSITORY_LIST_BRANCHES="ROUTE_CODECOMMIT_REPOSITORY_LIST_BRANCHES",e.CODECOMMIT_REPOSITORY_LIST_PULL_REQUESTS="ROUTE_CODECOMMIT_REPOSITORY_LIST_PULL_REQUESTS",e.CODECOMMIT_REPOSITORY_LIST_COMMITS="ROUTE_CODECOMMIT_REPOSITORY_LIST_COMMITS",e.CODECOMMIT_REPOSITORY_GURU_ASSOCIATIONS="ROUTE_CODECOMMIT_REPOSITORY_GURU_ASSOCIATIONS",e.CODECOMMIT_REPOSITORY_GRAPH_COMMITS="ROUTE_CODECOMMIT_REPOSITORY_GRAPH_COMMITS",e.CODECOMMIT_REPOSITORY_BROWSE_PATH="ROUTE_CODECOMMIT_REPOSITORY_BROWSE_PATH",e.CODECOMMIT_REPOSITORY_BROWSE="ROUTE_CODECOMMIT_REPOSITORY_BROWSE",e.CODECOMMIT_REPOSITORY_PUT_FILE_PATH="ROUTE_CODECOMMIT_REPOSITORY_PUT_FILE_PATH",e.CODECOMMIT_REPOSITORY_PUT_FILE="ROUTE_CODECOMMIT_REPOSITORY_PUT_FILE",e.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES="ROUTE_CODECOMMIT_REPOSITORY_COMPARE_REFERENCES",e.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES_SET="ROUTE_CODECOMMIT_REPOSITORY_COMPARE_REFERENCES_SET",e.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST="ROUTE_CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST",e.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST_SET="ROUTE_CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST_SET",e.CODECOMMIT_REPOSITORY_EDIT_PULL_REQUEST="ROUTE_CODECOMMIT_REPOSITORY_EDIT_PULL_REQUEST",e.CODECOMMIT_REPOSITORY_MERGE_PULL_REQUEST="ROUTE_CODECOMMIT_REPOSITORY_MERGE_PULL_REQUEST",e.CODECOMMIT_REPOSITORY_RESOLVE_PULL_REQUEST="ROUTE_CODECOMMIT_REPOSITORY_RESOLVE_PULL_REQUEST",e.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST="ROUTE_CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST",e.CODECOMMIT_REPOSITORY_VIEW_COMMIT="ROUTE_CODECOMMIT_REPOSITORY_VIEW_COMMIT",e.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST_COMMIT="ROUTE_CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST_COMMIT",e.CODECOMMIT_CREATE_PULL_REQUEST_APPROVAL_RULE="ROUTE_CODECOMMIT_CREATE_PULL_REQUEST_APPROVAL_RULE",e.CODECOMMIT_EDIT_PULL_REQUEST_APPROVAL_RULE="ROUTE_CODECOMMIT_EDIT_PULL_REQUEST_APPROVAL_RULE",e.CODECOMMIT_REPOSITORY_SETUP_PUT_FILE="ROUTE_CODECOMMIT_REPOSITORY_SETUP_PUT_FILE",e.CODECOMMIT_REPOSITORY_SETUP="ROUTE_CODECOMMIT_REPOSITORY_SETUP",e.CODECOMMIT_REPOSITORY_SETTINGS="ROUTE_CODECOMMIT_REPOSITORY_SETTINGS",e.CODECOMMIT_REPOSITORY_TAGS="ROUTE_CODECOMMIT_REPOSITORY_TAGS",e.CODECOMMIT_REPOSITORY_TAGS_EDIT="ROUTE_CODECOMMIT_REPOSITORY_TAGS_EDIT",e.CODECOMMIT_REPOSITORY_TRIGGERS="ROUTE_CODECOMMIT_REPOSITORY_TRIGGERS",e.CODECOMMIT_REPOSITORY_TRIGGERS_CREATE="ROUTE_CODECOMMIT_REPOSITORY_TRIGGERS_CREATE",e.CODECOMMIT_REPOSITORY_TRIGGERS_EDIT="ROUTE_CODECOMMIT_REPOSITORY_TRIGGERS_EDIT",e.CODECOMMIT_REPOSITORY_NOTIFICATIONS="ROUTE_CODECOMMIT_REPOSITORY_NOTIFICATIONS",e.CODECOMMIT_REPOSITORY_NOTIFICATIONS_EDIT="ROUTE_CODECOMMIT_REPOSITORY_NOTIFICATIONS_EDIT",e.CODECOMMIT_CONNECT="ROUTE_CODECOMMIT_CONNECT",e.CODECOMMIT_REPOSITORY_CREATE_NOTIFICATION_RULE="CODECOMMIT_REPOSITORY_CREATE_NOTIFICATION_RULE",e.CODECOMMIT_REPOSITORY_EDIT_NOTIFICATION_RULE="CODECOMMIT_REPOSITORY_EDIT_NOTIFICATION_RULE",e.CODECOMMIT_REPOSITORY_VIEW_NOTIFICATION_RULE="CODECOMMIT_REPOSITORY_VIEW_NOTIFICATION_RULE",e.CODECOMMIT_APPROVAL_RULE_TEMPLATES="CODECOMMIT_APPROVAL_RULE_TEMPLATES",e.CODECOMMIT_CREATE_APPROVAL_RULE_TEMPLATE="CODECOMMIT_CREATE_APPROVAL_RULE_TEMPLATE",e.CODECOMMIT_EDIT_APPROVAL_RULE_TEMPLATE="CODECOMMIT_EDIT_APPROVAL_RULE_TEMPLATE",e.CODEPIPELINE_HOME="ROUTE_CODEPIPELINE_HOME",e.CODEPIPELINE_START="ROUTE_CODEPIPELINE_START",e.CODEPIPELINE_OAUTH_POPUP="ROUTE_CODEPIPELINE_OAUTH_POPUP",e.CODEPIPELINE_PIPELINE_CREATE="ROUTE_CODEPIPELINE_PIPELINE_CREATE",e.CODEPIPELINE_PIPELINES="ROUTE_CODEPIPELINE_PIPELINES",e.CODEPIPELINE_PIPELINE="ROUTE_CODEPIPELINE_PIPELINE",e.CODEPIPELINE_PIPELINE_EDIT="ROUTE_CODEPIPELINE_PIPELINE_EDIT",e.CODEPIPELINE_PIPELINE_HISTORY="ROUTE_CODEPIPELINE_PIPELINE_HISTORY",e.CODEPIPELINE_PIPELINE_EXECUTIONS="ROUTE_CODEPIPELINE_PIPELINE_EXECUTIONS",e.CODEPIPELINE_PIPELINE_EXECUTION="ROUTE_CODEPIPELINE_PIPELINE_EXECUTION",e.CODEPIPELINE_PIPELINE_ACTION_EXECUTION="ROUTE_CODEPIPELINE_PIPELINE_ACTION_EXECUTION",e.CODEPIPELINE_PIPELINE_SETTINGS="CODEPIPELINE_PIPELINE_SETTINGS",e.CODEPIPELINE_PIPELINE_VIEW_GENERAL_SETTINGS="CODEPIPELINE_PIPELINE_VIEW_GENERAL_SETTINGS",e.CODEPIPELINE_PIPELINE_EDIT_TAGS="CODEPIPELINE_PIPELINE_EDIT_TAGS",e.CODEPIPELINE_PIPELINE_LIST_TAGS="CODEPIPELINE_PIPELINE_LIST_TAGS",e.CODEPIPELINE_PIPELINE_CREATE_NOTIFICATION_RULE="CODEPIPELINE_PIPELINE_CREATE_NOTIFICATIONS",e.CODEPIPELINE_PIPELINE_LIST_NOTIFICATION_RULES="CODEPIPELINE_PIPELINE_LIST_NOTIFICATIONS",e.CODEPIPELINE_PIPELINE_EDIT_NOTIFICATION_RULE="CODEPIPELINE_PIPELINE_EDIT_NOTIFICATIONS",e.CODEPIPELINE_PIPELINE_VIEW_NOTIFICATION_RULE="CODEPIPELINE_PIPELINE_VIEW_NOTIFICATION",e.CODEDEPLOY_APPLICATION="ROUTE_CODEDEPLOY_APPLICATION",e.CODEDEPLOY_APPLICATION_SETTINGS="ROUTE_CODEDEPLOY_APPLICATION_SETTINGS",e.CODEDEPLOY_APPLICATION_CREATE="ROUTE_CODEDEPLOY_APPLICATION_CREATE",e.CODEDEPLOY_APPLICATIONS="ROUTE_CODEDEPLOY_APPLICATIONS",e.CODEDEPLOY_DEPLOYMENT_GROUP_CREATE="ROUTE_CODEDEPLOY_DEPLOYMENT_GROUP_CREATE",e.CODEDEPLOY_DEPLOYMENT_GROUP_EDIT="ROUTE_CODEDEPLOY_DEPLOYMENT_GROUP_EDIT",e.CODEDEPLOY_DEPLOYMENT_CREATE="ROUTE_CODEDEPLOY_DEPLOYMENT_CREATE",e.CODEDEPLOY_DEPLOYMENT="ROUTE_CODEDEPLOY_DEPLOYMENT",e.CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENT="CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENT",e.CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENTS="CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENTS",e.CODEDEPLOY_DEPLOYMENTS="ROUTE_CODEDEPLOY_DEPLOYMENTS",e.CODEDEPLOY_DEPLOYMENT_GROUP="ROUTE_CODEDEPLOY_DEPLOYMENT_GROUP",e.CODEDEPLOY_DEPLOYMENT_GROUP_TAGS_EDIT="ROUTE_CODEDEPLOY_DEPLOYMENT_GROUP_TAGS_EDIT",e.CODEDEPLOY_REVISION="ROUTE_CODEDEPLOY_REVISION",e.CODEDEPLOY_ON_PREM_INSTANCE="ROUTE_CODEDEPLOY_ON_PREM_INSTANCE",e.CODEDEPLOY_CREATE_ON_PREM_INSTANCE_TAGS="CODEDEPLOY_CREATE_ON_PREM_INSTANCE_TAGS",e.CODEDEPLOY_ON_PREM_INSTANCES="ROUTE_CODEDEPLOY_ON_PREM_INSTANCES",e.CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS="ROUTE_CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS",e.CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS_CREATE="ROUTE_CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS_CREATE",e.CODEDEPLOY_APPLICATION_TAGS="CODEDEPLOY_APPLICATION_TAGS",e.CODEDEPLOY_APPLICATION_TAGS_EDIT="CODEDEPLOY_APPLICATION_TAGS_EDIT",e.CODEDEPLOY_APPLICATION_NOTIFICATION_RULES="CODEDEPLOY_APPLICATION_NOTIFICATION_RULES",e.CODEDEPLOY_APPLICATION_CREATE_NOTIFICATION_RULE="CODEDEPLOY_APPLICATION_CREATE_NOTIFICATIONS",e.CODEDEPLOY_APPLICATION_EDIT_NOTIFICATION_RULE="CODEDEPLOY_APPLICATION_EDIT_NOTIFICATIONS",e.CODEDEPLOY_APPLICATION_VIEW_NOTIFICATION_RULE="CODEDEPLOY_APPLICATION_VIEW_NOTIFICATION",e.CODEDEPLOY_GITHUB_OAUTH_INTEGRATION="ROUTE_CODEDEPLOY_GITHUB_OAUTH_INTEGRATION",e.CODEDEPLOY_HOME="ROUTE_CODEDEPLOY_HOME",e.CODEDEPLOY_START="ROUTE_CODEDEPLOY_START",e.CODEARTIFACT_START="ROUTE_CODEARTIFACT_START",e.CODEARTIFACT_GETTING_STARTED="ROUTE_CODEARTIFACT_GETTING_STARTED",e.CODEARTIFACT_HOME="ROUTE_CODEARTIFACT_HOME",e.CODEARTIFACT_DOMAIN_CREATE="ROUTE_CODEARTIFACT_DOMAIN_CREATE",e.CODEARTIFACT_DOMAINS="ROUTE_CODEARTIFACT_DOMAINS",e.CODEARTIFACT_DOMAIN_POLICY="ROUTE_CODEARTIFACT_DOMAIN_POLICY",e.CODEARTIFACT_DOMAIN="ROUTE_CODEARTIFACT_DOMAIN",e.CODEARTIFACT_DOMAIN_EDIT="ROUTE_CODEARTIFACT_DOMAIN_EDIT",e.CODEARTIFACT_REPOSITORY_CREATE="ROUTE_CODEARTIFACT_REPOSITORY_CREATE",e.CODEARTIFACT_REPOSITORIES="ROUTE_CODEARTIFACT_REPOSITORIES",e.CODEARTIFACT_REPOSITORIES_CREATE="ROUTE_CODEARTIFACT_REPOSITORIES_CREATE",e.CODEARTIFACT_REPOSITORY_EDIT="ROUTE_CODEARTIFACT_REPOSITORY_EDIT",e.CODEARTIFACT_REPOSITORY_POLICY="ROUTE_CODEARTIFACT_REPOSITORY_POLICY",e.CODEARTIFACT_REPOSITORY="ROUTE_CODEARTIFACT_REPOSITORY",e.CODEARTIFACT_PACKAGE_VERSIONS="ROUTE_CODEARTIFACT_PACKAGE_VERSIONS",e.CODEARTIFACT_PACKAGE_VERSION="ROUTE_CODEARTIFACT_PACKAGE_VERSION",e.CODEARTIFACT_PACKAGE_ORIGIN_CONTROLS_EDIT="ROUTE_CODEARTIFACT_PACKAGE_ORIGIN_CONTROLS_EDIT",e.SETTINGS_NOTIFICATIONS="SETTINGS_NOTIFICATIONS",e.SETTINGS_CONNECTIONS="SETTINGS_CONNECTIONS",e.SETTINGS_CONNECTIONS_HOSTS="SETTINGS_CONNECTIONS_HOSTS",e.SETTINGS_CONNECTIONS_CREATE="SETTINGS_CONNECTIONS_CREATE",e.SETTINGS_CONNECTIONS_EDIT="SETTINGS_CONNECTIONS_EDIT",e.SETTINGS_CONNECTIONS_VIEW_CONNECTION="SETTINGS_CONNECTIONS_VIEW_CONNECTION",e.SETTINGS_CONNECTIONS_EDIT_CONNECTION_TAGS="SETTINGS_CONNECTIONS_EDIT_CONNECTION_TAGS",e.SETTINGS_CONNECTIONS_CREATE_HOST="SETTINGS_CONNECTIONS_CREATE_HOST",e.SETTINGS_CONNECTIONS_EDIT_HOST="SETTINGS_CONNECTIONS_EDIT_HOST",e.SETTINGS_CONNECTIONS_VIEW_HOST="SETTINGS_CONNECTIONS_VIEW_HOST",e.SETTINGS_CONNECTIONS_EDIT_HOST_TAGS="SETTINGS_CONNECTIONS_EDIT_HOST_TAGS",e.SETTINGS_CONNECTIONS_REGISTER_HOST="SETTINGS_CONNECTIONS_REGISTER_HOST",e.SETTINGS_CONNECTIONS_CREATE_LANDING_PAGE="SETTINGS_CONNECTIONS_CREATE_LANDING_PAGE",e.SETTINGS_CONNECTIONS_REDIRECT_PAGE="SETTINGS_CONNECTIONS_REDIRECT_PAGE",e.HOME="ROUTE_HOME",e.LOADING="ROUTE_LOADING",e}({});const r=(0,i.keyBy)(Object.values(n)),s=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{type:""},t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return!(!r[e.type]&&!c(e))&&(!e.meta||!0!==e.meta.shift||t)},c=function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{type:""}).type===a.p2},l=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{type:""};if(!r[e.type]&&!c(e))return!1;const t=e.meta||{},{current:o={pathname:""},prev:i={pathname:""}}=t.location||{};if(!o.pathname||!i.pathname)return!1;const a=o.pathname.split("/"),n=i.pathname.split("/");return(a.length>1&&a[1])!==(n.length>1&&n[1])}},50389:(e,t,o)=>{"use strict";o.d(t,{R:()=>s});var i=o(66480);const a={[i.a$.CODECOMMIT_START]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(8707)]).then(o.bind(o,16378))},[i.a$.CODECOMMIT_HOME]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1951),o.e(4427)]).then(o.bind(o,96922))},[i.a$.CODECOMMIT_REPOSITORIES]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(3201),o.e(1623)]).then(o.bind(o,7695))},[i.a$.CODECOMMIT_REPOSITORY_CREATE]:{component:()=>Promise.all([o.e(8096),o.e(1666),o.e(1526),o.e(3112),o.e(5995)]).then(o.bind(o,29832))},[i.a$.CODECOMMIT_REPOSITORY_LIST_TAGS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(160)]).then(o.bind(o,68490))},[i.a$.CODECOMMIT_REPOSITORY_LIST_BRANCHES]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(1281)]).then(o.bind(o,52099))},[i.a$.CODECOMMIT_REPOSITORY_LIST_PULL_REQUESTS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(8230)]).then(o.bind(o,38230))},[i.a$.CODECOMMIT_REPOSITORY_LIST_COMMITS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(3669)]).then(o.bind(o,46861))},[i.a$.CODECOMMIT_REPOSITORY_GURU_ASSOCIATIONS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(775),o.e(958)]).then(o.bind(o,30213))},[i.a$.CODECOMMIT_REPOSITORY_GRAPH_COMMITS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(5681)]).then(o.bind(o,94270))},[i.a$.CODECOMMIT_REPOSITORY_BROWSE_PATH]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(3201),o.e(102)]).then(o.bind(o,18072))},[i.a$.CODECOMMIT_REPOSITORY_BROWSE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(3201),o.e(102)]).then(o.bind(o,18072))},[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE_PATH]:{component:()=>Promise.all([o.e(3827),o.e(1714),o.e(1188)]).then(o.bind(o,49591))},[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE]:{component:()=>Promise.all([o.e(3827),o.e(1714),o.e(1188)]).then(o.bind(o,49591))},[i.a$.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES]:{component:()=>Promise.all([o.e(1714),o.e(337)]).then(o.bind(o,95082))},[i.a$.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES_SET]:{component:()=>Promise.all([o.e(1714),o.e(337)]).then(o.bind(o,95082))},[i.a$.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(7839)]).then(o.bind(o,61804))},[i.a$.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST_SET]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(7839)]).then(o.bind(o,61804))},[i.a$.CODECOMMIT_REPOSITORY_EDIT_PULL_REQUEST]:{component:()=>Promise.all([o.e(8096),o.e(1666),o.e(6864)]).then(o.bind(o,29770))},[i.a$.CODECOMMIT_REPOSITORY_MERGE_PULL_REQUEST]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(2024)]).then(o.bind(o,66845))},[i.a$.CODECOMMIT_REPOSITORY_RESOLVE_PULL_REQUEST]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(6220)]).then(o.bind(o,10725))},[i.a$.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(2497),o.e(775),o.e(4659)]).then(o.bind(o,65762))},[i.a$.CODECOMMIT_REPOSITORY_VIEW_COMMIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1553)]).then(o.bind(o,63424))},[i.a$.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST_COMMIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1553)]).then(o.bind(o,63424))},[i.a$.CODECOMMIT_CREATE_PULL_REQUEST_APPROVAL_RULE]:{component:()=>Promise.all([o.e(8096),o.e(1666),o.e(1526),o.e(3112),o.e(9618),o.e(2246)]).then(o.bind(o,11844))},[i.a$.CODECOMMIT_EDIT_PULL_REQUEST_APPROVAL_RULE]:{component:()=>Promise.all([o.e(8096),o.e(1666),o.e(1526),o.e(3112),o.e(9618),o.e(7958)]).then(o.bind(o,36084))},[i.a$.CODECOMMIT_REPOSITORY_SETUP_PUT_FILE]:{component:()=>Promise.all([o.e(3827),o.e(1714),o.e(1188)]).then(o.bind(o,49591))},[i.a$.CODECOMMIT_REPOSITORY_SETUP]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(3201),o.e(2637)]).then(o.bind(o,47222))},[i.a$.CODECOMMIT_REPOSITORY_SETTINGS]:{component:()=>Promise.all([o.e(8096),o.e(1714),o.e(8728)]).then(o.bind(o,64571))},[i.a$.CODECOMMIT_REPOSITORY_TAGS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(2317),o.e(5050)]).then(o.bind(o,58578))},[i.a$.CODECOMMIT_REPOSITORY_TAGS_EDIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(5673),o.e(1526),o.e(1354)]).then(o.bind(o,49081))},[i.a$.CODECOMMIT_REPOSITORY_TRIGGERS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(542),o.e(9613)]).then(o.bind(o,15830))},[i.a$.CODECOMMIT_REPOSITORY_TRIGGERS_CREATE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(7717)]).then(o.bind(o,93780))},[i.a$.CODECOMMIT_REPOSITORY_TRIGGERS_EDIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(7717)]).then(o.bind(o,93780))},[i.a$.CODECOMMIT_REPOSITORY_NOTIFICATIONS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(2610)]).then(o.bind(o,89512))},[i.a$.CODECOMMIT_REPOSITORY_NOTIFICATIONS_EDIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(5673),o.e(8968)]).then(o.bind(o,83451))},[i.a$.CODECOMMIT_CONNECT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(3201),o.e(3594)]).then(o.bind(o,27643))},[i.a$.CODECOMMIT_REPOSITORY_CREATE_NOTIFICATION_RULE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(6213)]).then(o.bind(o,9373))},[i.a$.CODECOMMIT_REPOSITORY_EDIT_NOTIFICATION_RULE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(4041)]).then(o.bind(o,97201))},[i.a$.CODECOMMIT_REPOSITORY_VIEW_NOTIFICATION_RULE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(542),o.e(3774),o.e(8588)]).then(o.bind(o,76454))},[i.a$.CODECOMMIT_APPROVAL_RULE_TEMPLATES]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(7940)]).then(o.bind(o,22874))},[i.a$.CODECOMMIT_CREATE_APPROVAL_RULE_TEMPLATE]:{component:()=>Promise.all([o.e(8096),o.e(1666),o.e(1526),o.e(3112),o.e(5573),o.e(1375)]).then(o.bind(o,84356))},[i.a$.CODECOMMIT_EDIT_APPROVAL_RULE_TEMPLATE]:{component:()=>Promise.all([o.e(8096),o.e(1666),o.e(1526),o.e(3112),o.e(5573),o.e(1287)]).then(o.bind(o,33356))}},n={[i.a$.CODEBUILD_HOME]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1951),o.e(4427)]).then(o.bind(o,96922))},[i.a$.CODEBUILD_START]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(6862),o.e(3577),o.e(1520)]).then(o.bind(o,32120))},[i.a$.CODEBUILD_METRICS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(2710)]).then(o.bind(o,72710))},[i.a$.CODEBUILD_BUILD]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(8453),o.e(1755),o.e(4210),o.e(8811)]).then(o.bind(o,23545))},[i.a$.CODEBUILD_BUILD_HISTORY]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(8808),o.e(8458)]).then(o.bind(o,23040))},[i.a$.CODEBUILD_BUILD_START]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4133)]).then(o.bind(o,79674))},[i.a$.CODEBUILD_BUILD_START_DEFAULT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4133)]).then(o.bind(o,79674))},[i.a$.CODEBUILD_BUILD_START_ADVANCED]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(5558),o.e(6058),o.e(2003),o.e(4492)]).then(o.bind(o,31947))},[i.a$.CODEBUILD_CONNECT_TO_DEBUG_MODE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(271)]).then(o.bind(o,29620))},[i.a$.CODEBUILD_BATCH_BUILD]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1755),o.e(2072)]).then(o.bind(o,81954))},[i.a$.CODEBUILD_PROJECTS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(4557)]).then(o.bind(o,29951))},[i.a$.CODEBUILD_PROJECT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(1755),o.e(8808),o.e(4072)]).then(o.bind(o,82839))},[i.a$.CODEBUILD_PROJECT_CREATE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(5558),o.e(2003),o.e(8751),o.e(5897)]).then(o.bind(o,11530))},[i.a$.CODEBUILD_PROJECT_CLONE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(8751),o.e(2711)]).then(o.bind(o,86052))},[i.a$.CODEBUILD_PROJECT_EDIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(7335)]).then(o.bind(o,67676))},[i.a$.CODEBUILD_PROJECT_EDIT_ALL]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(8751),o.e(2711)]).then(o.bind(o,86052))},[i.a$.CODEBUILD_PROJECT_TRIGGERS_CREATE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(5673),o.e(3663),o.e(6065)]).then(o.bind(o,97510))},[i.a$.CODEBUILD_PROJECT_TRIGGERS_EDIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(5673),o.e(3663),o.e(8412)]).then(o.bind(o,12055))},[i.a$.CODEBUILD_OAUTH_INTEGRATION]:{component:()=>o.e(5009).then(o.bind(o,15009))},[i.a$.CODEBUILD_PROJECT_NOTIFICATIONS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(2158)]).then(o.bind(o,3428))},[i.a$.CODEBUILD_PROJECT_CREATE_NOTIFICATION_RULE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(6055)]).then(o.bind(o,76123))},[i.a$.CODEBUILD_PROJECT_EDIT_NOTIFICATION_RULE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(7751)]).then(o.bind(o,49803))},[i.a$.CODEBUILD_PROJECT_VIEW_NOTIFICATION_RULE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(542),o.e(3774),o.e(9012)]).then(o.bind(o,71374))},[i.a$.CODEBUILD_PROJECT_TAGS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(2317),o.e(4265)]).then(o.bind(o,10861))},[i.a$.CODEBUILD_PROJECT_EDIT_TAGS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(5673),o.e(6717),o.e(5436),o.e(5722)]).then(o.bind(o,2441))},[i.a$.CODEBUILD_TEST_REPORT_GROUP_SETTINGS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(2317),o.e(5151)]).then(o.bind(o,85963))},[i.a$.CODEBUILD_TEST_REPORT_GROUP_EDIT_TAGS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(5673),o.e(6717),o.e(5436),o.e(6274)]).then(o.bind(o,58257))},[i.a$.CODEBUILD_LIST_TEST_REPORT_GROUPS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(8453),o.e(5865)]).then(o.bind(o,50037))},[i.a$.CODEBUILD_VIEW_TEST_REPORT_GROUP]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(8453),o.e(4210),o.e(2017)]).then(o.bind(o,95862))},[i.a$.CODEBUILD_REPORT_GROUP_CREATE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(6717),o.e(1345),o.e(8992),o.e(2081)]).then(o.bind(o,91312))},[i.a$.CODEBUILD_REPORT_GROUP_EDIT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(1666),o.e(6717),o.e(1345),o.e(8992),o.e(5593)]).then(o.bind(o,69944))},[i.a$.CODEBUILD_LIST_TEST_REPORTS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(8453),o.e(4210),o.e(143)]).then(o.bind(o,34056))},[i.a$.CODEBUILD_VIEW_TEST_REPORT]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(8453),o.e(6862),o.e(2999)]).then(o.bind(o,48942))},[i.a$.CODEBUILD_FLEET_CREATE]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1345),o.e(6119),o.e(3955)]).then(o.bind(o,16768))},[i.a$.CODEBUILD_EDIT_FLEET]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1345),o.e(6119),o.e(398)]).then(o.bind(o,16397))},[i.a$.CODEBUILD_VIEW_FLEET]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(8075)]).then(o.bind(o,51320))},[i.a$.CODEBUILD_LIST_FLEETS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(1834)]).then(o.bind(o,96032))},[i.a$.CODEBUILD_SOURCE_CONNECTIONS]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(7401)]).then(o.bind(o,27401))}};var r=o(12337);const s={[i.a$.HOME]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(1951),o.e(7653)]).then(o.bind(o,6824))},[i.a$.LOADING]:{component:()=>o.e(6459).then(o.bind(o,96459))},[r.p2]:{component:()=>Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(6862),o.e(1951),o.e(3577),o.e(6303),o.e(4185)]).then(o.bind(o,16303))},...a,...n}},13508:(e,t,o)=>{"use strict";o.r(t),o.d(t,{NOT_FOUND_ITEM:()=>I,actionFromLocation:()=>O,actionToPath:()=>y,addLinkTargetToForceRefresh:()=>U,appendQueryParams:()=>E,dispatchPush:()=>S,dispatchPushBack:()=>M,getCurrentPath:()=>w,getLocationType:()=>P,getPreviousPath:()=>L,hrefOf:()=>C,isEventBadClick:()=>u,isEventModified:()=>d,link:()=>T,notFoundResource:()=>R,notFoundRoute:()=>D,parseRoute:()=>N,pathOf:()=>b,pathToAction:()=>h,push:()=>v,pushPath:()=>k,querySerializer:()=>m,shift:()=>_,shiftAction:()=>A,withQueryParams:()=>g});var i=o(12337),a=o(2543),n=o(86663),r=o(66480),s=o(45012),c=o(74615);const l=e=>!!(e.altKey||e.ctrlKey||e.metaKey||e.shiftKey),d=e=>{if(!e)return!1;const t=e;return l(t)||"object"==typeof t.detail&&null!==t.detail&&l(t.detail)},u=e=>{if(!e)return!1;const t=e;return!!t&&(1===t.button||2===t.button)},p=e=>n.stringify(e),m={parse:e=>(0,a.mapValues)(n.parse(e),(e=>e instanceof Array?e[0]:e)),stringify:p},h=e=>{const t=(0,i.$j)(e,s.tR,m);return t.query=t.meta&&t.meta.query,t},y=e=>(0,i.fH)(e,s.tR,m),g=function(e,t){const o=arguments.length>2&&void 0!==arguments[2]&&!arguments[2]?{...t,...e.query}:{...e.query,...t};return{...e,query:o,meta:{...e.meta,query:o}}},E=function(e,t){let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const{url:i,query:a}=(e=>n.parseUrl(e))(e);return`${i}?${p(o?{...a,...t}:{...t,...a})}`},b=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const o=s._5[e].link(...t.map((e=>e&&encodeURIComponent(e).replace(/%2F/g,"/"))));return E(o,{region:(0,c.kh)()},!1)},C=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return e===r.a$.HOME?`/codesuite${b(e,t)}`:`${s.jS}${b(e,t)}`},f=function(e){return h(b(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:[]))},T=function(e){for(var t=arguments.length,o=new Array(t>1?t-1:0),i=1;i<t;i++)o[i-1]=arguments[i];return{href:C(e,o),onClick:t=>{d(t)||u(t)||(t&&t.preventDefault&&t.preventDefault(),S(e,...o))}}},S=function(e){for(var t=arguments.length,o=new Array(t>1?t-1:0),a=1;a<t;a++)o[a-1]=arguments[a];(0,i.VC)(b(e,o))},v=function(e){for(var t=arguments.length,o=new Array(t>1?t-1:0),i=1;i<t;i++)o[i-1]=arguments[i];return f(e,o)},A=e=>({...e,meta:{...e.meta,shift:!0}}),_=function(e){for(var t=arguments.length,o=new Array(t>1?t-1:0),a=1;a<t;a++)o[a-1]=arguments[a];const n=(0,i.V2)(f(e,o));return A(n)},O=e=>{let{type:t,payload:o,query:i={}}=e;return g({type:t,payload:o},i)};let I=function(e){return e.RESOURCE="RESOURCE",e.ROUTE="ROUTE",e}({});const R=e=>({type:i.p2,payload:{error:e,reason:I.RESOURCE}}),D=function(){return arguments.length>0&&void 0!==arguments[0]&&!arguments[0]?{type:i.p2,payload:{reason:I.ROUTE}}:(0,i.V2)(f(i.p2))},N=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.location.pathname;return h(e.substring(s.jS.length)).type},P=e=>e.location.type,L=e=>e.location.prev.pathname,w=e=>e.location.pathname,M=e=>{(0,i.VC)(e)},k=e=>h(e),U=function(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?{onClick:()=>{},target:"_self",rel:"noopener"}:{}}},13104:(e,t,o)=>{"use strict";o.d(t,{Y:()=>i});const i=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32;return e.toUpperCase().replace(/CODE([ABCPDS])(RTIFACT|UILD|OMMIT|IPELINE|EPLOY|TAR)/gi,"C$1").replace("ROUTE_","").slice(0,t)}},45012:(e,t,o)=>{"use strict";o.d(t,{jS:()=>H,$j:()=>z,_5:()=>q,tR:()=>$});var i=o(66480),a=o(64104),n=o(77211);const r=[i.a$.CODESTAR_PROJECT_ENVIRONMENTS,i.a$.CODESTAR_PROJECT_REPOSITORY,i.a$.CODESTAR_PROJECT_PIPELINE,i.a$.CODESTAR_PROJECT_MONITORING,i.a$.CODESTAR_PROJECT_ISSUES,i.a$.CODESTAR_PROJECT_SETTINGS,i.a$.CODESTAR_PROJECT_EXTENSIONS],s={[i.a$.CODESTAR_HOME]:{route:"/codestar/home",link:()=>"/codesuite/codestar/home",service:a.Q_.codestar,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODESTAR_PROJECTS]:{route:"/codestar/projects",link:()=>"/codesuite/codestar/projects",service:a.Q_.codestar,options:{helpPanelPath:"hp-projects-page"}},[i.a$.CODESTAR_PROJECT]:{route:"/codestar/projects/:projectId",link:e=>`/codesuite/codestar/projects/${e}`,service:a.Q_.codestar,componentHints:r,options:{helpPanelPath:"hp-dashboard"}},[i.a$.CODESTAR_PROJECT_EXTENSIONS]:{route:"/codestar/projects/:projectId/extensions",link:e=>`/codesuite/codestar/projects/${e}/extensions`,service:a.Q_.codestar,options:{helpPanelPath:"hp-integrations.connect"}},[i.a$.CODESTAR_PROJECT_TEAM_MEMBERS]:{route:"/codestar/projects/:projectId/team",link:e=>`/codesuite/codestar/projects/${e}/team`,service:a.Q_.codestar,options:{helpPanelPath:"hp-team.manage"}},[i.a$.CODESTAR_PROJECT_TEAM_MEMBERS_ADD]:{route:"/codestar/projects/:projectId/team/add",link:e=>`/codesuite/codestar/projects/${e}/team/add`,service:a.Q_.codestar,options:{contentType:"form",helpPanelPath:"hp-team.add-team-member"}},[i.a$.CODESTAR_PROJECT_TEAM_MEMBERS_EDIT]:{route:"/codestar/projects/:projectId/team/edit",link:(e,t)=>t?`/codesuite/codestar/projects/${e}/team/edit?userArn=${t}`:`/codesuite/codestar/projects/${e}/team`,service:a.Q_.codestar,options:{contentType:"form"}},[i.a$.CODESTAR_PROJECT_REPOSITORY]:{route:"/codestar/projects/:projectId/repository",link:e=>`/codesuite/codestar/projects/${e}/repository`,service:a.Q_.codestar,options:{helpPanelPath:"hp-repository"}},[i.a$.CODESTAR_PROJECT_PIPELINE]:{route:"/codestar/projects/:projectId/pipeline",link:e=>`/codesuite/codestar/projects/${e}/pipeline`,service:a.Q_.codestar,options:{helpPanelPath:"hp-CI_CD"}},[i.a$.CODESTAR_PROJECT_MONITORING]:{route:"/codestar/projects/:projectId/monitoring",link:e=>`/codesuite/codestar/projects/${e}/monitoring`,service:a.Q_.codestar,options:{helpPanelPath:"hp-monitoring"}},[i.a$.CODESTAR_PROJECT_ISSUES]:{route:"/codestar/projects/:projectId/issues",link:e=>`/codesuite/codestar/projects/${e}/issues`,service:a.Q_.codestar,options:{contentType:"table",helpPanelPath:"hp-issues"}},[i.a$.CODESTAR_PROJECT_SETTINGS]:{route:"/codestar/projects/:projectId/settings",link:e=>`/codesuite/codestar/projects/${e}/settings`,service:a.Q_.codestar,options:{contentType:"table",helpPanelPath:"hp-project-settings"}},[i.a$.CODESTAR_PROJECT_TAGS_EDIT]:{route:"/codestar/projects/:projectId/settings/tags",link:e=>`/codesuite/codestar/projects/${e}/settings/tags`,service:a.Q_.codestar,options:{contentType:"form"}},[i.a$.CODESTAR_PROJECT_ENVIRONMENTS]:{route:"/codestar/projects/:projectId/environments",link:e=>`/codesuite/codestar/projects/${e}/environments`,service:a.Q_.codestar,options:{contentType:"table",helpPanelPath:"hp-ide.account"}},[i.a$.CODESTAR_PROJECT_ENVIRONMENT_CREATE]:{route:"/codestar/projects/:projectId/environment/new",link:e=>`/codesuite/codestar/projects/${e}/environment/new`,service:a.Q_.codestar,options:{contentType:"form",helpPanelPath:"hp-ide.connect"}},[i.a$.CODESTAR_PROJECT_CREATE]:{route:"/codestar/project/new",link:()=>"/codesuite/codestar/project/new",service:a.Q_.codestar,options:{contentType:"wizard",helpPanelPath:e=>{switch((0,n.$g)(e)){case 0:return"hp-create-project-wizard.choose-template";case 1:return"hp-create-project-wizard.set-up-project";case 2:return"hp-create-project-wizard.review-project";default:return""}}}},[i.a$.CODESTAR_PROJECT_CREATE_GITHUB_POPUP]:{route:"/codestar/oauth/github",link:()=>"/codesuite/codestar/oauth/github",service:a.Q_.codestar,hideHelpPanel:!0,options:{contentType:"immersive"}},[i.a$.CODESTAR_PROJECT_CREATE_AMAZON_DEVELOPER_POPUP]:{route:"/codestar/oauth/amazonDeveloper",link:()=>"/codesuite/codestar/oauth/amazonDeveloper",service:a.Q_.codestar,hideHelpPanel:!0,options:{contentType:"immersive"}},[i.a$.CODESTAR_PROJECT_GITHUB_POPUP]:{route:"/codestar/projects/:projectId/oauth/github",link:e=>`/codesuite/codestar/projects/${e}/oauth/github`,service:a.Q_.codestar,hideHelpPanel:!0,options:{contentType:"immersive"}},[i.a$.CODESTAR_PROJECT_JIRA_POPUP]:{route:"/codestar/projects/:projectId/oauth/jira",link:e=>`/codesuite/codestar/projects/${e}/oauth/jira`,service:a.Q_.codestar,hideHelpPanel:!0,options:{contentType:"immersive"}},[i.a$.CODESTAR_PROJECT_CONNECT_JIRA]:{route:"/codestar/projects/:projectId/connect/jira",link:e=>`/codesuite/codestar/projects/${e}/connect/jira`,service:a.Q_.codestar,options:{contentType:"wizard",helpPanelPath:"hp-jira"}},[i.a$.CODESTAR_COMMAND_LINE_INSTRUCTIONS]:{route:"/codestar/projects/:projectId/environments/cli",link:e=>`/codesuite/codestar/projects/${e}/environments/cli`,service:a.Q_.codestar,hideHelpPanel:!0},[i.a$.CODESTAR_ECLIPSE_INSTRUCTIONS]:{route:"/codestar/projects/:projectId/environments/eclipse",link:e=>`/codesuite/codestar/projects/${e}/environments/eclipse`,service:a.Q_.codestar,hideHelpPanel:!0},[i.a$.CODESTAR_VISUALSTUDIO_INSTRUCTIONS]:{route:"/codestar/projects/:projectId/environments/visualstudio",link:e=>`/codesuite/codestar/projects/${e}/environments/visualstudio`,service:a.Q_.codestar,hideHelpPanel:!0},[i.a$.CODESTAR_GITHUB_INSTRUCTIONS]:{route:"/codestar/projects/:projectId/environments/github",link:e=>`/codesuite/codestar/projects/${e}/environments/github`,service:a.Q_.codestar,hideHelpPanel:!0}};var c=o(7474),l=o(2543);const d=(e,t)=>{const o=(e=>{const t=new Map,o=function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;[e.route,...e.alsoMatch||[]].forEach((o=>t.set(o,{parentRoute:e.ignoreParent?void 0:i,selector:t=>({...e.selector(t),route:e.route})}))),(e.children||[]).forEach((t=>o(t,e.route)))};return o(e),t})(t);return(0,l.mapValues)(e,((e,t)=>{const i=o.get(t);return{...e,breadcrumb:i&&{parentRoute:i.parentRoute,selectors:[i.selector]}}}))};var u=o(18562),p=o(12885),m=o(75528),h=o(74976),y=o(25163),g=o(59948);const E={route:i.a$.CODEBUILD_START,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.codeBuild")}),children:[{route:i.a$.CODEBUILD_BUILD_HISTORY,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.history"),routeParams:[g.y.build]}),children:[{route:i.a$.CODEBUILD_BUILD_START_DEFAULT,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.newBuild")})}]},{route:i.a$.CODEBUILD_METRICS,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.metrics")})},{route:i.a$.CODEBUILD_PROJECTS,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.projects")}),children:[{route:i.a$.CODEBUILD_PROJECT_CREATE,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.newProject")})},{route:i.a$.CODEBUILD_PROJECT,selector:e=>{const t=(0,m.k)(e);return{text:t,routeParams:[t,"",(0,y.y)(e).accountId]}},children:[{route:i.a$.CODEBUILD_BUILD_START,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("codebuild:breadcrumbs.newBuild"),routeParams:[t]}}},{route:i.a$.CODEBUILD_BUILD_START_ADVANCED,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("codebuild:breadcrumbs.newBuild"),routeParams:[t]}}},{route:i.a$.CODEBUILD_CONNECT_TO_DEBUG_MODE,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("codebuild:breadcrumbs.debug"),routeParams:[t]}}},{route:i.a$.CODEBUILD_BUILD,selector:e=>{const t=(0,m.k)(e),o=(0,p.NC)(e);return{text:o,routeParams:[t,o,(0,y.y)(e).accountId]}}},{route:i.a$.CODEBUILD_BATCH_BUILD,selector:e=>{const t=(0,m.k)(e),o=e.location.payload.batchBuildId||"";return{text:o,routeParams:[t,o,(0,y.y)(e).accountId]}}},{route:i.a$.CODEBUILD_PROJECT_CLONE,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("codebuild:breadcrumbs.cloneProject"),routeParams:[t]}}},{route:i.a$.CODEBUILD_PROJECT_EDIT_ALL,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("codebuild:breadcrumbs.editProject",{section:(0,u.t)("codebuild:header.project")}),routeParams:[t]}}},{route:i.a$.CODEBUILD_PROJECT_EDIT,selector:e=>{const t=(0,m.k)(e),{section:o=h.ZH.configuration}=e.location.payload;return{text:(0,u.t)("codebuild:breadcrumbs.editProject",{section:(0,u.t)(`codebuild:header.${o}`)}),routeParams:[t,o]}}},{route:i.a$.CODEBUILD_PROJECT_TRIGGERS_CREATE,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("codebuild:buildTriggers.actions.createTrigger"),routeParams:[t]}}},{route:i.a$.CODEBUILD_PROJECT_TRIGGERS_EDIT,selector:e=>{const t=(0,m.k)(e),o=(0,m.v)(e);return{text:(0,u.t)("codebuild:buildTriggers.actions.editTrigger"),routeParams:[t,o]}}},{route:i.a$.CODEBUILD_PROJECT_CREATE_NOTIFICATION_RULE,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("common:breadcrumbs.createNotificationRule"),routeParams:[t]}}},{route:i.a$.CODEBUILD_PROJECT_VIEW_NOTIFICATION_RULE,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("common:breadcrumbs.viewNotificationRule"),routeParams:[t]}}},{route:i.a$.CODEBUILD_PROJECT_NOTIFICATIONS,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("common:breadcrumbs.settings"),routeParams:[t]}}},{route:i.a$.CODEBUILD_PROJECT_TAGS,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("common:breadcrumbs.settings"),routeParams:[t]}}},{route:i.a$.CODEBUILD_PROJECT_EDIT_TAGS,selector:e=>{const t=(0,m.k)(e);return{text:(0,u.t)("common:breadcrumbs.tags"),routeParams:[t]}}}]}]},{route:i.a$.CODEBUILD_LIST_TEST_REPORT_GROUPS,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.reportGroups")}),children:[{route:i.a$.CODEBUILD_VIEW_TEST_REPORT_GROUP,selector:e=>{const t=e.location.payload.reportGroup||"";return{text:t,routeParams:[t,(0,y.y)(e).accountId]}},children:[{route:i.a$.CODEBUILD_VIEW_TEST_REPORT,selector:e=>{const t=e.location.payload.testReportId||"";return{text:t,routeParams:[e.location.payload.reportGroup||"",t,(0,y.y)(e).accountId]}}},{route:i.a$.CODEBUILD_REPORT_GROUP_EDIT,selector:e=>{const t=e.location.payload.reportGroup||"";return{text:(0,u.t)("codebuild:breadcrumbs.editReportGroup",{reportGroupName:t}),routeParams:[t]}}},{route:i.a$.CODEBUILD_TEST_REPORT_GROUP_SETTINGS,selector:()=>({text:(0,u.t)("common:breadcrumbs.settings")})},{route:i.a$.CODEBUILD_TEST_REPORT_GROUP_EDIT_TAGS,selector:()=>({text:(0,u.t)("common:breadcrumbs.tags")})}]},{route:i.a$.CODEBUILD_REPORT_GROUP_CREATE,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.createReportGroup")})}]},{route:i.a$.CODEBUILD_LIST_TEST_REPORTS,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.testReportHistory")})},{route:i.a$.CODEBUILD_LIST_FLEETS,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.listFleets")}),children:[{route:i.a$.CODEBUILD_FLEET_CREATE,selector:()=>({text:(0,u.t)("codebuild:breadcrumbs.createFleet")})},{route:i.a$.CODEBUILD_EDIT_FLEET,selector:e=>{const t=e.location.payload.fleetName||"",o=e.location.payload.fleetId||"";return{text:(0,u.t)("codebuild:breadcrumbs.editFleet"),routeParams:[t,o]}}},{route:i.a$.CODEBUILD_VIEW_FLEET,selector:e=>{const t=e.location.payload.fleetName||"";return{text:t,routeParams:[t,(0,y.y)(e).accountId]}}}]}]};var b=o(89221),C=o(91501),f=o(59339);const T=d({[i.a$.CODEBUILD_HOME]:{route:"/home",link:()=>"/home",service:a.Q_.codebuild,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODEBUILD_START]:{route:"/start",link:()=>"/start",service:a.Q_.codebuild,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODEBUILD_METRICS]:{route:"/metrics",link:()=>"/metrics",service:a.Q_.codebuild,hideHelpPanel:!0},[i.a$.CODEBUILD_BUILD]:{route:"/:accountId?/projects/:projectName/build/:buildId/:tab?",link:function(e,t){return`/${arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,C.We)()}/projects/${e}/build/${t}/${(arguments.length>3?arguments[3]:void 0)||""}`},service:a.Q_.codebuild,options:{helpPanelPath:"build-hp"}},[i.a$.CODEBUILD_BUILD_HISTORY]:{route:"/builds/:tab?",link:function(){return`/builds/${arguments.length>0&&void 0!==arguments[0]?arguments[0]:g.y.build}`},service:a.Q_.codebuild,options:{contentType:"table",helpPanelPath:"build-history-hp"}},[i.a$.CODEBUILD_BUILD_START]:{route:"/projects/:projectName/builds/start",link:e=>`/projects/${e}/builds/start`,service:a.Q_.codebuild,options:{contentType:"form",helpPanelPath:"start-build-project-hp"}},[i.a$.CODEBUILD_BUILD_START_DEFAULT]:{route:"/builds/start",link:()=>"/builds/start",service:a.Q_.codebuild,options:{contentType:"form",helpPanelPath:"start-build-project-hp"}},[i.a$.CODEBUILD_BUILD_START_ADVANCED]:{route:"/projects/:projectName/builds/start/advanced",link:e=>`/projects/${e}/builds/start/advanced`,service:a.Q_.codebuild,options:{contentType:"form",helpPanelPath:"start-build-project-hp"}},[i.a$.CODEBUILD_CONNECT_TO_DEBUG_MODE]:{route:"/projects/:projectName/builds/debug",link:e=>`/projects/${e}/builds/debug`,service:a.Q_.codebuild,options:{contentType:"form",helpPanelPath:"start-build-project-hp"}},[i.a$.CODEBUILD_BATCH_BUILD]:{route:"/:accountId?/projects/:projectName/batch/:batchBuildId/:tab?",link:function(e,t){return`/${arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,C.We)()}/projects/${e}/batch/${t}/${(arguments.length>3?arguments[3]:void 0)||""}`},service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildBatchBuilds),options:{helpPanelPath:"build-batch-hp"}},[i.a$.CODEBUILD_PROJECTS]:{route:"/projects",link:()=>"/projects",service:a.Q_.codebuild,options:{contentType:"table",helpPanelPath:"build-projects-hp"}},[i.a$.CODEBUILD_PROJECT_TAGS]:{route:"/:accountId?/projects/:projectName/tags",link:function(e){return`/${arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,C.We)()}/projects/${e}/tags`},service:a.Q_.codebuild,options:{helpPanelPath:"build-project-list-tags-hp"}},[i.a$.CODEBUILD_PROJECT_EDIT_TAGS]:{route:"/projects/:projectName/tags/edit",link:e=>`/projects/${e}/tags/edit`,service:a.Q_.codebuild,options:{helpPanelPath:"build-project-edit-tags-hp"}},[i.a$.CODEBUILD_PROJECT_CLONE]:{route:"/projects/:projectName/clone",link:e=>`/projects/${e}/clone`,service:a.Q_.codebuild,options:{helpPanelPath:"create-build-project-hp",contentType:"form"}},[i.a$.CODEBUILD_PROJECT]:{route:"/:accountId?/projects/:projectName/:tab?",link:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f.aA.history;return`/${arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,C.We)()}/projects/${e}/${t}`},service:a.Q_.codebuild,options:{helpPanelPath:"build-project-hp"}},[i.a$.CODEBUILD_PROJECT_CREATE]:{route:"/project/new",link:()=>"/project/new",service:a.Q_.codebuild,options:{helpPanelPath:"create-build-project-hp",contentType:"form"}},[i.a$.CODEBUILD_PROJECT_EDIT_ALL]:{route:"/projects/:projectName/edit/project",link:e=>`/projects/${e}/edit/project`,service:a.Q_.codebuild,options:{helpPanelPath:"create-build-project-hp",contentType:"form"}},[i.a$.CODEBUILD_PROJECT_EDIT]:{route:"/projects/:projectName/edit/:section",link:(e,t)=>`/projects/${e}/edit/${t}`,service:a.Q_.codebuild,options:{helpPanelPath:"create-build-project-hp",contentType:"form"}},[i.a$.CODEBUILD_PROJECT_TRIGGERS_CREATE]:{route:"/projects/:projectName/triggers/new",link:e=>`/projects/${e}/triggers/new`,service:a.Q_.codebuild,hideHelpPanel:!0,options:{contentType:"form"}},[i.a$.CODEBUILD_PROJECT_TRIGGERS_EDIT]:{route:"/projects/:projectName/triggers/:triggerName/edit",link:(e,t)=>`/projects/${e}/triggers/${t}/edit`,service:a.Q_.codebuild,hideHelpPanel:!0,options:{contentType:"form"}},[i.a$.CODEBUILD_OAUTH_INTEGRATION]:{route:"/oauth/:serverType",link:e=>`/oauth/${e}`,service:a.Q_.codebuild,hideHelpPanel:!0,options:{contentType:"immersive"}},[i.a$.CODEBUILD_PROJECT_NOTIFICATIONS]:{route:"/project/:projectName/notifications",link:e=>`/project/${e}/notifications`,service:a.Q_.codebuild,options:{helpPanelPath:"notifications.codebuild",helpPanelService:"dtconsole"}},[i.a$.CODEBUILD_PROJECT_CREATE_NOTIFICATION_RULE]:{route:"/project/:projectName/notifications/create",link:e=>`/project/${e}/notifications/create`,service:a.Q_.codebuild,options:{contentType:"form",helpPanelPath:"notifications.codebuild.create",helpPanelService:"dtconsole"}},[i.a$.CODEBUILD_PROJECT_EDIT_NOTIFICATION_RULE]:{route:"/projects/:projectName/notifications/:notificationRule*/edit",link:(e,t)=>`/projects/${e}/notifications/${t}/edit`,service:a.Q_.codebuild,options:{contentType:"form",helpPanelPath:"notifications.codebuild.edit",helpPanelService:"dtconsole"}},[i.a$.CODEBUILD_PROJECT_VIEW_NOTIFICATION_RULE]:{route:"/projects/:projectName/notifications/:notificationRule*",link:(e,t)=>`/projects/${e}/notifications/${t}`,service:a.Q_.codebuild,options:{contentType:"form",helpPanelPath:"notifications.codebuild",helpPanelService:"dtconsole"}},[i.a$.CODEBUILD_TEST_REPORT_GROUP_SETTINGS]:{route:"/:accountId?/testReports/reportGroups/:reportGroup/settings",link:function(e){return`/${arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,C.We)()}/testReports/reportGroups/${e}/settings`},service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildTestReportingTags),options:{helpPanelPath:"report-group-list-tags-hp"}},[i.a$.CODEBUILD_TEST_REPORT_GROUP_EDIT_TAGS]:{route:"/testReports/reportGroups/:reportGroup/tags/edit",link:e=>`/testReports/reportGroups/${e}/tags/edit`,service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildTestReportingTags),options:{helpPanelPath:"report-group-edit-tags-hp"}},[i.a$.CODEBUILD_LIST_TEST_REPORT_GROUPS]:{route:"/testReports/reportGroups",link:()=>"/testReports/reportGroups",service:a.Q_.codebuild,options:{helpPanelPath:"list-report-group-hp"}},[i.a$.CODEBUILD_VIEW_TEST_REPORT_GROUP]:{route:"/:accountId?/testReports/reportGroups/:reportGroup",link:function(e){return`/${arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,C.We)()}/testReports/reportGroups/${e}`},service:a.Q_.codebuild,options:{helpPanelPath:"report-group-hp"}},[i.a$.CODEBUILD_REPORT_GROUP_CREATE]:{route:"/testReports/reportGroup/new",link:()=>"/testReports/reportGroup/new",service:a.Q_.codebuild,options:{helpPanelPath:"create-edit-report-group-hp"}},[i.a$.CODEBUILD_REPORT_GROUP_EDIT]:{route:"/testReports/reportGroups/:reportGroup/edit",link:e=>`/testReports/reportGroups/${e}/edit`,service:a.Q_.codebuild,options:{helpPanelPath:"create-edit-report-group-hp"}},[i.a$.CODEBUILD_LIST_TEST_REPORTS]:{route:"/testReports/reports",link:()=>"/testReports/reports",service:a.Q_.codebuild,options:{helpPanelPath:"list-report-hp"}},[i.a$.CODEBUILD_VIEW_TEST_REPORT]:{route:"/:accountId?/testReports/reports/:reportGroup/:testReportId",link:function(e,t){return`/${arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,C.We)()}/testReports/reports/${e}/${t}`},service:a.Q_.codebuild,options:{helpPanelPath:"report-hp"}},[i.a$.CODEBUILD_FLEET_CREATE]:{route:"/fleet/new",link:()=>"/fleet/new",service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildProvisionedModel),options:{contentType:"form"}},[i.a$.CODEBUILD_EDIT_FLEET]:{route:"/fleet/:fleetName/:fleetId/edit",link:(e,t)=>`/fleet/${e}/${t}/edit`,service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildProvisionedModel),options:{contentType:"form"}},[i.a$.CODEBUILD_VIEW_FLEET]:{route:"/:accountId?/fleets/:fleetName/:fleetId",link:function(){return`/${arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,C.We)()}/fleets/${arguments.length>1?arguments[1]:void 0}/${arguments.length>2?arguments[2]:void 0}`},service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildProvisionedModel)},[i.a$.CODEBUILD_LIST_FLEETS]:{route:"/fleets",link:()=>"/fleets",service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildProvisionedModel)},[i.a$.CODEBUILD_SOURCE_CONNECTIONS]:{route:"/sourceConnections",link:()=>"/sourceConnections",service:a.Q_.codebuild,disabled:!(0,c.G7)(b.H.CodeBuildSecretsManagerSourceAuth),options:{contentType:"immersive"}}},E);var S=o(86663),v=o(63158),A=o(54707),_=o(27421),O=o(42560);const I={route:i.a$.CODECOMMIT_START,selector:()=>({text:(0,u.t)("codecommit:breadcrumbs.home")}),children:[{route:i.a$.CODECOMMIT_APPROVAL_RULE_TEMPLATES,selector:()=>({text:(0,u.t)("codecommit:breadcrumbs.approvalRuleTemplates")}),children:[{route:i.a$.CODECOMMIT_CREATE_APPROVAL_RULE_TEMPLATE,selector:()=>({text:(0,u.t)("codecommit:breadcrumbs.createApprovalRuleTemplate")})},{route:i.a$.CODECOMMIT_EDIT_APPROVAL_RULE_TEMPLATE,selector:e=>({routeParams:[e.location.payload.approvalRuleTemplateName],text:e.location.payload.approvalRuleTemplateName})}]},{route:i.a$.CODECOMMIT_REPOSITORIES,selector:()=>({text:(0,u.t)("codecommit:breadcrumbs.listRepositories")}),children:[{route:i.a$.CODECOMMIT_REPOSITORY_CREATE,selector:()=>({text:(0,u.t)("codecommit:breadcrumbs.createRepository")})},{route:i.a$.CODECOMMIT_REPOSITORY_SETUP,selector:e=>({routeParams:[e.location.payload.repositoryName],text:e.location.payload.repositoryName}),children:[{route:i.a$.CODECOMMIT_REPOSITORY_SETUP_PUT_FILE,selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.putFile")})}]},{route:i.a$.CODECOMMIT_REPOSITORY_BROWSE,alsoMatch:[i.a$.CODECOMMIT_REPOSITORY_BROWSE_PATH,i.a$.CODECOMMIT_CONNECT],selector:e=>({routeParams:[e.location.payload.repositoryName],text:e.location.payload.repositoryName}),children:[{route:i.a$.CODECOMMIT_REPOSITORY_PUT_FILE,alsoMatch:[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE_PATH],selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.putFile")})},{route:i.a$.CODECOMMIT_REPOSITORY_LIST_TAGS,selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.listTags")})},{route:i.a$.CODECOMMIT_REPOSITORY_LIST_BRANCHES,selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.listBranches")})},{route:i.a$.CODECOMMIT_REPOSITORY_LIST_COMMITS,alsoMatch:[i.a$.CODECOMMIT_REPOSITORY_GRAPH_COMMITS,i.a$.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES,i.a$.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES_SET],selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.listCommits")}),children:[{route:i.a$.CODECOMMIT_REPOSITORY_VIEW_COMMIT,selector:e=>({routeParams:[e.location.payload.repositoryName,e.location.payload.commitId],text:e.location.payload.commitId})}]},{route:i.a$.CODECOMMIT_REPOSITORY_SETTINGS,alsoMatch:[i.a$.CODECOMMIT_REPOSITORY_TAGS,i.a$.CODECOMMIT_REPOSITORY_TRIGGERS,i.a$.CODECOMMIT_REPOSITORY_TRIGGERS_CREATE,i.a$.CODECOMMIT_REPOSITORY_TRIGGERS_EDIT,i.a$.CODECOMMIT_REPOSITORY_NOTIFICATIONS,i.a$.CODECOMMIT_REPOSITORY_CREATE_NOTIFICATION_RULE,i.a$.CODECOMMIT_REPOSITORY_NOTIFICATIONS_EDIT,i.a$.CODECOMMIT_REPOSITORY_GURU_ASSOCIATIONS],selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.repositorySettings")}),children:[{route:i.a$.CODECOMMIT_REPOSITORY_TAGS_EDIT,selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:repositorySettingsShell.tab.repositoryTags")})}]},{route:i.a$.CODECOMMIT_REPOSITORY_LIST_PULL_REQUESTS,selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.listPullRequests")}),children:[{route:i.a$.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST,alsoMatch:[i.a$.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST_SET],selector:e=>({routeParams:[e.location.payload.repositoryName],text:(0,u.t)("codecommit:breadcrumbs.createPullRequest")})},{route:i.a$.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST,selector:e=>({routeParams:[e.location.payload.repositoryName,e.location.payload.pullRequestId],text:e.location.payload.pullRequestId}),children:[{route:i.a$.CODECOMMIT_REPOSITORY_EDIT_PULL_REQUEST,selector:e=>({routeParams:[e.location.payload.repositoryName,e.location.payload.pullRequestId],text:(0,u.t)("codecommit:breadcrumbs.editPullRequest")})},{route:i.a$.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST_COMMIT,selector:e=>({routeParams:[e.location.payload.repositoryName,e.location.payload.pullRequestId,e.location.payload.commitId],text:e.location.payload.commitId})},{route:i.a$.CODECOMMIT_REPOSITORY_MERGE_PULL_REQUEST,selector:e=>({routeParams:[e.location.payload.repositoryName,e.location.payload.pullRequestId],text:(0,u.t)("codecommit:viewPullRequest.actions.merge")})},{route:i.a$.CODECOMMIT_REPOSITORY_RESOLVE_PULL_REQUEST,selector:e=>({routeParams:[e.location.payload.repositoryName,e.location.payload.pullRequestId],text:(0,u.t)("codecommit:resolveConflicts.buttonLink")})},{route:i.a$.CODECOMMIT_CREATE_PULL_REQUEST_APPROVAL_RULE,selector:e=>({routeParams:[e.location.payload.repositoryName,e.location.payload.pullRequestId,e.location.payload.approvalRuleName],text:(0,u.t)("codecommit:breadcrumbs.createApprovalRule")})},{route:i.a$.CODECOMMIT_EDIT_PULL_REQUEST_APPROVAL_RULE,selector:e=>({routeParams:[e.location.payload.approvalRuleName],text:e.location.payload.approvalRuleName})}]}]}]}]}]},R=d({[i.a$.CODECOMMIT_HOME]:{route:"/codecommit/home",link:()=>"/codesuite/codecommit/home",service:a.Q_.codecommit},[i.a$.CODECOMMIT_START]:{route:"/codecommit/start",link:()=>"/codesuite/codecommit/start",service:a.Q_.codecommit,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODECOMMIT_REPOSITORIES]:{route:"/codecommit/repositories",link:()=>"/codesuite/codecommit/repositories",service:a.Q_.codecommit,componentHints:[i.a$.CODECOMMIT_REPOSITORY_BROWSE],options:{contentType:"table",helpPanelPath:"repo-list"}},[i.a$.CODECOMMIT_REPOSITORY_CREATE]:{route:"/codecommit/repository/create",link:()=>"/codesuite/codecommit/repository/create",service:a.Q_.codecommit,options:{contentType:"form",helpPanelPath:"create-repo"}},[i.a$.CODECOMMIT_REPOSITORY_LIST_TAGS]:{route:"/codecommit/repositories/:repositoryName/tags",link:e=>`/codesuite/codecommit/repositories/${e}/tags`,service:a.Q_.codecommit,options:{contentType:"table",helpPanelPath:"tags"}},[i.a$.CODECOMMIT_REPOSITORY_LIST_BRANCHES]:{route:"/codecommit/repositories/:repositoryName/branches",link:e=>`/codesuite/codecommit/repositories/${e}/branches`,service:a.Q_.codecommit,options:{contentType:"table",helpPanelPath:"branches"}},[i.a$.CODECOMMIT_REPOSITORY_LIST_PULL_REQUESTS]:{route:"/codecommit/repositories/:repositoryName/pull-requests",link:(e,t,o)=>{const i=(0,v.j)({status:t||void 0,author:o||void 0});return`/codesuite/codecommit/repositories/${e}/pull-requests?${S.stringify(i,{encode:!1})}`},service:a.Q_.codecommit,componentHints:[i.a$.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST,i.a$.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST],options:{contentType:"table",helpPanelPath:"pull-requests.list"}},[i.a$.CODECOMMIT_REPOSITORY_LIST_COMMITS]:{route:"/codecommit/repositories/:repositoryName/commits/:commitSpecifier*",link:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return""===t?`/codesuite/codecommit/repositories/${e}/commits`:`/codesuite/codecommit/repositories/${e}/commits/${t}`},service:a.Q_.codecommit,options:{contentType:"table",helpPanelPath:"commits"}},[i.a$.CODECOMMIT_REPOSITORY_GURU_ASSOCIATIONS]:{route:"/codecommit/repositories/:repositoryName/associations/view",link:e=>`/codesuite/codecommit/repositories/${e}/associations/view`,service:a.Q_.codecommit,disabled:!(0,c.G7)(b.H.CodeCommitGuruIntegration),options:{helpPanelPath:"settings.codeguru"}},[i.a$.CODECOMMIT_REPOSITORY_GRAPH_COMMITS]:{route:"/codecommit/repositories/:repositoryName/graph/:commitSpecifier*",link:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return""===t?`/codesuite/codecommit/repositories/${e}/graph`:`/codesuite/codecommit/repositories/${e}/graph/${t}`},service:a.Q_.codecommit,options:{helpPanelPath:"commits.visualizer"}},[i.a$.CODECOMMIT_REPOSITORY_BROWSE_PATH]:{route:"/codecommit/repositories/:repositoryName/browse/:commitSpecifier*/--/:path*",link:function(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return""===o?`/codesuite/codecommit/repositories/${e}/browse/${t}`:`/codesuite/codecommit/repositories/${e}/browse/${t}/--/${o}`},service:a.Q_.codecommit,options:{helpPanelPath:A.bU}},[i.a$.CODECOMMIT_REPOSITORY_BROWSE]:{route:"/codecommit/repositories/:repositoryName/browse/:commitSpecifier*",link:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return""===t?`/codesuite/codecommit/repositories/${e}/browse`:`/codesuite/codecommit/repositories/${e}/browse/${t}`},service:a.Q_.codecommit,componentHints:[i.a$.CODECOMMIT_REPOSITORY_LIST_PULL_REQUESTS,i.a$.CODECOMMIT_REPOSITORY_LIST_BRANCHES,i.a$.CODECOMMIT_REPOSITORY_LIST_COMMITS],options:{helpPanelPath:"browse-repo"}},[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE_PATH]:{route:"/codecommit/repositories/:repositoryName/files/:putFileVariant/:commitSpecifier*/--/:path*",link:function(e,t,o){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"";return`/codesuite/codecommit/repositories/${t}/files/${e}/${o}${i?`/--/${i}`:""}`},service:a.Q_.codecommit,options:{helpPanelPath:e=>{switch((0,y.y)(e).putFileVariant){case _.FA.edit:return"browse-repo.edit";case _.FA.upload:return"browse-repo.add";default:return"browse-repo.create"}}}},[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE]:{route:"/codecommit/repositories/:repositoryName/files/:putFileVariant/:commitSpecifier*",link:function(){return R[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE_PATH].link(...arguments)},service:a.Q_.codecommit,options:{helpPanelPath:e=>R[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE_PATH].options.helpPanelPath(e)}},[i.a$.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES]:{route:"/codecommit/repositories/:repositoryName/compare",link:e=>`/codesuite/codecommit/repositories/${e}/compare`,service:a.Q_.codecommit,options:{helpPanelPath:"commits.compare"}},[i.a$.CODECOMMIT_REPOSITORY_COMPARE_REFERENCES_SET]:{route:"/codecommit/repositories/:repositoryName/compare/:beforeCommitSpecifier*/.../:afterCommitSpecifier*",link:function(e){return`/codesuite/codecommit/repositories/${e}/compare/${arguments.length>1&&void 0!==arguments[1]?arguments[1]:""}/.../${arguments.length>2&&void 0!==arguments[2]?arguments[2]:""}`},service:a.Q_.codecommit,options:{helpPanelPath:"commits.compare.results"}},[i.a$.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST]:{route:"/codecommit/repositories/:repositoryName/pull-requests/new",link:e=>`/codesuite/codecommit/repositories/${e}/pull-requests/new`,service:a.Q_.codecommit,options:{helpPanelPath:"pull-requests"}},[i.a$.CODECOMMIT_REPOSITORY_CREATE_PULL_REQUEST_SET]:{route:"/codecommit/repositories/:repositoryName/pull-requests/new/:beforeCommitSpecifier*/.../:afterCommitSpecifier*",link:function(e){return`/codesuite/codecommit/repositories/${e}/pull-requests/new/${arguments.length>1&&void 0!==arguments[1]?arguments[1]:""}/.../${arguments.length>2&&void 0!==arguments[2]?arguments[2]:""}`},service:a.Q_.codecommit,options:{helpPanelPath:"pull-requests.create"}},[i.a$.CODECOMMIT_REPOSITORY_EDIT_PULL_REQUEST]:{route:"/codecommit/repositories/:repositoryName/pull-requests/edit/:pullRequestId",link:(e,t)=>`/codesuite/codecommit/repositories/${e}/pull-requests/edit/${t}`,service:a.Q_.codecommit,options:{helpPanelPath:"pull-requests.edit"}},[i.a$.CODECOMMIT_REPOSITORY_MERGE_PULL_REQUEST]:{route:"/codecommit/repositories/:repositoryName/pull-requests/:pullRequestId/merge",link:(e,t)=>`/codesuite/codecommit/repositories/${e}/pull-requests/${t}/merge`,service:a.Q_.codecommit,options:{helpPanelPath:"pull-requests.merge"}},[i.a$.CODECOMMIT_REPOSITORY_RESOLVE_PULL_REQUEST]:{route:"/codecommit/repositories/:repositoryName/pull-requests/:pullRequestId/resolve",link:(e,t)=>`/codesuite/codecommit/repositories/${e}/pull-requests/${t}/resolve`,service:a.Q_.codecommit,options:{helpPanelPath:"pull-requests.conflicts"}},[i.a$.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST]:{route:"/codecommit/repositories/:repositoryName/pull-requests/:pullRequestId/:tab?",link:function(e,t){return`/codesuite/codecommit/repositories/${e}/pull-requests/${t}/${arguments.length>2&&void 0!==arguments[2]?arguments[2]:O.D.details}`},service:a.Q_.codecommit,options:{helpPanelPath:"pull-requests.view"}},[i.a$.CODECOMMIT_REPOSITORY_VIEW_COMMIT]:{route:"/codecommit/repositories/:repositoryName/commit/:commitId",link:(e,t)=>`/codesuite/codecommit/repositories/${e}/commit/${t}`,service:a.Q_.codecommit,options:{helpPanelPath:"commits.view"}},[i.a$.CODECOMMIT_REPOSITORY_VIEW_PULL_REQUEST_COMMIT]:{route:"/codecommit/repositories/:repositoryName/pull-requests/:pullRequestId/commit/:commitId",link:(e,t,o)=>`/codesuite/codecommit/repositories/${e}/pull-requests/${t}/commit/${o}`,service:a.Q_.codecommit,options:{helpPanelPath:"commits.view"}},[i.a$.CODECOMMIT_CREATE_PULL_REQUEST_APPROVAL_RULE]:{route:"/codecommit/repositories/:repositoryName/pull-requests/:pullRequestId/approval-rule/create",link:(e,t)=>`/codesuite/codecommit/repositories/${e}/pull-requests/${t}/approval-rule/create`,service:a.Q_.codecommit,disabled:!(0,c.G7)(b.H.CodeCommitPullRequestApproval),options:{contentType:"form",helpPanelPath:"pull-requests.rule.create"}},[i.a$.CODECOMMIT_EDIT_PULL_REQUEST_APPROVAL_RULE]:{route:"/codecommit/repositories/:repositoryName/pull-requests/:pullRequestId/approval-rules/:approvalRuleName/edit",link:(e,t,o)=>`/codesuite/codecommit/repositories/${e}/pull-requests/${t}/approval-rules/${o}/edit`,service:a.Q_.codecommit,disabled:!(0,c.G7)(b.H.CodeCommitPullRequestApproval),options:{contentType:"form",helpPanelPath:"pull-requests.rule.edit"}},[i.a$.CODECOMMIT_REPOSITORY_SETUP_PUT_FILE]:{route:"/codecommit/repositories/:repositoryName/setup/:putFileVariant",link:(e,t)=>`/codesuite/codecommit/repositories/${e}/setup/${t}`,service:a.Q_.codecommit,options:{helpPanelPath:e=>R[i.a$.CODECOMMIT_REPOSITORY_PUT_FILE_PATH].options.helpPanelPath(e)}},[i.a$.CODECOMMIT_REPOSITORY_SETUP]:{route:"/codecommit/repositories/:repositoryName/setup",link:e=>`/codesuite/codecommit/repositories/${e}/setup`,service:a.Q_.codecommit,options:{helpPanelPath:"browse-repo.empty"}},[i.a$.CODECOMMIT_REPOSITORY_SETTINGS]:{route:"/codecommit/repositories/:repositoryName/settings",link:e=>`/codesuite/codecommit/repositories/${e}/settings`,service:a.Q_.codecommit,options:{helpPanelPath:"settings"}},[i.a$.CODECOMMIT_REPOSITORY_TAGS]:{route:"/codecommit/repositories/:repositoryName/repositoryTags",link:e=>`/codesuite/codecommit/repositories/${e}/repositoryTags`,service:a.Q_.codecommit,disabled:!(0,c.G7)(b.H.CodeCommitTagging),options:{helpPanelPath:"settings.tags"}},[i.a$.CODECOMMIT_REPOSITORY_TAGS_EDIT]:{route:"/codecommit/repositories/:repositoryName/repositoryTags/edit",link:e=>`/codesuite/codecommit/repositories/${e}/repositoryTags/edit`,service:a.Q_.codecommit,disabled:!(0,c.G7)(b.H.CodeCommitTagging),options:{helpPanelPath:"settings.tags.edit"}},[i.a$.CODECOMMIT_REPOSITORY_TRIGGERS]:{route:"/codecommit/repositories/:repositoryName/triggers",link:e=>`/codesuite/codecommit/repositories/${e}/triggers`,service:a.Q_.codecommit,options:{helpPanelPath:"settings.triggers"}},[i.a$.CODECOMMIT_REPOSITORY_TRIGGERS_CREATE]:{route:"/codecommit/repositories/:repositoryName/trigger/create",link:e=>`/codesuite/codecommit/repositories/${e}/trigger/create`,service:a.Q_.codecommit,options:{helpPanelPath:"settings.triggers.create"}},[i.a$.CODECOMMIT_REPOSITORY_TRIGGERS_EDIT]:{route:"/codecommit/repositories/:repositoryName/triggers/:triggerName/edit",link:(e,t)=>`/codesuite/codecommit/repositories/${e}/triggers/${t}/edit`,service:a.Q_.codecommit,options:{helpPanelPath:"settings.triggers.edit"}},[i.a$.CODECOMMIT_REPOSITORY_NOTIFICATIONS]:{route:"/codecommit/repositories/:repositoryName/notifications",link:e=>`/codesuite/codecommit/repositories/${e}/notifications`,service:a.Q_.codecommit,options:{helpPanelPath:"notifications.codecommit",helpPanelService:"dtconsole"}},[i.a$.CODECOMMIT_REPOSITORY_NOTIFICATIONS_EDIT]:{route:"/codecommit/repositories/:repositoryName/notifications/edit",link:e=>`/codesuite/codecommit/repositories/${e}/notifications/edit`,service:a.Q_.codecommit,options:{helpPanelPath:"settings.notifications"}},[i.a$.CODECOMMIT_CONNECT]:{route:"/codecommit/repositories/:repositoryName/connect",link:e=>`/codesuite/codecommit/repositories/${e}/connect`,service:a.Q_.codecommit,hideHelpPanel:!0},[i.a$.CODECOMMIT_REPOSITORY_CREATE_NOTIFICATION_RULE]:{route:"/codecommit/repository/:repositoryName/notifications/create",link:e=>`/codesuite/codecommit/repository/${e}/notifications/create`,service:a.Q_.codecommit,options:{contentType:"form",helpPanelPath:"notifications.codecommit.create",helpPanelService:"dtconsole"}},[i.a$.CODECOMMIT_REPOSITORY_EDIT_NOTIFICATION_RULE]:{route:"/codecommit/repository/:repositoryName/notifications/:notificationRule*/edit",link:(e,t)=>`/codesuite/codecommit/repository/${e}/notifications/${t}/edit`,service:a.Q_.codecommit,options:{contentType:"form",helpPanelPath:"notifications.codecommit.edit",helpPanelService:"dtconsole"}},[i.a$.CODECOMMIT_REPOSITORY_VIEW_NOTIFICATION_RULE]:{route:"/codecommit/repository/:repositoryName/notifications/:notificationRule*",link:(e,t)=>`/codesuite/codecommit/repository/${e}/notifications/${t}`,service:a.Q_.codecommit,options:{helpPanelPath:"notifications.codecommit",helpPanelService:"dtconsole"}},[i.a$.CODECOMMIT_APPROVAL_RULE_TEMPLATES]:{route:"/codecommit/approval-rule-templates",link:()=>"/codesuite/codecommit/approval-rule-templates",service:a.Q_.codecommit,options:{helpPanelPath:"approvalrule-templates"}},[i.a$.CODECOMMIT_CREATE_APPROVAL_RULE_TEMPLATE]:{route:"/codecommit/approval-rule-template/create",link:()=>"/codesuite/codecommit/approval-rule-template/create",service:a.Q_.codecommit,options:{contentType:"form",helpPanelPath:"approvalrule-templates.create"}},[i.a$.CODECOMMIT_EDIT_APPROVAL_RULE_TEMPLATE]:{route:"/codecommit/approval-rule-templates/:approvalRuleTemplateName/edit",link:e=>`/codesuite/codecommit/approval-rule-templates/${e}/edit`,service:a.Q_.codecommit,options:{contentType:"form",helpPanelPath:"approvalrule-templates.edit"}}},I),D={[i.a$.CODEPIPELINE_HOME]:{route:"/codepipeline/home",link:()=>"/codesuite/codepipeline/home",service:a.Q_.codepipeline,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODEPIPELINE_START]:{route:"/codepipeline/start",link:()=>"/codesuite/codepipeline/start",service:a.Q_.codepipeline,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODEPIPELINE_PIPELINES]:{route:"/codepipeline/pipelines",link:()=>"/codesuite/codepipeline/pipelines",service:a.Q_.codepipeline,componentHints:[i.a$.CODEPIPELINE_PIPELINE],options:{helpPanelPath:"hp-pipelines-list"}},[i.a$.CODEPIPELINE_PIPELINE]:{route:"/codepipeline/pipelines/:pipelineName/view",link:e=>`/codesuite/codepipeline/pipelines/${e}/view`,service:a.Q_.codepipeline,options:{helpPanelPath:"hp-pipeline-view"}}};var N=o(99794),P=o(51818),L=o(78265),w=o(95736),M=o(38022),k=o(73944);const U={route:i.a$.CODEDEPLOY_START,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.home")}),children:[{route:i.a$.CODEDEPLOY_DEPLOYMENTS,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.deployments")}),children:[{route:i.a$.CODEDEPLOY_DEPLOYMENT,selector:e=>{const t=(0,L.E8)(e);return{text:t,routeParams:[t]}},children:[{route:i.a$.CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENTS,selector:e=>{const t=(0,L.E8)(e),o=(0,k.Q)(e);return{text:o,routeParams:[t,o]}}},{route:i.a$.CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENT,selector:e=>{const t=(0,L.E8)(e),o=(0,k.Q)(e);return{text:(0,u.t)("codedeploy:breadcrumbs.instance.eventLogs"),routeParams:[t,o]}}}]}]},{route:i.a$.CODEDEPLOY_APPLICATIONS,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.applications")}),children:[{route:i.a$.CODEDEPLOY_APPLICATION_CREATE,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.createApplication")})},{route:i.a$.CODEDEPLOY_APPLICATION,selector:e=>{const t=(0,N.n7)(e);return{text:t,routeParams:[t]}},children:[{route:i.a$.CODEDEPLOY_DEPLOYMENT_CREATE,selector:e=>{const t=(0,N.n7)(e);return{text:(0,u.t)("codedeploy:breadcrumbs.createDeployment"),routeParams:[t]}}},{route:i.a$.CODEDEPLOY_REVISION,selector:e=>{const t=(0,N.n7)(e),o=(0,w.uG)(e);return{text:(0,l.truncate)(o,{length:100}),routeParams:[t,o]}}},{route:i.a$.CODEDEPLOY_DEPLOYMENT_GROUP_CREATE,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.createDeploymentGroup")})},{route:i.a$.CODEDEPLOY_DEPLOYMENT_GROUP,selector:e=>{const t=(0,N.n7)(e),o=(0,P.pW)(e);return{text:o,routeParams:[t,o]}},children:[{route:i.a$.CODEDEPLOY_DEPLOYMENT_GROUP_EDIT,selector:e=>{const t=(0,N.n7)(e),o=(0,P.pW)(e);return{text:o,routeParams:[t,o]}}}]}]}]},{route:i.a$.CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.deploymentConfigurations")}),children:[{route:i.a$.CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS_CREATE,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.createDeploymentConfigurations")})}]},{route:i.a$.CODEDEPLOY_ON_PREM_INSTANCES,selector:()=>({text:(0,u.t)("codedeploy:breadcrumbs.onPremInstances")}),children:[{route:i.a$.CODEDEPLOY_ON_PREM_INSTANCE,selector:e=>{const t=(0,M.v1)(e);return{text:t,routeParams:[t]}},children:[{route:i.a$.CODEDEPLOY_CREATE_ON_PREM_INSTANCE_TAGS,selector:e=>{const t=(0,M.v1)(e);return{text:(0,u.t)("codedeploy:breadcrumbs.onPremInstancesTags"),routeParams:[t]}}}]}]}]},B=d({[i.a$.CODEDEPLOY_APPLICATION]:{route:"/codedeploy/applications/:applicationName/:tab?",link:(e,t)=>t?`/codedeploy/applications/${e}/${t}`:`/codesuite/codedeploy/applications/${e}`,service:a.Q_.codedeploy,options:{helpPanelPath:"application-hp"}},[i.a$.CODEDEPLOY_APPLICATION_SETTINGS]:{route:"/codedeploy/applications/:applicationName/settings",link:e=>`/codesuite/codedeploy/applications/${e}/settings`,service:a.Q_.codedeploy,options:{helpPanelPath:"application-hp"}},[i.a$.CODEDEPLOY_APPLICATION_CREATE]:{route:"/codedeploy/application/new",link:()=>"/codesuite/codedeploy/application/new",service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"create-application-hp"}},[i.a$.CODEDEPLOY_APPLICATIONS]:{route:"/codedeploy/applications",link:()=>"/codesuite/codedeploy/applications",service:a.Q_.codedeploy,options:{contentType:"table",helpPanelPath:"applications-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENT_GROUP_CREATE]:{route:"/codedeploy/applications/:applicationName/deployment-groups/new",link:e=>`/codesuite/codedeploy/applications/${e}/deployment-groups/new`,service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"create-deployment-group-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENT_GROUP_EDIT]:{route:"/codedeploy/applications/:applicationName/deployment-groups/:deploymentGroupName/edit",link:(e,t)=>`/codesuite/codedeploy/applications/${e}/deployment-groups/${t}/edit`,service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"edit-deployment-group-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENT_CREATE]:{route:"/codedeploy/application/:applicationName/deployments/new",link:e=>`/codesuite/codedeploy/application/${e}/deployments/new`,service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"create-deployment-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENT]:{route:"/codedeploy/deployments/:deploymentId",link:e=>`/codesuite/codedeploy/deployments/${e}`,service:a.Q_.codedeploy,options:{helpPanelPath:"deployment-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENT]:{route:"/codedeploy/deployments/:deploymentId/instances/:instanceId*/logs/:lifecycleEventName?",link:(e,t,o)=>`/codesuite/codedeploy/deployments/${e}/instances/${t}/logs${o?`/${o}`:""}`,service:a.Q_.codedeploy,options:{helpPanelPath:"instance-activity-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENT_INSTANCE_EVENTS]:{route:"/codedeploy/deployments/:deploymentId/instances/:instanceId*",link:(e,t)=>`/codesuite/codedeploy/deployments/${e}/instances/${t}`,service:a.Q_.codedeploy,options:{helpPanelPath:"instance-activity-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENTS]:{route:"/codedeploy/deployments",link:()=>"/codesuite/codedeploy/deployments",service:a.Q_.codedeploy,options:{helpPanelPath:"deployments-hp",contentType:"table"}},[i.a$.CODEDEPLOY_DEPLOYMENT_GROUP]:{route:"/codedeploy/applications/:applicationName/deployment-groups/:deploymentGroupName",link:(e,t)=>`/codesuite/codedeploy/applications/${e}/deployment-groups/${t}`,service:a.Q_.codedeploy,options:{helpPanelPath:"deployment-group-hp"}},[i.a$.CODEDEPLOY_DEPLOYMENT_GROUP_TAGS_EDIT]:{route:"/codedeploy/application/:applicationName/deployment-groups/:deploymentGroupName/DeploymentGroupTags/edit",link:(e,t)=>`/codesuite/codedeploy/application/${e}/deployment-groups/${t}/DeploymentGroupTags/edit`,service:a.Q_.codedeploy,disabled:!(0,c.G7)(b.H.CodeDeployTagging),options:{helpPanelPath:"deployment-group-hp",contentType:"form"}},[i.a$.CODEDEPLOY_REVISION]:{route:"/codedeploy/applications/:applicationName/revisions/:revisionLocation*",link:(e,t)=>`/codesuite/codedeploy/applications/${e}/revisions/${t}`,service:a.Q_.codedeploy,options:{helpPanelPath:"revision-hp"}},[i.a$.CODEDEPLOY_ON_PREM_INSTANCE]:{route:"/codedeploy/on-premises-instances/:instanceName",link:e=>`/codesuite/codedeploy/on-premises-instances/${e}`,service:a.Q_.codedeploy,options:{helpPanelPath:"instance-onprem-hp"}},[i.a$.CODEDEPLOY_CREATE_ON_PREM_INSTANCE_TAGS]:{route:"/codedeploy/on-premises-instances/:instanceName/tags/new",link:e=>`/codesuite/codedeploy/on-premises-instances/${e}/tags/new`,service:a.Q_.codedeploy,options:{helpPanelPath:"instance-onprem-hp"}},[i.a$.CODEDEPLOY_ON_PREM_INSTANCES]:{route:"/codedeploy/on-premises-instances",link:()=>"/codesuite/codedeploy/on-premises-instances",service:a.Q_.codedeploy,options:{helpPanelPath:"instances-onprem-hp",contentType:"table"}},[i.a$.CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS]:{route:"/codedeploy/deployment-configs",link:()=>"/codesuite/codedeploy/deployment-configs",service:a.Q_.codedeploy,options:{helpPanelPath:"deployment-configurations-hp",contentType:"table"}},[i.a$.CODEDEPLOY_DEPLOYMENT_CONFIGURATIONS_CREATE]:{route:"/codedeploy/deployment-configs/new",link:()=>"/codesuite/codedeploy/deployment-configs/new",service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"create-deployment-configuration-hp"}},[i.a$.CODEDEPLOY_APPLICATION_TAGS]:{route:"/codedeploy/application/:applicationName/applicationTags",link:e=>`/codesuite/codedeploy/application/${e}/applicationTags`,service:a.Q_.codedeploy,options:{helpPanelPath:"application-tags-hp"}},[i.a$.CODEDEPLOY_APPLICATION_TAGS_EDIT]:{route:"/codedeploy/application/:applicationName/applicationTags/edit",link:e=>`/codesuite/codedeploy/application/${e}/applicationTags/edit`,service:a.Q_.codedeploy,options:{helpPanelPath:"application-tags-hp",contentType:"form"}},[i.a$.CODEDEPLOY_APPLICATION_NOTIFICATION_RULES]:{route:"/codedeploy/application/:applicationName/notifications",link:e=>`/codesuite/codedeploy/application/${e}/notifications`,service:a.Q_.codedeploy,options:{helpPanelPath:"notifications.codedeploy",helpPanelService:"dtconsole"}},[i.a$.CODEDEPLOY_APPLICATION_CREATE_NOTIFICATION_RULE]:{route:"/codedeploy/application/:applicationName/notifications/create",link:e=>`/codesuite/codedeploy/application/${e}/notifications/create`,service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"notifications.codedeploy.create",helpPanelService:"dtconsole"}},[i.a$.CODEDEPLOY_APPLICATION_EDIT_NOTIFICATION_RULE]:{route:"/codedeploy/applications/:applicationName/notifications/:notificationRule*/edit",link:(e,t)=>`/codesuite/codedeploy/applications/${e}/notifications/${t}/edit`,service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"notifications.codedeploy.edit",helpPanelService:"dtconsole"}},[i.a$.CODEDEPLOY_APPLICATION_VIEW_NOTIFICATION_RULE]:{route:"/codedeploy/applications/:applicationName/notifications/:notificationRule*",link:(e,t)=>`/codesuite/codedeploy/applications/${e}/notifications/${t}`,service:a.Q_.codedeploy,options:{contentType:"form",helpPanelPath:"notifications.codedeploy",helpPanelService:"dtconsole"}},[i.a$.CODEDEPLOY_GITHUB_OAUTH_INTEGRATION]:{route:"/codedeploy/oauth/github",link:()=>"/codesuite/codedeploy/oauth/github",service:a.Q_.codedeploy,hideHelpPanel:!0,options:{contentType:"immersive"}},[i.a$.CODEDEPLOY_HOME]:{route:"/codedeploy/home",link:()=>"/codesuite/codedeploy/home",service:a.Q_.codedeploy,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODEDEPLOY_START]:{route:"/codedeploy/start",link:()=>"/codesuite/codedeploy/start",service:a.Q_.codedeploy,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0}},U),G={[i.a$.CODEARTIFACT_HOME]:{route:"/codeartifact/home",link:()=>"/codesuite/codeartifact/home",service:a.Q_.codeartifact},[i.a$.CODEARTIFACT_START]:{route:"/codeartifact/start",link:()=>"/codesuite/codeartifact/start",service:a.Q_.codeartifact,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.CODEARTIFACT_DOMAINS]:{route:"/codeartifact/domains",link:()=>"/codesuite/codeartifact/domains",service:a.Q_.codeartifact,options:{contentType:"table",helpPanelPath:"domains-hp"}},[i.a$.CODEARTIFACT_REPOSITORIES]:{route:"/codeartifact/repositories",link:()=>"/codesuite/codeartifact/repositories",service:a.Q_.codeartifact,options:{contentType:"table",helpPanelPath:"repositories-hp"}},[i.a$.CODEARTIFACT_REPOSITORY]:{route:"/codeartifact/d/:domainOwner/:domainName/r/:repositoryName",link:(e,t,o)=>`/codesuite/codeartifact/d/${e}/${t}/r/${o}`,service:a.Q_.codeartifact,options:{contentType:"table",helpPanelPath:"repository-hp"}}};var W=o(12337);const x={[i.a$.HOME]:{route:"/home",link:()=>"/home",service:a.Q_.none,flush:!0,hideBreadcrumbs:!0,hideHelpPanel:!0},[i.a$.LOADING]:{route:"/home-loading",link:()=>"/home-loading",service:a.Q_.none},[W.p2]:{route:"/not-found",link:()=>"/not-found",service:a.Q_.none}},F={[i.a$.SETTINGS_NOTIFICATIONS]:{route:"/settings/notifications",link:()=>"/codesuite/settings/notifications",service:a.Q_.settings,options:{helpPanelPath:"notifications.general.view",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS]:{route:"/settings/connections",link:()=>"/codesuite/settings/connections",service:a.Q_.settings,options:{helpPanelPath:"hp-settings-connections",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_HOSTS]:{route:"/settings/connections/hosts",link:()=>"/codesuite/settings/connections/hosts",service:a.Q_.settings,options:{helpPanelPath:"hp-settings-connections-hosts",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_CREATE]:{route:"/settings/connections/create",link:()=>"/codesuite/settings/connections/create",service:a.Q_.settings,disabled:!(0,c.G7)(b.H.CodeStarConnectionsCommonLanding),options:{contentType:"immersive",helpPanelPath:"hp-settings-connections-create",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_EDIT]:{route:"/settings/:accountId/:region/connections/:connectionId/edit",link:(e,t,o)=>`/codesuite/settings/${e}/${t}/connections/${o}/edit`,service:a.Q_.settings,options:{contentType:"form",helpPanelPath:"hp-settings-connections-edit",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_VIEW_CONNECTION]:{route:"/settings/:accountId/:region/connections/:connectionId",link:(e,t,o)=>`/codesuite/settings/${e}/${t}/connections/${o}`,service:a.Q_.settings,options:{contentType:"immersive",helpPanelPath:"hp-settings-connections-view",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_EDIT_CONNECTION_TAGS]:{route:"/settings/:accountId/:region/connections/:connectionId/editTags",link:(e,t,o)=>`/codesuite/settings/${e}/${t}/connections/${o}/editTags`,service:a.Q_.settings,options:{contentType:"form",helpPanelPath:"hp-settings-connections-edit-tags",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_CREATE_HOST]:{route:"/settings/connections/hosts/new",link:()=>"/codesuite/settings/connections/hosts/new",service:a.Q_.settings,options:{contentType:"form",helpPanelPath:"hp-settings-connections-hosts-create",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_EDIT_HOST]:{route:"/settings/connections/hosts/:hostId/edit",link:e=>`/codesuite/settings/connections/hosts/${e}/edit`,service:a.Q_.settings,options:{contentType:"form",helpPanelPath:"hp-settings-connections-hosts-edit",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_VIEW_HOST]:{route:"/settings/connections/hosts/:hostId",link:e=>`/codesuite/settings/connections/hosts/${e}`,service:a.Q_.settings,options:{helpPanelPath:"hp-settings-connections-hosts-view",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_EDIT_HOST_TAGS]:{route:"/settings/connections/hosts/:hostId/editTags",link:e=>`/codesuite/settings/connections/hosts/${e}/editTags`,service:a.Q_.settings,options:{contentType:"form",helpPanelPath:"hp-settings-connections-edit-tags",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_REGISTER_HOST]:{route:"/settings/connections/hosts/:hostId/register",link:e=>`/codesuite/settings/connections/hosts/${e}/register`,service:a.Q_.settings,options:{contentType:"form"}},[i.a$.SETTINGS_CONNECTIONS_CREATE_LANDING_PAGE]:{route:"/settings/connections/create/:provider",link:e=>`/codesuite/settings/connections/create/${e}`,service:a.Q_.settings,disabled:!(0,c.G7)(b.H.CodeStarConnectionsCommonLanding),options:{helpPanelPath:"hp-settings-connections-create-installing",contentType:"form",helpPanelService:"dtconsole"}},[i.a$.SETTINGS_CONNECTIONS_REDIRECT_PAGE]:{route:"/settings/connections/redirect",link:()=>"/codesuite/settings/connections/redirect",service:a.Q_.settings}};var j=o(63411);const H="/codesuite/codebuild",z=200,V={...s,...T,...R,...D,...B,...G,...F,...x},Y=Object.keys(V),$={},q={};Y.forEach((e=>{V[e].disabled||($[e]={path:V[e].route,fromPath:decodeURIComponent},q[e]=V[e])})),j.LS.updateRoutes(H,$)},15599:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>c,C8:()=>r,qu:()=>s});var i=o(66480);let a=function(e){return e.SET_ALERTS="reducer/common/alerts/SET_ALERTS",e.CLEAR_ALERTS="reducer/common/alerts/CLEAR_ALERTS",e.CLEAR_ALERT="reducer/common/alerts/CLEAR_ALERT",e}({});const n=[],r=e=>({type:a.SET_ALERTS,payload:e}),s=e=>e.common.alerts,c=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments.length>1?arguments[1]:void 0;return(0,i.ED)(t)?n:t.type===a.SET_ALERTS?t.payload:t.type===a.CLEAR_ALERTS?n:t.type===a.CLEAR_ALERT?e.filter((e=>e.id!==t.payload)):e}},68351:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>u,em:()=>d,rT:()=>l});var i=o(52863),a=o(62219),n=o(63411);const r=new i.A({initialState:{isCriticalError:!1}}),{set:s,reducer:c}=r,l=e=>e.common.criticalError,d=(e,t)=>(n.LS.report({type:"CRIT_ERROR"}).error(e),s({e,message:t||(0,a.j)(e),isCriticalError:!0})),u=c},30420:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>b,Do:()=>u,IR:()=>h,Li:()=>p,X8:()=>m,o$:()=>y,q2:()=>g});var i=o(1081),a=o(2543),n=o(9377),r=o(66480),s=o(18562),c=o(62219);const l={};var d=function(e){return e.SET_FLASH="reducer/common/flashes/SET_FLASH",e.UPDATE_FLASH="reducer/common/flashes/UPDATE_FLASH",e.CLEAR_FLASH="reducer/common/flashes/CLEAR_FLASH",e.CLEAR_FLASHES="reducer/common/flashes/CLEAR_FLASHES",e}(d||{});const u=function(e,t){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return{type:d.SET_FLASH,payload:{key:e,persistRouteChange:o,messageDefinition:t}}},p=(e,t)=>{const o=(0,c.j)(t),i=(0,c.d)(t)?t.code:void 0;return m(e,{content:o,header:i})},m=(e,t)=>u(e,{header:t.header||(0,s.t)("common:error.header"),type:"error",...t}),h=(e,t)=>u(e,{header:t.header||(0,s.t)("common:success.header"),type:"success",...t}),y=e=>({type:d.CLEAR_FLASH,payload:e}),g=(0,i.Mz)((e=>e.common.flashes),(e=>Object.values(e).sort((0,n.l)((e=>e.dateCreated))))),E=function(e,t){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const{dismissible:i=!0}=t;return{key:e,persistRouteChange:o,messageDefinition:{...t,dismissible:i},dateCreated:new Date}},b=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0;if((0,r.ED)(t))return(0,r.al)(t)?l:(0,a.keyBy)(Object.values(e).filter((e=>e.persistRouteChange)),"key");switch(t.type){case d.SET_FLASH:return{...e,[t.payload.key]:E(t.payload.key,t.payload.messageDefinition,t.payload.persistRouteChange)};case d.CLEAR_FLASH:const o={...e};return delete o[t.payload],o;case d.CLEAR_FLASHES:return l}return e}},28790:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>u,r1:()=>s,rM:()=>l,rX:()=>d,uO:()=>c});var i=o(58470),a=o(66480);let n=function(e){return e.SET_LOADING="reducer/common/loading/SET_LOADING",e.RESET_LOADING="reducer/common/loading/RESET_LOADING",e}({});const r={},s=(0,i._)(n.SET_LOADING),c=(0,i._)(n.RESET_LOADING),l=(e,t)=>Boolean(e.common.loading[t]),d=e=>{const{dataSagaService:t,dataSagaName:o,dataSagaResource:i,dataSagaIdentifier:a}=e;return`${t}/${o}/${i}${null!=a?`/${a}`:""}`},u=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r,t=arguments.length>1?arguments[1]:void 0;const o=t.payload;if((0,a.ED)(t.payload))return{...r};switch(t.type){case n.SET_LOADING:return o?{...e,[o]:!0}:{...e};case n.RESET_LOADING:return{...e,[o]:!1};default:return{...e}}}},81535:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>d,FK:()=>s,GC:()=>l,Iy:()=>r,QN:()=>a,qw:()=>c}),o(17040);var i=o(66480);let a=function(e){return e.RESET_VISIBLE_MODAL_ID="reducer/common/modal/RESET_VISIBLE_MODAL_ID",e.SET_VISIBLE_MODAL_ID="reducer/common/modal/SET_VISIBLE_MODAL_ID",e}({});const n={id:""},r=()=>({type:a.RESET_VISIBLE_MODAL_ID}),s=e=>({type:a.SET_VISIBLE_MODAL_ID,payload:e}),c=(e,t)=>e.common.modal.id===t,l=e=>!!e.common.modal.id,d=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments.length>1?arguments[1]:void 0;if(t.type&&(0,i.ED)(t))return n;switch(t.type){case a.RESET_VISIBLE_MODAL_ID:return n;case a.SET_VISIBLE_MODAL_ID:return{id:t.payload}}return e}},69885:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>d,CZ:()=>c,VC:()=>l,X2:()=>a,Y0:()=>n});var i=o(66480);let a=function(e){return e.codedeployGitHub="codedeployGitHub",e.codestarGitHub="codestarGitHub",e.codestarConnectionsHostRegistration="codestarConnectionsHostRegistration",e.codestarConnectionsCreateConnection="codestarConnectionsCreateConnection",e.codestarConnectionsUpdateConnection="codestarConnectionsUpdateConnection",e.codestarAmazonDeveloper="codestarAmazonDeveloper",e.codestarJira="codestarJira",e.codePipelineThirdParty="codePipelineThirdParty",e.codePipelineGitHub="codePipelineGitHub",e.codePipelineServiceRole="codePipelineServiceRole",e.codePipelineBitbucket="codePipelineBitbucket",e.codePipelineBitbucketInstallation="codePipelineBitbucketInstallation",e.codePipelineGitHubEnterpriseServer="codePipelineGitHubEnterpriseServer",e.codePipelineGitLab="codePipelineGitLab",e}({}),n=function(e){return e.successful="successful",e.unsuccessful="unsuccessful",e.connecting="connecting",e.disconnected="disconnected",e.aborted="aborted",e}({}),r=function(e){return e.UPDATE_STATUS_BY_ID="reducer/common/oauth/UPDATE_STATUS_BY_ID",e.RESET_OAUTH="reducer/common/oauth/RESET_OAUTH",e}({});const s={},c=(e,t,o,i)=>({type:r.UPDATE_STATUS_BY_ID,payload:{id:e,status:t,message:o,payload:i}}),l=(e,t)=>e.common.oauth[t]||{},d=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments.length>1?arguments[1]:void 0;if((0,i.ED)(t))return s;switch(t.type){case r.UPDATE_STATUS_BY_ID:return{...e,[t.payload.id]:t.payload};case r.RESET_OAUTH:return s;default:return e}}},43558:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>s,dI:()=>r,uq:()=>n});var i=o(66480);const a={counter:0,startTime:performance.now()},n=e=>`$$pv-${e.common.pageView.counter}`,r=e=>e.common.pageView,s=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a,t=arguments.length>1?arguments[1]:void 0;return(0,i.ED)(t)?{counter:e.counter%Number.MAX_SAFE_INTEGER+1,startTime:window.performance.now()}:(0,i.ED)(t,!0)?{counter:e.counter,startTime:window.performance.now()}:e}},32162:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>y,JK:()=>p,di:()=>d,oh:()=>l,pW:()=>u,xg:()=>m});var i=o(1081),a=o(69003),n=o(69625),r=o(82264),s=function(e){return e.LIST_BUCKETS="LOADING_S3_LIST_BUCKETS",e.PUT_LIFECYCLE="LOADING_PUT_S3_BUCKET_LIFECYCLE",e.GET_LIFECYCLE="LOADING_GET_S3_BUCKET_LIFECYCLE",e.ADD_BUCKET="LOADING_S3_ADD_BUCKET",e}(s||{}),c=function(e){return e.Buckets="Buckets",e.Lifecycle="Lifecycle",e}(c||{});const l=()=>(0,n.F)({apiFn:()=>a.s3.listBuckets(),apiParams:{},loadingType:s.LIST_BUCKETS,loadingResource:c.Buckets}),d=e=>{let{id:t,expirationDays:o,prefix:i,tag:a,status:n="Enabled"}=e;const r={ID:t,Status:n,Expiration:{Days:o},Filter:{Prefix:i,Tag:a}};return JSON.parse(JSON.stringify(r))},u=(e,t)=>{const o={Bucket:e,LifecycleConfiguration:{Rules:t}};return(0,n.F)({apiFn:e=>a.s3.putBucketLifecycleConfiguration(e),apiParams:o,loadingType:s.PUT_LIFECYCLE,loadingResource:c.Lifecycle})},p=e=>{const t={Bucket:e};return(0,n.F)({apiFn:e=>a.s3.getBucketLifecycleConfiguration(e),apiParams:t,loadingType:s.GET_LIFECYCLE,loadingResource:c.Lifecycle})},m=(0,i.Mz)((e=>e.common.s3.buckets),r.Z),h={buckets:{}},y=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case`${s.LIST_BUCKETS}_SUCCESS`:const{Buckets:o}=t.response;if(o){const t=(0,r.v)("Name",o);return{...e,buckets:t}}return e;case s.ADD_BUCKET:return{buckets:{...e.buckets,[t.payload]:{Name:t.payload}}}}return e}},1710:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>d,KT:()=>c,Lx:()=>l,m6:()=>r,v9:()=>s});const i=new(o(52863).A)({initialState:{}}),{update:a,reducer:n}=i,r=(e,t)=>e.common.status[t]&&e.common.status[t].isReady,s=(e,t)=>e.common.status[t]&&e.common.status[t].error,c=(e,t)=>!s(e,t)&&!!r(e,t),l=(e,t)=>a({[e]:t}),d=n},77211:(e,t,o)=>{"use strict";o.d(t,{$g:()=>p,Ay:()=>E,W_:()=>d});var i=o(82960),a=o(1081),n=o(58470),r=o(66480);let s=function(e){return e.UPDATE_ACTIVE_STEP="reducer/common/wizard/UPDATE_ACTIVE_STEP",e.UPDATE_HAS_SUBMITTED="reducer/common/wizard/UPDATE_HAS_SUBMITTED",e.SET_ERROR_TEXT="reducer/common/wizard/SET_ERROR_TEXT",e.RESET_WIZARD="reducer/common/wizard/RESET_WIZARD",e}({});const c=!1,l={activeStep:0,hasSubmitted:c,errorText:""},d=((0,n._)(s.UPDATE_ACTIVE_STEP),(0,n._)(s.UPDATE_HAS_SUBMITTED),(0,n._)(s.SET_ERROR_TEXT)),u=((0,n._)(s.RESET_WIZARD),(0,a.Mz)((e=>e.common.wizard),(e=>e))),p=(0,a.Mz)(u,(e=>e.activeStep)),m=((0,a.Mz)(u,(e=>e.hasSubmitted)),(0,a.Mz)(u,(e=>e.errorText)),(0,a.Mz)(p,(e=>0!==e)),(0,n.e)(s.UPDATE_ACTIVE_STEP,0)),h=(0,n.e)(s.UPDATE_HAS_SUBMITTED,c),y=(0,n.e)(s.SET_ERROR_TEXT,""),g=(0,i.HY)({activeStep:m,hasSubmitted:h,errorText:y}),E=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0;return(0,r.ED)(t)||t.type===s.RESET_WIZARD?g(l,t):g(e,t)}},52863:(e,t,o)=>{"use strict";o.d(t,{A:()=>r});var i=o(66480);let a=function(e){return e.SET="reducers/common/keyValueSlice/SET",e.RESET="reducers/common/keyValueSlice/RESET",e.UPDATE="reducers/common/keyValueSlice/UPDATE",e}({}),n=0;const r=class{constructor(e){this.initialState=e.initialState,this.isClearedOnRouteAction=void 0===e.isClearedOnRouteAction||e.isClearedOnRouteAction,this.key=n,n+=1}update=e=>({key:this.key,type:a.UPDATE,payload:e});set=e=>({key:this.key,type:a.SET,payload:e});reset=()=>({key:this.key,type:a.RESET});reducer=(()=>{var e=this;return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e.initialState,o=arguments.length>1?arguments[1]:void 0;if(e.isClearedOnRouteAction&&(0,i.ED)(o))return e.initialState;if(o.key!==e.key)return t;switch(o.type){case a.SET:return o.payload;case a.RESET:return e.initialState;case a.UPDATE:return{...t,...o.payload}}return t}})()}},58470:(e,t,o)=>{"use strict";o.d(t,{_:()=>i,e:()=>a});const i=e=>t=>({type:e,payload:t}),a=(e,t)=>function(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t,i=arguments.length>1?arguments[1]:void 0;const{payload:a}=i;return i.type===e?a:o}},61088:(e,t,o)=>{"use strict";o.d(t,{Q$:()=>s,Qu:()=>n,XU:()=>c,_7:()=>l,qE:()=>r});var i=o(43786),a=o(68351);let n=function(e){return e.AS_EFFECT="sagas/common/effectAction/AS_EFFECT",e.AS_CANCELLABLE_EFFECT="sagas/common/effectAction/AS_CANCELLABLE_EFFECT",e}({});const r=e=>({type:n.AS_EFFECT,payload:e}),s=e=>({type:n.AS_CANCELLABLE_EFFECT,payload:e});function*c(e){try{yield e.payload}catch(e){yield(0,i.yJ)((0,a.em)(e))}}function*l(e){return yield(0,i.Q7)(e.map((e=>(0,i.T1)((function*(){try{return yield e}catch(e){return e}})))))}},69625:(e,t,o)=>{"use strict";o.d(t,{F:()=>a,Z:()=>n});var i=o(43786);const a=e=>{const{apiFn:t,apiParams:o,loadingType:i,loadingResource:a,loadingId:n}=e;return{type:"PERFORM_FETCH",payload:{apiFn:t,apiParams:o,loadingInfo:{type:i,payload:{resource:a,id:n}}}}};function*n(e){const{apiFn:t,apiParams:o,loadingInfo:a}=e.payload,{type:n,payload:r}=a,{resource:s,id:c}=r;try{yield(0,i.yJ)({type:n,payload:{resource:s,id:c}});const e=yield(0,i.T1)((()=>t(o).promise()));return yield(0,i.yJ)({response:e,type:`${n}_SUCCESS`}),e}catch(e){throw yield(0,i.yJ)({type:`${n}_FAIL`,message:e.message}),e}}},35820:(e,t,o)=>{"use strict";o.d(t,{Ay:()=>g,sH:()=>l,wt:()=>h});var i=o(27701),a=o(43786),n=o(66480),r=o(13651);const s=15e3,c="common/store/sagas/poll/cancel",l=(e,t)=>({type:c,payload:{id:e,callback:t}}),d=(e,t)=>e.type===c&&e.payload.id===t;function*u(e,t,o,i,n){for(;;)if(yield(0,a.s)(e))return yield(0,r.hY)(n),void(yield(0,a.cH)(p,e,t,o,i,n))}function*p(e,t,o,i,n){for(;;)if(!(yield(0,a.s)(e)))return yield(0,a.cH)(h,t,o,i,n),void e.close()}const m=new Set;function h(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s,r=arguments.length>3?arguments[3]:void 0,c=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];return function*(){try{var s;if(m.has(t))return;m.add(t),c&&(yield e);const l=(0,i.Od)((e=>{const t=()=>{document.hidden?e(!0):e(!1)};return document.addEventListener("visibilitychange",t),()=>{document.removeEventListener("visibilitychange",t)}})),{cancelPoll:p}=yield(0,a.O4)({cancelPoll:(0,a.s)((e=>d(e,t))),routeChange:(0,a.s)((e=>(0,n.ED)(e))),windowHidden:(0,a.T1)(u,l,e,t,o,r),poll:(0,a.T1)(y,e,o,r)});m.delete(t),null!=p&&null!==(s=p.payload)&&void 0!==s&&s.callback&&p.payload.callback()}catch(e){return}}()}function*y(e,t,o){for(;;)try{yield(0,a.cb)(t),yield(0,r.N5)(o,!0),yield e}catch(e){}finally{yield(0,r.N5)(o,!1)}}const g=h},13651:(e,t,o)=>{"use strict";o.d(t,{Gn:()=>p,N5:()=>d,W0:()=>l,f7:()=>s,hY:()=>u,wy:()=>r});var i=o(43786),a=o(1710),n=o(15599);const r=e=>(0,i.yJ)((0,a.Lx)(e,void 0)),s=e=>(0,i.yJ)((0,a.Lx)(e,{isReady:!0})),c=(e,t)=>(0,i.Q7)([(0,i.yJ)((0,a.Lx)(e,t)),(0,i.yJ)((0,n.C8)([t]))]),l=(e,t)=>(0,i.yJ)((0,a.Lx)(e,{error:t,isReady:!0})),d=(e,t)=>(0,i.yJ)((0,a.Lx)(e,{isFetching:t})),u=e=>(0,i.yJ)((0,a.Lx)(e,{isPaused:!0}));function*p(e,t){try{yield e}catch(e){return void(yield c(t,e))}yield s(t)}},89327:(e,t,o)=>{"use strict";o(59848);var i=o(25892);o.p=i.tb.getCdnUrl(i.tb.getCustomContext("mainAssetPath"))+"/",o(78624);var a=o(7474),n=o(50389),r=o(63411),s=o(18562),c=o(75557),l=o(87267),d=o(86968),u=o(75383);var p=o(59132),m=o(96540);class h{fieldsToTrim={UserAgent:256,SdkException:128,SdkExceptionMessage:0,AwsException:128,AwsExceptionMessage:0,FinalSdkException:128,FinalSdkExceptionMessage:0,FinalAwsException:128,FinalAwsExceptionMessage:0};constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{clientId:"",enabled:!1};this.options=e,void 0!==this.options.clientId&&this.options.clientId.length>255&&(this.options.clientId=this.options.clientId.substr(0,255))}trimFields(e){const t=Object.keys(this.fieldsToTrim);for(const o of t)if(e.hasOwnProperty(o)){const t=this.fieldsToTrim[o],i=e[o];i&&i.length>t&&(e[o]=i.substr(0,t))}return e}eventHandler(e){this.options.enabled&&(e.ClientId=this.options.clientId,this.trimFields(e))}publishDatagram(e){}getClient(){}destroyClient(){}}var y=o(60739);var g=o(91501);(async()=>{try{try{(0,a.n_)()}catch(e){throw r.LS.error("Failed to initalize dynamic features",String(e)),e}p.Service.prototype.publisher=new h({enabled:!0}),p.Service.prototype.customRequestHandler=e=>{e.on("extractError",(e=>{if("Unauthorized"===e.httpResponse.statusMessage&&401===e.httpResponse.statusCode)throw y.W.error(m.createElement("span",null),"401_ExpiredSession")}))},await(0,s.IZ)();const e=await(async()=>{const e=document.documentElement.lang,t="en"===e?[u.default]:await function(e){for(const t of(0,d.r)(e))switch(t.toLowerCase()){case"de":return o.e(3883).then(o.bind(o,43883)).then((e=>[e.default]));case"en-gb":return o.e(5025).then(o.bind(o,5025)).then((e=>[e.default]));case"en":return Promise.resolve().then(o.bind(o,75383)).then((e=>[e.default]));case"es":return o.e(5012).then(o.bind(o,75012)).then((e=>[e.default]));case"fr":return o.e(880).then(o.bind(o,80880)).then((e=>[e.default]));case"id":return o.e(261).then(o.bind(o,90261)).then((e=>[e.default]));case"it":return o.e(2453).then(o.bind(o,92453)).then((e=>[e.default]));case"ja":return o.e(6229).then(o.bind(o,16229)).then((e=>[e.default]));case"ko":return o.e(626).then(o.bind(o,80626)).then((e=>[e.default]));case"pt-br":return o.e(1617).then(o.bind(o,61617)).then((e=>[e.default]));case"th":return o.e(6064).then(o.bind(o,76064)).then((e=>[e.default]));case"tr":return o.e(7602).then(o.bind(o,37602)).then((e=>[e.default]));case"zh-cn":return o.e(5502).then(o.bind(o,85502)).then((e=>[e.default]));case"zh-tw":return o.e(1178).then(o.bind(o,51178)).then((e=>[e.default]))}return l.y&&(0,c.mc)("importMessages",`Unknown locale "${e}" provided to importMessages`),Promise.resolve([])}(e);return{locale:e,messages:t}})(),t=Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(8080)]).then(o.bind(o,88792)),i=Promise.all([o.e(8096),o.e(3827),o.e(774),o.e(1666),o.e(5673),o.e(6717),o.e(1714),o.e(3688),o.e(4023),o.e(542),o.e(2199),o.e(6862),o.e(1951),o.e(3577),o.e(6303),o.e(9039)]).then(o.bind(o,78580));try{const{parseRoute:e}=o(13508);n.R[e()].component()}catch(e){throw r.LS.error("Initial route exception",String(e)),e}await(0,g.TY)();const[{default:E},{renderApp:b}]=await Promise.all([t,i]);if(document.getElementById("app"))b(E,n.R,e);else{if("loading"!==document.readyState)throw r.LS.error("Invalid DOM state at bootstrap"),new Error("Invalid DOM state at bootstrap");document.addEventListener("DOMContentLoaded",(()=>b(E,n.R,e)))}}catch(e){(document.querySelector("#c")||document.body).innerHTML=(0,s.t)("common:error.generalError"),r.LS.error("Application failed to bootstrap",String(e))}})()},11596:(e,t,o)=>{"use strict";o.d(t,{I:()=>i});const i=(e,t)=>{if(""===e)return"";const o=e.indexOf("{{"),a=e.indexOf("}}");if(o>-1&&a>o){const n=e.substring(o,a+2),r=e.substring(a+2,e.length);let s=t(e.substring(0,o))+n;return s+=i(r,t),s}return t(e)}},18562:(e,t,o)=>{"use strict";o.d(t,{IZ:()=>d,t:()=>u});var i=o(40675),a=o(17288),n=o(11596),r=o(65975),s=o(7474),c=o(89221);const l=(0,o(84923).JF)(),d=async()=>{let e,t={};const d="global";t={en:o(10870).default};try{e=(0,r.k)("awsc-mezz-locale"),e="zh"===e?"zh_CN":e;const i="en"!==e?await o(48171)(`./${e}/index`):null;null!==i&&e&&(t={...t,[e]:i.default})}catch(e){}return await i.Ay.use(a.r9).use({type:"postProcessor",name:"AWSChinaRebrandUtil",process:e=>(0,s.G7)(c.H.ChinaRebrandStringReplace)?(0,n.I)(e,l.processString):e}).init({postProcess:["AWSChinaRebrandUtil"],lng:e,fallbackLng:"en",defaultNS:d,fallbackNS:d,ns:d,resources:{...t},saveMissing:!0,missingKeyHandler:(e,t,o)=>{try{throw new Error(`Missing localization key ${e} ${t}, ${o}`)}catch(e){}},debug:!1,interpolation:{escapeValue:!1}}),t},u=i.Ay.t},10870:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>i});const i={codeartifact:{...JSON.parse('{"breadcrumbs":{"home":"CodeArtifact","domains":"Domains","domain":"{{domainName}}","domainPolicy":"Domain policy","domainEdit":"Edit domain","repositories":"Repositories","repository":"{{repositoryName}}","editRepository":"Edit repository","versions":"Versions","createRepository":"Create repository","createRepositoryWithExternalConnection":"Create a repository with an external connection","createDomain":"Create domain","gettingStarted":"Create domain and repository","repositoryPolicy":"Repository policy","package":{"versions":"{{packageName}}","edit":"Edit"}},"beta":{"banner":{"header":"Thanks for participating in CodeArtifact\'s beta!","content":"Please send us your feedback using the \\"Feedback\\" link in the bottom left of your browser window, or send us email at <0>{{email}}</0>."}},"navigation":{"serviceName":"CodeArtifact","commonName":"Artifacts","repositories":"Repositories","domains":"Domains","domain":"Domain","repository":"Repository"},"goto":{"repository":{"tags":{"domain":"{{domainName}} domain"}}},"servicePage":{"serviceStatus":"Preview","serviceCategory":"Developer Tools","serviceName":"AWS CodeArtifact","oneSentenceSummary":"Secure, scalable, and cost-effective artifact management","shortServiceDescription":"AWS CodeArtifact is a fully managed artifact repository service that makes it easy for organizations of any size to securely store, publish, and share software packages used in their software development process.","quickLaunchHeader":"Create AWS CodeArtifact domain and repository","quickLaunchBody":"Start with AWS CodeArtifact by creating your first domain and repository to securely store, publish, and share software packages.","quickLaunchButtonLabel":"Create domain and repository","quickLaunchHeaderAlt":"Create AWS CodeArtifact repository","quickLaunchBodyAlt":"Start with AWS CodeArtifact by creating your first repository to securely store, publish, and share software packages.","quickLaunchButtonLabelAlt":"Create repository","pricingBody":"AWS CodeArtifact has a simple pay-as-you-go pricing. There are no upfront fees or license costs. You pay only for the software packages stored, the number of requests made, and the data transferred out of an AWS Region.","pricingCallToAction":"Learn more","pricing":{"storage":{"free":"First {{amount}} GB-month stored across all regions is free.","start":"{{price}} for first {{amount}} GB-month.","between":"{{price}} between {{startAmount}} and {{endAmount}} GB-month.","end":"{{price}} per GB-month thereafter."},"requests":{"productFamily":"Requests","free":"First {{amount}} requests across all regions are free.","start":"{{price}} for first {{amount}} requests.","between":"{{price}} between {{startAmount}} and {{endAmount}} requests.","end":"{{price}} per {{amount}} requests thereafter."},"dataTransfer":{"header":"Data transfer","link":"Learn more about AWS CodeArtifact data transfer pricing."}},"gettingStartedSectionHeader":"Getting started","gettingStartedResourceOne":"What is AWS CodeArtifact?","gettingStartedResourceTwo":"Getting started with AWS CodeArtifact","gettingStartedResourceThree":"Working with domains in AWS CodeArtifact","gettingStartedResourceFour":"Working with repositories in AWS CodeArtifact","howItWorksSectionHeader":"How it works","howItWorksImageAltText":"A diagram showing AWS CodeArtifact usage in three major steps. First, customers pull artifacts from common public repositories like NPM or Maven. Second, those artifacts are saved in a CodeArtifact domain and repository. Lastly, those artifacts are shared and installed by developers and build systems.","howItWorksModalLabel":"Image too small?","howItWorksModalButtonText":"Expand","benefitsSectionHeader":"Benefits and features","benefitOneTitle":"Use common package managers and build tools","benefitOneDescription":"CodeArtifact works with commonly used package managers and build tools like Maven, Gradle, npm, Yarn, Twine, and pip, making it easy to integrate into existing development workflows.","benefitTwoTitle":"Securely store and share artifacts","benefitTwoDescription":"CodeArtifact integrates with AWS Key Management Service (KMS) to provide encrypted storage. CodeArtifact supports AWS IAM, so IT leaders can grant the appropriate level of access to different teams across their AWS accounts.","benefitThreeTitle":"Reduce operational overhead","benefitThreeDescription":"CodeArtifact is a fully managed service, eliminating the need to set up and operate the infrastructure required to manage artifact repositories. CodeArtifact is highly available and scales to meet the needs of organizations of all sizes.","benefitFourTitle":"Pay as you go","benefitFourDescription":"With CodeArtifact, there are no upfront fees or licensing costs for features that you don’t use. You pay only for the software packages stored, the number of requests made, and the data transferred out of an AWS Region.","useCasesSectionHeader":"Use cases","useCaseOne":{"title":"Consume packages from public artifact repositories","description":"You can configure CodeArtifact to fetch software packages from public repositories such as npm registry, Maven Central Repository, and Python Package Index (PyPI) with just a few clicks. CodeArtifact automatically downloads and stores application dependencies from these repositories, so recent versions are always available to your developers and CI/CD systems."},"useCaseTwo":{"title":"Publish and share packages","description":"You can use your existing package managers such as npm, Yarn, pip, Twine, and mvn to publish packages developed within your organization. Development teams can save time by retrieving packages published to and shared in a central organizational repository, rather than creating their own."},"useCaseThree":{"title":"Approve packages for use and audit package usage","description":"You can approve packages for use by building automated workflows using CodeArtifact APIs and AWS EventBridge. Integration with AWS CloudTrail gives leaders visibility into which packages are in use and where, making it easy to identify packages that need to be updated or removed."},"relatedServicesSectionHeader":"Related services","relatedServiceOneTitle":"AWS CodeBuild","relatedServiceOneDescription":"AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy.","relatedServiceTwoTitle":"AWS Identity and Access Management (IAM)","relatedServiceTwoDescription":"AWS Identity and Access Management (IAM) enables you to manage access to AWS services and resources securely.","relatedServiceThreeTitle":"AWS Key Management Service (KMS)","relatedServiceThreeDescription":"AWS Key Management Service (KMS) makes it easy for you to create and manage cryptographic keys and control their use across a wide range of AWS services and in your applications."},"policy":{"examples":{"governanceType":{"label":"Governance type","iam":"AWS IAM principal","awsorgs":"AWS Organizations principal"}}},"createRepository":{"formHeader":"Create Repository"},"deleteRepository":{"flash":{"success":{"message":"Successfully deleted {{repositoryName}} from {{domainName}}."}}},"domains":{"tableHeader":"Domains","empty":{"header":"No domains in region {{region}} for account {{account}} to display.","content":"You can create a domain below or <0></0>.","link":"learn more about using CodeArtifact domains across accounts"},"actions":{"createDomain":"Create domain","delete":"Delete domain"},"th":{"name":"Domain name","owner":"Domain owner","dataStored":"Data stored","encryptionKey":"Encryption key","createdTime":"Date created"}},"domain":{"actions":{"edit":"Edit","delete":"Delete domain","applyPolicy":"Apply domain policy","editPolicy":"Edit domain policy"},"details":{"title":"Details","show":"Domain owner, policy, data stored, ARN, encryption key ARN, and S3 bucket ARN.","showWithTags":"Domain owner, policy, data stored, tags, ARN, encryption key ARN, and S3 bucket ARN.","owner":{"title":"Domain owner"},"policy":{"title":"Domain policy","applied":"Domain policy applied.","edit":"Edit domain policy.","unapplied":"No domain policy applied.","apply":"Apply a new policy."},"key":{"title":"Encryption key ARN"},"arn":{"title":"Domain ARN"},"s3Arn":{"title":"S3 bucket ARN"},"storage":{"title":"Data stored"},"tags":{"title":"Domain tags","add":"Add domain tags.","count":"{{count}} tag.","count_plural":"{{count}} tags.","edit":"View and edit domain tags."}},"repositories":{"title":"Repositories","empty":{"header":"No repositories in this domain.","content":"A CodeArtifact repository gives you access to your artifacts through your favorite package managers."},"th":{"name":"Repository name","description":"Repository description","administrator":"Repository administrator"},"actions":{"delete":"Delete repository","configureEnvironment":"View connection instructions","create":"Create","createRepo":"Create repository","createRepoWithExternalConnection":"Create repository with external connection"}},"policy":{"header":"Domain policy","examples":{"header":"Example policies","description":"Contributor and full domain access.","tabs":{"contributorAccess":"Contributor domain access","fullAccess":"Full domain access"},"more":{"header":"More information","actions":"For a full list of available actions, browse the <0></0>.","actionsLinkText":"AWS CodeArtifact permissions reference","policies":"For more examples, read through <0></0> in the AWS documentation.","policiesLinkText":"Domain policies"}},"form":{"cancel":"Cancel","save":"Save","success":"Successfully saved your domain\'s policy."},"editor":{"header":"Edit domain policy","description":"A domain policy gives you the ability to specify which actions other AWS accounts and organizations can perform on your domain."},"delete":{"header":"Delete policy","prompt":"This deletes the policy applied to this domain and cannot be undone.","button":"Delete policy"}}},"repositories":{"pageHeader":"Repositories","empty":{"header":"No repositories in region {{region}} for account {{account}} to display.","content":"You can create a repository below or <0></0>.","link":"learn more about using CodeArtifact repositories across accounts"},"actions":{"createRepository":"Create repository","edit":"Edit","delete":"Delete repository"},"th":{"name":"Repository name","group":"Domain","owner":"Domain owner","description":"Repository description"},"inAccount":{"tabHeader":"Repositories in account","tableHeader":"Repositories"},"sharedWith":{"tabHeader":"Repositories shared with account","tableHeader":"Shared repositories","shared":{"description":"The Amazon shared npm repository contains all acceptably-licensed npm packages published to https://npmjs.org."}}},"repository":{"external":"Connected to public repository","actions":{"connect":"Connect","configureEnvironment":"View connection instructions","editRepository":"Edit","applyRepositoryPolicy":"Apply repository policy","editRepositoryPolicy":"Edit repository policy","editTags":"Edit tags"},"environment":{"pypi":"pip and Twine"},"details":{"title":"Details","show":"Domain, policy, ARN, and {{connectionType}}.","showWithTags":"Domain, policy, tags, ARN, and {{connectionType}}.","connectionType":{"externalConnection":"external connection","upstreams":"upstream repositories"},"repoGroup":{"title":"Domain"},"upstreams":{"upstreamList":"Upstream repositories","externalConnectionsList":"External connection","none":"No upstream repositories.","noneLinkText":"Add upstream repositories.","editLinkText":"Edit upstream repositories."},"policy":{"title":"Repository policy","applied":"Repository policy applied.","edit":"Edit repository policy.","unapplied":"No repository policy applied.","apply":"Apply a repository policy."},"tags":{"title":"Repository tags","add":"Add repository tags.","count":"{{count}} tag.","count_plural":"{{count}} tags.","edit":"View and edit repository tags."},"arn":{"title":"Repository ARN","copy":"Copy repository ARN","copied":"Repository ARN copied"},"connect":{"title":"View connection instructions","OS":"Operating system","description":"If your AWS CLI is configured, use get-authorization-token to refresh your authorization token","cli":{"body":"Before you can connect to this repository, you must <0></0> and configure your AWS credentials.","linkText":"install the AWS CLI"},"copy":"Copy","authtoken":{"refresh":"Refresh authorization token (token expires in 12 hours)","description":"If your AWS CLI is not configured, copy a new CodeArtifact-managed authorization token","copy":"Copy authorization token"},"npm":{"title":"Recommended method: configure using AWS CLI","login":"Step 3: Configure your npm client using this AWS CLI CodeArtifact command.","loginDescription":"The login command fetches an authorization token that lasts 12 hours from CodeArtifact using your AWS credentials. It configures npm for use with CodeArtifact by editing the {{path}} file to set the npm registry to the repository specified by the <0>{{repository}}</0> option. For npm 6 and lower, it also adds <0>{{alwaysAuth}}</0> so the authorization token is sent for every npm command.","manual":{"title":"Manual method: push to and pull from your repository","stepOne":"Step 3: Export a CodeArtifact authorization token for authorization to your repository from your preferred shell.","stepOneDescription":"The token expires in 12 hours.","stepOneWindows":"Step 3: Export a CodeArtifact authorization token for authorization to your repository using the default Windows command shell.","stepTwo":"Step 4: Copy the configuration into your home directory ({{path}}) or project .npmrc file. If the .npmrc file does not exist, create one."}},"yarn":{"1x":{"title":"Configure Yarn 1.X using AWS CLI","stepOne":"Step 3: Configure your Yarn client using this AWS CLI CodeArtifact command.","stepOneDescription":"The login command fetches an authorization token that lasts 12 hours from CodeArtifact using your AWS credentials. It configures npm for use with CodeArtifact by editing the {{path}} file to set the npm registry to the repository specified by the <0>{{repository}}</0> option. For npm 6 and lower, it also adds <0>{{alwaysAuth}}</0> so the authorization token is sent for every npm command.","stepTwo":"Step 4: For npm 7.X and 8.X, open your {{path}} file in a text editor and add <0>{{alwaysAuth}}</0> on a new line.","stepTwoDescription":"If you are using npm 6 or lower, this is already added in Step 3 when you run the AWS CLI command. You can use the <0>{{configList}}</0> command to verify that Yarn is using the correct configuration."},"2x":{"title":"Configure Yarn 2.X or higher using the config set command","stepOne":"Step 3: Update the npmRegistryServer value in your .yarnrc.yml file with your repository endpoint.","stepTwo":"Step 4: Export a CodeArtifact authorization token for authorization to your repository from your preferred shell.","stepTwoWindows":"Step 4: Export a CodeArtifact authorization token for authorization to your repository using the default Windows command shell.","stepTwoDescription":"The token expires in 12 hours.","stepThree":"Step 5: Use the Yarn config set command to add your CodeArtifact authentication token to your .yarnrc.yml file.","stepFour":"Step 6: Use the Yarn config set command to set the value of npmAlwaysAuth to true."}},"swift":{"version":{"warning":"In order to connect, Swift version 5.7 or higher must be used."},"manual":{"title":"Push and pull from your repository","stepOne":"Step 3: Generate a CodeArtifact authorization token for authorization to your repository from your preferred shell. Copy the results of the AWS command.","stepOneDescription":"The password is a standard CodeArtifact-managed authorization token that expires in 12 hours.","stepTwo":"Step 4: Copy the below configuration into your home directory ({{path}}) to your .netrc file. If the .netrc file does not exist, create one. Replace ${CODEARTIFACT_AUTH_TOKEN} with the entire authorization token printed in Step 3.","stepThree":"Step 5: Open {{path}} and add CodeArtifact as a registry."}},"pypi":{"title":"Recommended method: configure using AWS CLI","stepOne":{"title":"Step 3: Configure your pip client using this AWS CLI CodeArtifact command."},"stepOneDescription":"The login command fetches an authorization token from CodeArtifact using your AWS credentials and lasts 12 hours. It configures pip for use with CodeArtifact by editing {{path}} to set the <0>{{index}}</0> to the repository specified by the <0>{{repository}}</0> option.","pulling":{"setup":"Manual method: pull from your repository with pip","stepOne":"Step 3: Fetch a new authorization token using the AWS CLI.","stepOneWindows":"Step 3: Export a CodeArtifact authorization token for authorization to your repository using the default Windows command shell.","stepOneDescription":"The token expires in 12 hours.","stepTwo":"Step 4: Set the CodeArtifact registry URL and credentials using pip config.","stepTwoDescription":"Use <0>{{pipConfig}}</0> to set the CodeArtifact registry URL and credentials. The following command will update the system-wide configuration file. To update the current environment configuration file only, replace <0>{{global}}</0> with <0>{{site}}</0>."}},"twine":{"stepOne":"Step 3: Configure your twine client using this AWS CLI CodeArtifact command.","stepOneDescription":"The login command fetches an authorization token from CodeArtifact using your AWS credentials and lasts 12 hours. It configures pip for use with CodeArtifact by editing {{path}} to set the <0>{{index}}</0> to the repository specified by the <0>{{repository}}</0> option.","pushing":{"setup":"Manual method: push to your repository with Twine and .pypirc","stepOne":"Step 3: Open {{path}} in your editor of choice and add an index server for CodeArtifact, including the repository name, username, and password.","stepTwoDescription":"The password is a standard CodeArtifact-managed authorization token that expires in 12 hours."},"alternative":{"setup":"Manual method: push to your repository with Twine and environment variables","stepOne":"Step 3: Set environment variable TWINE_USERNAME with \\"aws\\".","stepTwo":"Step 4: Set environment variable TWINE_PASSWORD with your temporary authorization token.","stepTwoDescription":"The token expires in 12 hours.","stepThree":"Step 5: Set environment variable TWINE_REPOSITORY_URL with your repository\'s URL."}},"maven":{"title":"Pull from your repository","stepOne":"Step 3: Export a CodeArtifact authorization token for authorization to your repository from your preferred shell.","stepOneWindows":"Step 3: Export a CodeArtifact authorization token for authorization to your repository using the default Windows command shell.","stepOneDescription":"The token expires in 12 hours.","stepThree":"Step 5: Add a profile containing your repository to your settings.xml.","stepThreeDescription":"You can use any value in the <id> element, but it must be the same in both the <server> element from Step 4 and the <repository> elements. This enables the specified credentials to be included in requests to CodeArtifact.","stepTwo":"Step 4: Add your server to the list of servers to your settings.xml.","stepTwoDescription":"settings.xml is typically found at {{path}}. Adding the below snippet section allows Maven to pass the CODEARTIFACT_AUTH_TOKEN environment variable as a token in HTTP requests.","stepFour":"Step 6: (Optional) Set a mirror in your settings.xml that captures all connections and routes them to your repository instead of a public repository.","publishing":{"setup":"Push to your repository","description":"Step 3: Add this distribution management configuration to your pom.xml"}},"gradle":{"title":"Pull from your repository","stepOne":"Step 3: Export a CodeArtifact authorization token for authorization to your repository from your preferred shell.","stepOneWindows":"Step 3: Export a CodeArtifact authorization token for authorization to your repository using the default Windows command shell.","stepOneDescription":"The token expires in 12 hours.","stepTwo":"Step 4: Add this Maven section to the repositories section in the project\'s build.gradle file.","stepTwoDescription":"Gradle uses the endpoint listed to connect to your repository.","stepThree":"Step 5: (Optional) Remove all other repositories in the repositories section.","stepThreeDescription":"To use the CodeArtifact repository as the only source for your project dependencies, remove any other sections in repositories from build.gradle. If you have more than one repository, Gradle searches each repository for dependencies in the order they are listed.","publishing":{"setup":"Push to your repository","stepOne":"Step 4: Add the maven-publish plugin to the plugins section of the project\'s build.gradle file.","stepTwo":"Step 5: Add a publishing section to the project\'s build.gradle file. Be sure to replace <groupId>, <artifactId>, <version> with the project\'s corresponding values.","stepTwoDescription":"The maven-publish plugin generates a POM file based on the groupId, artifactId, and version specified in the publishing section."}},"nuget":{"vs":{"stepOne":"Step 2: Install and configure the <0></0>","stepOneLink":"AWS Toolkit extension in Visual Studio","stepOneDescription":"With the AWS Toolkit for Visual Studio, you\'ll be able to get started faster and be more productive when building AWS applications.","stepTwo":"Step 3: Add your repository as a package source to the Visual Studio NuGet Package Manager Settings.","stepTwoDescription":"For more information on setting up CodeArtifact with Visual Studio, see the <0></0>.","stepTwoDescriptionLink":"CodeArtifact User Guide"},"dnet":{"cred":"Configure .NET Core CLI using the Credential Provider (recommended)","aws":"Configure .NET Core CLI using the AWS CLI","manual":"Manually configure the .NET Core CLI"},"nuget":{"cred":"Configure NuGet CLI using the Credential Provider (recommended)","aws":"Configure NuGet CLI using the AWS CLI","manual":"Manually configure the NuGet CLI"},"cred":{"stepOne":"Step 3: Install and configure the <0></0>","stepOneLink":"NuGet Credential Provider plugin for AWS CodeArtifact","stepOneDescription":"The CodeArtifact NuGet Credential Provider simplifies the authentication and configuration of CodeArtifact with NuGet CLI tools.","stepTwo":"Step 4: Add the CodeArtifact repository as a NuGet package source."},"aws":{"stepOne":"Step 3: Configure your client using this AWS CLI CodeArtifact command (login authorization expires in 12 hours).","stepOneMacLinuxNote":"Because encryption is not supported on non-Windows platforms, your fetched credentials will be stored as plain text in your configuration file."},"macLinuxUsersLabel":"Linux and macOS users:","manual":{"stepOne":"Step 3: Get an authorization token to connect to your repository using the AWS CLI.","stepOneDescription":"The token expires in 12 hours.","stepTwo":"Step 4: Add the CodeArtifact repository as a NuGet package source.","stepTwoMacLinuxNote":"Because encryption is not supported on non-Windows platforms, you must add the <0>{{clearTextPasswordFlag}}</0> flag to the following command. Note that this will store your password as plain text in your configuration file.","stepTwoUpdateNote":"You can update an existing source with <0>{{command}}</0>."}}},"publish":{"swift":{"title":"Sample curl publishing instructions","stepOne":"Step 3: Export a CodeArtifact authorization token for authorization to your repository from your preferred shell.","stepOneWindows":"Step 3: Export a CodeArtifact authorization token for authorization to your repository using the default Windows command shell.","stepOneDescription":"The token expires in 12 hours.","stepTwo":"Step 4: Create a source archive for the package.","stepThree":"Step 5: Publish the package using curl."}}},"packages":{"title":"Packages","empty":{"header":"No packages to display.","content":"Start by configuring your local package manager to see packages in this table."}},"policy":{"header":"Repository policy","examples":{"header":"Example policies","description":"Read-only, read and publish, and full repository access examples.","tabs":{"readOnlyAccess":"Read-only repository access","readPublishAccess":"Read and publish repository access","fullAccess":"Full repository access"},"more":{"header":"More information","actions":"For a full list of available actions, browse the <0></0>.","actionsLinkText":"AWS CodeArtifact permissions reference","policies":"For more examples, including package-level permissions, read through <0></0> in the AWS documentation.","policiesLinkText":"Repository policies"}},"form":{"header":"Existing policy","save":"Save","cancel":"Cancel","success":"Successfully saved your repository\'s policy."},"editor":{"header":"Edit repository policy","description":"A repository policy gives you the ability to specify which actions other AWS accounts and organizations can perform on your repository."},"delete":{"header":"Delete policy","prompt":"This will delete the policy applied to this repository. This action cannot be undone.","button":"Delete policy"}},"tags":{"title":"Tags","empty":{"header":"There are no tags on this repository.","content":"Tags are useful for situations like cost allocation reports."}},"filter":{"packagePrefix":{"propertyLabel":"Package name prefix","groupValuesLabel":"Name"},"format":{"propertyLabel":"Format","groupValuesLabel":"Package format"},"publish":{"propertyLabel":"Publish","groupValuesLabel":"Publish options"},"upstream":{"propertyLabel":"Upstream","groupValuesLabel":"Upstream options"},"npmScope":{"propertyLabel":"npm scope prefix","groupValuesLabel":"Scope values"},"mavenGroupId":{"propertyLabel":"Maven group ID prefix","groupValuesLabel":"Group ID values"},"swiftModule":{"propertyLabel":"Swift scope prefix","groupValuesLabel":"Module values"},"genericNamespace":{"propertyLabel":"Generic namespace prefix","groupValuesLabel":"Namespace values"},"customGroupsText":{"originControls":{"properties":"Origin controls","values":"Origin controls"},"namespace":{"properties":"Namespace"}},"placeholder":"Filter by package name prefix, format, namespace prefix, and origin controls"}},"deletePolicy":{"title":"policy applied to {{resourceName}}","flash":{"success":{"message":"Successfully deleted the policy applied to {{resourceName}}."}}},"packages":{"th":{"name":"Package name","namespace":"Namespace","type":"Format","latestVersion":"Latest version","latestPublished":"Latest publish date","publish":"Publish","upstream":"Upstream"},"versionAction":{"action":"Action","archive":"Archive","publish":"Publish","dispose":"Dispose","delete":"Delete","unlist":"Unlist","pastTense":{"archive":"Archived","publish":"Published","dispose":"Disposed","unlist":"Unlisted"}}},"package":{"originControls":{"publish":{"ALLOW":{"label":"Allow","description":"Allow new versions of this package to be published directly to the repository."},"BLOCK":{"label":"Block","description":"Block new versions of a package from being published."}},"upstreams":{"ALLOW":{"label":"Allow","description":"Allow versions from upstreams, including versions from public repositories that need to be ingested."},"BLOCK":{"label":"Block","description":"Block all upstream versions."}},"header":"Origin controls","label":{"publish":"Publish:","upstream":"Upstream:"},"editButton":"Edit origin controls"},"overview":{"header":"Latest version details","label":{"latestVersion":"Latest version","packageDescription":"Package description","publishDate":"Publish date","license":"License","origin":"Origin"},"missing":"There are no published versions of this package in this repository."},"header":{"moreVersions":"More versions"},"tabs":{"description":"Description","dependencies":"Dependencies","files":"Assets"},"actions":{"delete":"Delete {{packageVersion}}"},"flash":{"success":{"delete":"Package \\"{{packageName}}\\" version \\"{{packageVersion}}\\" was deleted successfully."}},"th":{"status":"Package status","version":"Package version","origin":"Origin","originType":"Origin type","filename":"Filename","filesize":"Size","filechecksums":"Hashes","md5":"MD5 hash","sha1":"SHA-1 hash","sha256":"SHA-256 hash","sha512":"SHA-512 hash"},"status":{"groupValuesLabel":"Status values","Published":"Published","Unfinished":"Unfinished","Unlisted":"Unlisted","Archived":"Archived","Disposed":"Disposed","Deleted":"Deleted","Unknown":"Unknown"},"originType":{"groupValuesLabel":"Origin type values","INTERNAL":"Internal","EXTERNAL":"External","UNKNOWN":"Unknown"},"files":{"empty":{"title":"No package files to display."}},"install":{"shortcut":"Install shortcut","shortcuts":"Install shortcuts","copied":"Install shortcut copied","maven":"Apache Maven","gradle":{"groovy":"Gradle Groovy","kotlin":"Gradle Kotlin"},"scala":{"sbt":"Scala SBT"}},"resources":{"title":"Resources"},"meta":{"title":"Package details","published":"Publish date","license":"License","sourceRepository":"Source repository","homePage":"Home page","repository":"Code repository","packageType":"Package format","packageVersion":"Package version","packageStatus":"Package status","moreVersions":"More versions","copy":"Copy"},"exceptions":{"noPackageVersions":"No package versions were found for this package.","somethingWentWrong":"Versions for package \\"{{packageName}}\\" can\'t be found.","somethingWentWrongReasons":"Possible reasons:","somethingWentWrongReasonOne":"There are no versions available for this package in your repository","somethingWentWrongReasonTwo":"This package has no approved versions"},"versionsFiltering":{"operationAndText":"and","operationNotAndText":"and not","operationOrText":"or","operationNotOrText":"or not","clearFiltersText":"Clear filters","groupPropertiesText":"Properties","groupValuesText":"Values","filteringEmpty":"No results found","filteringStatusText":"Loading","removeTokenButtonLabel":"Remove filtering token for {{propertyLabel}} with value {{value}}","filterInputPlaceholder":"Filter by status or origin type","latestBadge":"Latest"},"versionsTable":{"loadingText":"Loading package versions"},"delete":{"button":"Delete package","flash":{"success":{"message":"Successfully deleted {{packageName}} from {{repositoryName}}."},"failure":{"message":"Failure. Unable to delete {{packageName}} from {{repositoryName}}."}},"warning":{"message":"All versions of this package will be deleted from the repository {{repositoryName}}."}}},"versions":{"header":"{{packageName}} versions"},"table":{"filtering":{"countTextSingular":"1 match","countTextPlural":"{{count}}{{plus}} matches"}},"dependencies":{"header":"Dependencies","th":{"name":"Package","versionRequirement":"Package version requirement","type":"Package dependency type"},"empty":{"title":"No package dependencies to display."}},"create":{"repo":{"form":{"section":{"heading":"Repository","settings":{"heading":"Create repository"},"additional":{"heading":"Additional configuration","subheading":"Domain"}},"name":{"label":"Repository name","hint":"Must start with an alphanumeric character. Can only contain alphanumeric characters, underscores (_), dashes (-), or periods (.)"},"create":{"label":"Create repository"},"group":{"label":"Name","hint":"Must start with an alphanumeric character. Can only contain alphanumeric characters, underscores (_), or dashes (-)."},"owner":{"label":"Domain owner","hint":"12-digit AWS account ID. <0></0>.","hintLinkText":"Find your AWS Account ID"}},"flash":{"successHeader":"Successfully created {{name}}.","successButtonText":"View connection instructions"},"repositoryDescription":{"label":"Repository description","hint":"500-character limit"}},"domain":{"form":{"heading":"Create domain","section":{"settings":{"heading":"Domain","footer":{"heading":"Additional configuration","items":"Encryption key"}}},"name":{"label":"Name","description":"A domain name typically includes your company name.","hint":"A domain name must be 2 to 255 characters. It can include the letters A-Z and a-z, the numbers 0-9, and the special characters - and _."},"url":{"label":"Domain URL"},"encryptionKey":{"label":"AWS KMS key ARN","description":"Choose what kind of encryption key you want to use for assets in your domain\'s repositories.","default":{"title":"AWS managed","description":"Use an AWS managed key (key ID: alias/aws/codeartifact)."},"customer":{"title":"Use a key that you manage.","description":"Use an AWS KMS key (KMS key) you already created."},"hint":"Enter the ARN of your CMK (arn:aws:kms:<region-ID>:<account-ID>:key/<key-ID>)"},"create":{"label":"Create domain"}},"flash":{"successHeader":"Successfully created the domain {{domainName}}.","successButtonText":"Create repository"}}},"edit":{"repo":{"form":{"section":{"settings":{"heading":"Edit {{name}}"}},"upstreams":{"label":"Upstream repositories - <0>{{optional}}</0>","optional":"optional"},"external":{"label":"External connection","description":"An external connection pulls packages from a public repository outside of AWS into your repository."},"upstreamRepositories":"Upstream Repositories"},"submit":{"button":"Update repository"},"success":{"content":"{{repositoryName}} successfully updated."},"systemTags":{"header":"AWS reserved tags","description":"Resource tags added by other AWS services. These tags cannot be modified."}}},"frankenDrop":{"label":"Upstream repositories search order -","description":"When you install packages from {{repositoryName}}, we search for packages from {{repositoryName}} and upstream repositories in the order shown below.","help":{"general":"How do I use this input?","addingUpstreams":{"title":"Adding upstream repositories","instructions":"Press the button labeled \\"Associate upstream repository\\" to add a new row to the end of the list."},"reordering":{"title":"Reordering upstream repositories","mouse":{"title":"By mouse","instructions":"Press and hold the reorder button with your mouse and drag upstream repositories in the order you prefer to search for packages during installation."},"keyboard":{"title":"By keyboard","instructions":"Focus the reorder button of the upstream repository you need to move and activate the move by pressing <0>{{enterKey}}</0>. Use the <0>{{upKey}}</0> and <0>{{downKey}}</0> keys to reorder the list. Press <0>{{enterKey}}</0> to accept the reordering, or press <0>{{escapeKey}}</0> to cancel the reordering.","enterKey":"enter","upKey":"up","downKey":"down","escapeKey":"escape"}}},"currentRepository":"{{repositoryName}} (current repository)","addItem":{"button":"Associate upstream repository"},"removeItem":{"button":"Disassociate"}},"deleteDomain":{"flash":{"success":{"message":"Successfully deleted the domain {{domainName}}."}}},"configureEnvironment":{"title":"Connect to repository","linux":"Mac & Linux","windows":"Windows","done":"Done","selectClient":"Select package manager client","stepOneTitle":"Step 1: Choose a package manager client","stepOneDescription":"Choose the package manager client you want to add to this repository. Before you can connect a package manager client, you must <0></0> and configure your AWS credentials.","option":{"stepTwoTitle":"Step 2: Select a configuration method","stepTwoPlaceholder":"Select a method","stepTwoDescription":{"npm":"The recommended method for configuring npm with your repository endpoint and authorization token is by using the AWS CodeArtifact login command. You can also configure npm manually.","yarn":"You can use the Yarn client to manage npm packages. There are different connection instructions depending on whether you are using Yarn 1.X or Yarn 2.X. Yarn 1.X reads and uses information from your npm configuration file (.npmrc), while Yarn 2.X does not. The configuration for Yarn 2.X must be defined in the .yarnrc.yml file.","maven":"Push and pull Maven packages by manually adding CodeArtifact as a repository to your mvn client.","gradle":"Push and pull Maven packages by manually adding CodeArtifact as a repository to your Gradle client.","pip":"The recommended method for configuring pip with your repository endpoint and authorization token is by using the AWS CodeArtifact login command. You can also configure pip manually.","twine":"The recommended method for configuring Twine with your repository endpoint and authorization token is by using the AWS CodeArtifact login command. You can also configure Twine manually by either updating your .pypirc file or by adding environment variables.","swift":"In order to connect, Swift version 5.7 or higher must be used."},"dotnet":{"stepTwoTitle":"Step 2: Select a .NET Core CLI configuration method","stepTwoDescription":"You can configure the .NET Core CLI with the CodeArtifact NuGet Credential Provider, with the AWS CLI, or manually. It is recommended to use NuGet Credential Provider for simplified setup and continued authentication."},"nuget":{"stepTwoTitle":"Step 2: Select a NuGet CLI configuration method","stepTwoDescription":"You can configure the NuGet CLI with the CodeArtifact NuGet Credential Provider, with the AWS CLI, or manually. It is recommended to use NuGet Credential Provider for simplified setup and continued authentication."}},"dotnet":".NET Core CLI","vs":"Visual Studio","nuget":"NuGet CLI"},"domainPreview":{"header":"Package flow","description":"Review how packages flow from external connections through {{domainName}} to {{repositoryName}}.","externalPackageSources":{"label":"External connections"},"domain":{"label":"Domain:"},"repository":{"label":"Repository"},"upstreamrepository":{"label":"Upstream repository","help":"We\'re creating an upstream repository for you so there’s a single place where you can see all the packages that you have requested from {{externalConnection}}."}},"gettingStarted":{"domain":{"form":{"validation":{"alphanumericStartWithUnderscoreAndDash":"Must start with an alphanumeric character. Can only contain alphanumeric characters, underscores (_), or dashes (-)."},"header":"Domain","name":{"label":"Name","hint":"A domain name typically includes your company name."},"domainUrl":{"label":"Domain URL"},"section":{"additionalConfiguration":{"label":"Additional configuration","hint":"AWS KMS key","encryptionHint":{"label":"AWS KMS key","description":"Use the default AWS managed CMK provided or provide your own CMK to encrypt artifacts at rest."}}}},"header":"Create domain","alert":{"header":"Your AWS account already has a domain","content":"Most AWS accounts only need one domain. If you want to create a new repository, <0>{{linkText}}</0>.","linkText":"create a repository in your existing domain"}},"onSuccess":{"header":"Successfully created {{repositoryName}} in {{domainName}}.","content":"Configure your local environment to install packages from {{repositoryName}}.","buttonText":"View connection instructions"},"submitText":"Create","repository":{"form":{"validation":{"alphanumericStartWithUnderscoreDashOrPeriods":"Must start with an alphanumeric character. Can only contain alphanumeric characters, underscores (_), dashes (-), or periods (.)."},"header":"Repository","subheader":"Create a repository without an external connection.","name":{"label":"Name","description":"A repository name typically includes either the project name or team name."},"repoDescription":{"label":"Description","hint":"500-character limit"},"externalCons":{"header":"Upstream repositories with an external connection - {{optional}} {{infoLink}}","optional":"optional","label":"Public package authorities","subheader":"Create up to five upstream repositories with an external connection to a public package authority. You can add more repositories to your domain later.","commonsware":{"label":"CommonsWare Android - Java","description":"Create a repository named {{repositoryName}} connected to CommonsWare Android repository."},"clojars":{"label":"Clojars Android - Java","description":"Create a repository named {{repositoryName}} connected to Clojars repository."},"android":{"label":"Google Android - Java","description":"Create a repository named {{repositoryName}} connected to Google Android repository."},"gradle":{"label":"Gradle plugins - Java","description":"Create a repository named {{repositoryName}} connected to Gradle plugins repository."},"maven":{"label":"Maven Central - Java","description":"Create a repository named {{repositoryName}} connected to Maven Central repository."},"npmjs":{"label":"npmjs - JavaScript","description":"Create a repository named {{repositoryName}} connected to npmjs."},"pypi":{"label":"PyPI - Python","description":"Create a repository named {{repositoryName}} connected to PyPI."},"nuget":{"label":"NuGet - .NET","description":"Create a repository named {{repositoryName}} connected to NuGet."},"hint":"A repository name must be 2 to 255 characters. It can include the letters A-Z and a-z, the numbers 0-9, and the special characters - and _."}},"header":"Create repositories in domain","headerWithDomain":"Create repositories in {{domainName}}"},"review":{"header":"Review and create","domain":{"stepHeader":"Create domain","formSection":{"header":"Domain","domainName":{"label":"Domain name"},"encryptionKey":{"label":"Encryption key","default":"AWS managed key (alias/aws/codeartifact)"},"domainOwner":{"label":"Domain owner (AWS account ID)"}}},"repo":{"stepHeader":"Create repository in domain","formSection1":{"header":"Repository","repositoryName":{"label":"Repository name"},"upstreams":{"label":"Upstream repositories"},"repositoryDescription":{"label":"Repository description"},"sampleUrl":{"label":"Sample repository URL"},"externalConnection":{"label":"External connection"},"repositoryUrl":{"label":"Repository URL"}},"formSection2":{"header":"Upstream repositories with an external connection"}}}},"createRepositoryWithExternalConnection":{"optional":"optional","submitText":"Create","selectConnection":{"header":"Create repository with external connection","container":{"header":"Repository with external connection","label":"Public package authorities","description":"Add a CodeArtifact repository to your CodeArtifact domain with an external connection to the selected package authority."},"connection":{"label":"Name","hint":"For example, {{connectionName}}."}},"useConnection":{"header":"Use repository as package source","container":{"header":"Repositories - {{optional}}","description":"Select which CodeArtifact repositories pull packages from your new repository with external connection"},"select":{"placeholder":"Select a repository","loadingText":"Loading CodeArtifact repositories","filteringLabel":"Filter CodeArtifact repositories","recoveryText":"Retry","emptyText":"No repositories"}},"success":{"header":"Successfully created {{repositoryName}} in {{domainName}}.","buttonText":"View connection instructions"}},"createRepositoryWithoutDomain":{"submitText":"Create repository","buttonText":{"next":"Next"},"selectDomain":{"header":"Select domain","domain":{"label":"Domain"},"domainType":{"label":"Domain location","inAccount":{"label":"Domain in current AWS account","description":"Create a repository in region {{region}} using account {{account}}."},"crossAccount":{"label":"Domain in another AWS account","description":"Create a repository in region {{region}} using another account."}},"noDomains":{"header":"No domains in account","content":"There are no domains in region {{region}} for account {{account}}. Create a domain or <0></0>.","contentLinkText":"learn more about using CodeArtifact domains across accounts","buttonText":"Create domain"}},"repository":{"header":"Create repository in domain"}},"fields":{"optional":"optional","domainName":{"label":"Domain name","description":"A domain name typically includes your company name.","hint":"Must start with a lowercase letter. Can contain lowercase alphanumeric characters or dashes (-).","errors":{"invalidCharacters":"Invalid domain name. Name must start with a lowercase letter. Can contain lowercase alphanumeric characters or dashes (-)."}},"domainUrl":{"label":"Domain URL"},"domainOwner":{"label":"AWS account ID","hint":"12-digit AWS account ID. <0></0>.","hintLinkText":"Find your AWS Account ID"},"repositoryName":{"label":"Repository name","description":"A repository name typically includes your project or team name.","hint":"Must start with an alphanumeric character. Can contain alphanumeric characters, underscores (_), dashes (-), or periods (.)."},"repositoryDescription":{"label":"Repository description","hint":"1000-character limit"},"upstreams":{"errors":{"names":"{{names}}. Must start with an alphanumeric character. Can only contain lower and upper case alphanumeric characters, underscores (_), dashes (-), or periods (.).","naming":"Upstream repository {{index}} naming does not satisify naming requirements"}},"dragdrop":{"label":"Package search order - {{optional}}","description":"When you install packages from {{repositoryName}}, we search for packages from {{repositoryName}} and upstream repositories in the order shown below.","help":{"general":"How to use this input","addingUpstreams":{"title":"Associating upstream repositories","instructions":"Press the button labeled \\"Associate upstream repository\\" to add a new row to the end of the list."},"reordering":{"title":"Reordering upstream repositories","mouse":{"title":"By mouse","instructions":"Press and hold the reorder button with your mouse and drag upstream repositories in the order you prefer to search for packages during installation."},"keyboard":{"title":"By keyboard","instructions":"Focus the reorder button of the upstream repository you need to move and activate the move by pressing <0>{{enterKey}}</0>. Use the <0>{{upKey}}</0> and <0>{{downKey}}</0> keys to reorder the list. Press <0>{{enterKey}}</0> to accept the reordering, or press {{escapeKey}} to cancel the reordering.","enterKey":"enter","upKey":"up","downKey":"down","escapeKey":"escape"}}},"currentRepository":"{{repositoryName}}","addItem":{"button":"Associate upstream repository"},"removeItem":{"button":"Disassociate"}},"tagging":{"keyPlaceholder":"Enter key","valuePlaceholder":"Enter value","addButton":"Add new tag","removeButton":"Remove","undoButton":"Undo","undoPrompt":"This tag will be removed upon saving changes","loading":"Loading tags that are associated with this resource","keyHeader":"Key","valueHeader":"Value","optional":"optional","keySuggestion":"Custom tag key","valueSuggestion":"Custom tag value","emptyTags":"No tags associated with the resource.","tooManyKeysSuggestion":"You have more keys than can be displayed","tooManyValuesSuggestion":"You have more values than can be displayed","keysSuggestionLoading":"Loading tag keys","keysSuggestionError":"Tag keys could not be retrieved","valuesSuggestionLoading":"Loading tag values","valuesSuggestionError":"Tag values could not be retrieved","emptyKeyError":"You must specify a tag key","maxKeyCharLengthError":"The maximum number of characters you can use in a tag key is 128.","maxValueCharLengthError":"The maximum number of characters you can use in a tag value is 256.","duplicateKeyError":"You must specify a unique tag key.","invalidKeyError":"Invalid key. Keys can only contain alphanumeric characters, spaces and any of the following: _.:/=+@-","invalidValueError":"Invalid value. Values can only contain alphanumeric characters, spaces and any of the following: _.:/=+@-","awsPrefixError":"Cannot start with aws:","tagLimit":{"oneLeft":"You can add 1 more tag.","manyLeft":"You can add {{availableTags}} more tags."},"tagLimitReached":"You have reached the limit of {{tagLimit}} tags.","tagLimitExceeded":"You have exceeded the limit of {{tagLimit}} tags."}},"steps":{"repository":{"header":"Create repository","repository":{"header":"Repository"},"upstreams":{"label":"Public upstream repositories","description":"CodeArtifact public upstream repositories are intermediate repositories that connect your repository to official package authorities, such as Maven Central Repository and NPM."}},"selectDomain":{"header":"Select domain","domain":{"header":"Domain","description":"Domain is a grouping of repositories created in CodeArtifact. Every repository belongs to a single domain.","additionalConfiguration":{"description":"AWS KMS key"}},"fields":{"domainType":{"label":"AWS account","description":"Select the AWS account that owns your CodeArtifact domain. Domains and repositories must exist within the same AWS region, currently set to {{region}}.","options":{"inAccount":{"label":"This AWS account ({{account}})"},"crossAccount":{"label":"Different AWS account"}}},"domain":{"label":"Domain"},"encryption":{"label":"AWS KMS key","description":"Use the AWS managed key provided by CodeArtifact or provide your own KMS key to encrypt artifacts in your domain.","options":{"defaultKey":{"label":"AWS managed key","description":"A key created on your behalf in account {{domainOwner}} with the key alias alias/aws/codeartifact."},"customerKey":{"label":"Customer managed key","description":"A key created and managed by you."}}},"encryptionKeyArn":{"label":"Customer managed key ARN","hint":"arn:aws:kms:<region-id>:<account-id>:key/<key-ID> or arn:aws:kms:<region-id>:<account-id>:alias/<key-alias>"}},"alerts":{"noDomains":{"header":"No domains in this account","content":"There are no domains in region {{region}} for account {{account}}. Create a domain now or <0></0>.","contentLinkText":"learn more about using CodeArtifact domains across accounts"}}},"selectUpstreams":{"header":"Select upstream repositories","upstreams":{"header":"Upstream repositories","description":{"one":"Packages can be shared between repositories using an upstream relationship between <0>{{repositoryName}}</0> and any CodeArtifact repository. We refer to repositories upstream from <0>{{repositoryName}}</0> as upstream repositories.","two":"For example, associate the upstream repository named <0>{{npm}}</0> to pull packages from the public NPM registry directly from <0>{{repositoryName}}</0>.","three":"When installing a package using <0>{{repositoryName}}</0>, we search for a matching package in <0>{{repositoryName}}</0> and then continue searching upstream repositories using the search order defined below until a match is found."}}},"review":{"header":"Review and create","domain":{"encryption":{"default":"AWS managed key (alias/aws/codeartifact)"}},"upstreams":{"externalConnection":{"label":"External connection"}}}},"forms":{"createRepository":{"submitText":"Create repository","success":{"header":"Successfully created {{repositoryName}} in {{domainName}}.","content":"Configure your package manager to install packages from {{repositoryName}}.","buttonText":"View connection instructions"}},"editDomain":{"title":"Edit {{name}}","tags":{"header":"Tags"},"systemTags":{"header":"AWS reserved tags","description":"Resource tags added by other AWS services. These tags cannot be modified."},"success":{"content":"Successfully updated {{name}}."},"submitText":"Update domain"},"originControls":{"title":"Edit origin controls","publish":{"label":"Publish","description":"Choose if new package versions can be published directly to this repository."},"upstream":{"label":"Upstream","description":"Choose how packages enter the repository from upstream repositories and external connections."},"warning":{"text":"Allowing both internal and external package versions poses risk for <0></0>","link":"dependency substitution attacks"},"success":"Your change has been made successfully.","submitText":"Save"}},"confirm":{"button":{"archive":"Archive","publish":"Publish","dispose":"Dispose","delete":"Delete","unlist":"Unlist","package":{"delete":"Delete"}},"validationString":{"archive":"archive","publish":"publish","dispose":"dispose","delete":"delete","unlist":"unlist","package":{"delete":"delete"}}},"header":{"archive":"Archive {{uniqueIdentifier}}?","publish":"Publish {{uniqueIdentifier}}?","dispose":"Dispose {{uniqueIdentifier}}?","delete":"Delete {{uniqueIdentifier}}?","unlist":"Unlist {{uniqueIdentifier}}?","package":{"delete":"Delete {{uniqueIdentifier}}?"}},"default":{"confirm":{"instructions":"To confirm {{action}}, type <0>{{actionEmphasis}}</0> in the field."}},"warning":{"archive":"After the package version is archived, its assets can no longer be downloaded. You can change the version\'s status back to Unlisted or Published.","publish":"After the package version is published, it can be requested using a package manager. The package version and all assets will be available from the repository.","dispose":"The package version and all assets will be deleted. A disposed package version cannot be republished. To republish a package version that has been disposed, you must permanently delete the version.","delete":"This package version and all assets will be permanently deleted. After deletion, a package with the same version can be republished to the repository.","unlist":"The version status will be changed to unlisted. It will not appear in the list of available versions. If version information is cached locally, it can still be downloaded and installed.","package":{"delete":{"content":"All versions of this package will be deleted from the repository <0>{{linkText}}</0>.","linkText":"{{repositoryName}}"}}},"banner":{"success":{"header":{"archive":"{{packageName}}-{{version}} has been archived.","publish":"{{packageName}}-{{version}} has been successfully published and can be requested using a package manager.","dispose":"{{packageName}}-{{version}} has been disposed.","delete":"{{packageName}}-{{version}} has been deleted.","unlist":"{{packageName}}-{{version}} has been unlisted."},"content":{"archive":"The package version\'s assets can no longer be downloaded. You can change the version\'s status back to Unlisted or Published.","publish":"The package version and all assets are available from the repository.","dispose":"This package version and all assets have been deleted. A disposed package version cannot be republished. To republish a package version that has been disposed, you must permanently delete the version.","delete":"This package version and all assets have been permanently deleted. A package with the same version can be republished to the repository.","unlist":"The version will not appear in the list of available versions. If version information is cached locally, it can still be downloaded and installed."}},"error":{"header":"Failure","content":{"general":"There was an issue updating the package version status.","delete":{"general":"There was an issue deleting the package version. ","permissions":"There was an issue deleting the package version due to insufficient IAM permissions."},"permissions":"There was an issue updating the package version status due to insufficient IAM permissions."}}}}')},codebuild:{...JSON.parse('{"artifacts":{"header":"Artifacts","description":{"name":"The name of the folder or compressed file in the bucket that will contain your output artifacts. Use Artifacts packaging under Additional configuration to choose whether to use a folder or compressed file. If the name is not provided, defaults to project name.","path":"The path to the build output ZIP file or folder.","semanticVersioning":"Use the artifact name specified in the buildspec file","packagingTypeNone":"The artifact files will be uploaded to the bucket.","packagingTypeZip":"AWS CodeBuild will upload artifacts into a compressed file that is put into the specified bucket.","encryptionDisabled":"Disable encryption if using the artifact to publish a static website or sharing content with others","encryptionKey":"Provide the AWS KMS customer master key used to encrypt this build\'s output artifacts. The default is your AWS-managed customer master key for S3."},"hint":{"path":"Example: MyPath/MyArtifact.zip.","namespace":"Choose Build ID to insert the build ID into the path to the build output ZIP file or folder, e.g. MyPath/MyBuildID/MyArtifact.zip. Otherwise, choose None.","type":"You might choose no artifacts if you are running tests or pushing a Docker image to Amazon ECR.","encryptionKey":"arn:aws:kms:<region-ID>:<account-ID>:key/<key-ID>"},"label":{"buildId":"Build ID","noArtifacts":"No artifacts","bucketName":"Bucket name","name":"Name","semanticVersioning":"Enable semantic versioning","path":"Path","namespace":"Namespace type","type":"Type","packaging":"Artifacts packaging","packagingTypeZip":"Zip","encryptionDisabled":"Disable artifact encryption","overrideArtifactName":"Override artifact name"},"type":{"codepipeline":{"alert":{"header":"You cannot update the artifact type","content":"This build project uses AWS CodePipeline, which requires source type and artifact type to be set to CODEPIPELINE. To make changes, you must use the AWS CLI to edit both values."}}},"subtext":{"additionalConfiguration":{"default":"Cache, encryption key","startBuild":"Cache configuration","defaultCacheDisabled":"Encryption key"}}},"button":{"debugBuild":"Debug build","preCheck":"Pre-check","continueAnyway":"Continue anyway","startBuild":"Start build","simpleBuild":"Basic build","advancedBuild":"Advanced build overrides","addSource":"Add source","removeSource":"Remove source","addArtifact":"Add artifact","removeArtifact":"Remove artifact","copyBadgeUrl":"Copy badge URL","startBuildWithOverrides":"Start build with overrides"},"header":{"project":"Project","configuration":"Project configuration","source":"Source","environment":"Environment","buildspec":"Buildspec","batchConfiguration":"Batch configuration","artifacts":"Artifacts","logsConfig":"Logs","startBuildDropdown":{"OneClick":"Start now","Override":"Start with overrides"},"createTrigger":"Create trigger","shareProject":"Share","deleteProject":"Delete","editRolePermissions":"Edit permissions","cloneProject":"Clone","editProject":"Edit","createNotification":"Create notification","manageNotification":"Manage notification"},"subheader":{"source":{"indexed":"Source {{headingNumber}}","primary":"Source {{headingNumber}} - Primary"},"artifact":{"indexed":"Artifact {{headingNumber}}","primary":"Artifact {{headingNumber}} - Primary"}},"label":{"project":"Project","projects":"Projects","buildNumber":"Build number","sessionConnection":"Session connection","sourceIdentifier":"Source identifier","sourceProvider":"Source provider","primarySourceRepository":"Primary repository","sourceRepository":"Repository","branch":"Branch","image":"Image","environmentType":"Environment type","computeType":"Compute type","capacity":"Capacity","compute":"Compute","privileged":"Privileged","customEntrypoint":"Custom entrypoint","serviceRole":"Service role","autoDiscover":"Report auto-discover","disableAutoDiscover":"Disable report auto-discover","autoDiscoverDirectory":"Auto-discover directory","timeout":"Timeout","queuedTimeout":"Queued timeout","certificate":"Certificate","registryCredential":"Registry credential","fleetArn":"Fleet ARN","artifactIdentifier":"Artifact identifier","artifactsLocation":"Artifacts upload location","cacheType":"Cache type","cacheLocation":"Cache location","cacheModes":"Local cache options","encryptionKey":"Encryption key","artifactsPackaging":"Packaging","cloneDepth":"Git clone depth","gitCloneDepth":{"full":"Full"},"buildBadge":"Build badge","publicBuilds":"Public builds","publicProjectUrl":"Public project URL","goToPublicProject":"Go to public project","insecureSsl":"Insecure SSL","managedImage":"Managed image","customImage":"Custom image","environment":"Environment","source":"Source","objectkey":"S3 object key","folder":"S3 object key or S3 folder","s3Location":"S3 location","report":"Report","reportGroup":"Report group","reportGroups":"Report groups","reportArtifact":"Report artifact","expirationDate":"Expiration date","buildRun":"Build run","reportGroupArn":"Report group ARN","reportArn":"Report ARN","passRate":"Pass rate","testReportDuration":"Report duration","buildConfiguration":"Build configuration","sourceVersion":"Source version","reportsList":"Reports","referenceType":"Reference type","resolvedSourceVersion":"Resolved source version","gitSubmodulesConfig":"Git submodules","buildStatus":"Build Status","lastModified":"Last Modified","latestBuildStatus":"Latest build status","debugBuild":"Debug build","sessionManager":"AWS Session Manager","reportType":"Report type","codeconnections":{"connection":"Connection","accountLevelConnection":"Default Connection","projectLevelConnection":"Customize Connection","info":"Info","removeAccountLevelConnection":"Remove account default connection","setAccountLevelConnection":"Save as account default connection"}},"description":{"sourceIdentifier":"A unique string used to identify your source","artifactIdentifier":"A unique string used to identify your artifact","sessionManager":"AWS Session Manager","sourceVersion":{"s3":"Enter the version ID of the object that represents the build input ZIP file.","git":"Enter a pull request, branch, commit ID, tag, or reference and a commit ID.","infoLink":"Info about source version of build"},"codeconnections":{"connection":"Choose a connection to your source provider.","newConnectionPart1":"You can","newConnectionPart2":"Create a new {{provider}} connection","newConnectionPart3":"via CodeConnections","connected":"Your account is connected to {{provider}} with:","disconnected":"You do not have a default {{provider}} connection","notAvailable":"Your account default connection does not exist","accountLevelConnection":"Use your account\'s default connection to apply to all projects.","projectLevelConnection":"Use a custom connection to override your account\'s default settings.","accountLevelConnectionAlert":"If you use a default connection, it will impact all projects in this AWS Region that currently use "},"autoDiscover":"CodeBuild will search for supported report file types in this directory. **/* by default"},"buildProject":{"tagType":"Build Project"},"advancedBuildOverrides":{"errorFromIam":"Error modifying service role. IAM returned the following error:"},"buildSpec":{"label":{"buildSpecPath":"Buildspec name","singleLineBuildCommands":"Build commands","editorBuildCommands":"Build commands","buildSpec":"Build specifications","useYml":"Use a buildspec file","useCommands":"Insert build commands"},"alert":{"githubRunner":"Buildspec will be ignored when you use CodeBuild to run GitHub Actions workflow jobs. Instead, CodeBuild will override it to use commands that will setup the self-hosted runner."},"description":{"buildSpecPath":"By default, CodeBuild looks for a file named buildspec.yml in the source code root directory. If your buildspec file uses a different name or location, enter its path from the source root here (for example, buildspec-two.yml or configuration/buildspec.yml).","editor":"Enter commands you want to run during the build phase. Separate each build command with \\"&&.\\" For example, \\"mvn test && mvn package.\\" Use a buildspec file to run commands in other phases or if you have a long list of commands.","useYml":"Store build commands in a YAML-formatted buildspec file","useCommands":"Store build commands as build project configuration"},"button":{"switchToEditor":"Switch to editor","switchToSingleLine":"Switch to single line","leaveEditor":"Exit the buildspec file editor"},"heading":{"leaveEditor":"Warning"},"text":{"leaveEditor":"If you exit the editor, your commands will not be saved.","defaultCommandExample":"e.g. echo \\"Hello World\\"","defaultBuildSpecFile":"buildspec.yml"}},"logs":{"common":{"showPreviousLogs":"Show previous logs","noPreviousLogs":"No previous logs"},"cwLogs":{"label":{"header":"CloudWatch","status":"CloudWatch logs","cwGroupName":"CloudWatch group name","cwStreamName":"CloudWatch stream name","groupName":"Group name","streamName":"Stream name prefix"},"description":{"status":"Checking this option will upload build output logs to CloudWatch.","groupName":"The group name of the logs in CloudWatch Logs. The log group name will be /aws/codebuild/<project-name> by default.","streamName":"The prefix of the stream name of the CloudWatch Logs."},"fetchFailedAfterRetry":"Unable to get CloudWatch Logs at the moment. Try again later."},"s3Logs":{"label":{"status":"S3 logs","header":"S3","location":"S3 location","objectKey":"Path prefix","encryptionDisabled":"Disable S3 log encryption"},"description":{"status":"Checking this option will upload build output logs to S3."},"itemLabel":{"encryptionDisabled":"Encryption disabled"},"downloadButton":"Download S3 logs"}},"fileSystem":{"header":"File systems","identifier":"Identifier","location":"Location","id":"ID","dirPath":"Directory path","mountPoint":"Mount point","mountOptions":"Mount options","actions":{"addFileSystem":"Add file system"},"noFileSystems":"No file systems in this project."},"timeout":{"description":"Default timeout is 1 hour","hintText":"Timeout must be between 5 minutes and 8 hours","buildHintText":"Timeout must be between 5 minutes and 36 hours","disabledByLambda":"Timeout isn\'t supported for Lambda compute type"},"queuedTimeout":{"description":"Default time in build queue is 8 hours","disabledByLambda":"Queued Timeout isn\'t supported for Lambda compute type"},"batchBuildsTable":{"heading":{"batchHistory":"Batch history"},"th":{"buildBatchNumber":"Batch number","buildBatchRun":"Batch run","groupIdentifier":"Group identifier","dependsOn":"Depends on","requestedOn":"Requested on"},"button":{"stopBatch":"Stop batch","deleteSingle":"Delete batch","delete":"Delete batches","retry":"Retry batch","retryAll":"Retry all builds","retryFailed":"Retry failed builds"}},"buildsTable":{"heading":{"buildHistory":"Build history"},"th":{"buildRun":"Build run","submitter":"Submitter","status":"Status","duration":"Duration","completed":"Completed"},"button":{"stopBuild":"Stop build","viewArtifacts":"View artifacts","viewLogs":"View logs","viewDetails":"View details","delete":"Delete builds","retry":"Retry build","refresh":{"ariaLive":"Build history refreshed"}},"finalStatusDropdown":{"buildStatusHeader":"Build Status","all":"All","succeeded":"Succeeded","failed":"Failed"}},"buildTriggers":{"table":{"header":"Build triggers"},"column":{"name":"Name","status":"Status","cron":"Schedule expression"},"actions":{"createTrigger":"Create trigger","editTrigger":"Edit trigger","updateTrigger":"Update trigger"},"description":{"createTrigger":"Create a schedule to trigger builds at regular intervals."},"create":{"policy":{"description":"Policy used in trust relationship with CloudWatchEvents to trigger CodeBuild target"},"frequency":{"hourly":"Hourly","daily":"Daily","weekly":"Weekly","custom":"Custom"},"scheduleType":{"label":"Schedule type","description":"Choose the schedule type that best meets your needs.","tiles":{"cron":{"label":"Cron-based schedule","description":"A schedule set using a cron expression that runs at a specific time, such as 8:00 a.m. PST on the first Monday of every month."},"rate":{"label":"Rate-based schedule","description":"A schedule that runs at a regular rate, such as every 10 minutes."}}},"cronExpression":{"label":"Cron expression","description":"Define the cron expression for the schedule.","minutes":"Minutes","hours":"Hours","dayOfMonth":"Day of month","month":"Month","dayOfWeek":"Day of week","year":"Year","nextTriggers":{"localTimezone":"Local time zone","label":"Next {{count}} trigger time","description":"Scheduled dates will be generated here upon receiving a valid cron expression","invalidTimezone":"EventBridge Scheduler cannot display the next 10 invocations in time zone <2>{{scheduleTimezone}}</2>. Use IANA time zones to display the next invocation dates."}},"rateExpression":{"label":"Rate expression","description":"Enter a value and the unit of time to run the schedule.","value":"Value","valueRequired":"Value is required.","unit":"Unit","unitRequired":"Unit is required.","minutes":"minutes","hours":"hours","days":"days"},"label":{"name":"Trigger name","description":"Description - optional","frequency":"Frequency","enable":"Enable this trigger","sourceVersion":"Source version"},"validate":{"frequencyRequired":"Frequency is required","nameRequired":"Trigger name is required","timeOut":"The timeout must be between 5 minutes and 8 hours long."},"heading":{"advancedSection":"Advanced section"},"hintText":{"sourceVersion":"If this box is blank, then the latest version of the source code will be built. To build a specific version, type the related version ID (if the source code is in Amazon S3) or commit ID."},"timeOut":{"description":"This build timeout must be 5 to 480 minutes, the default value is the value specified in the project."},"customCron":{"label":"Cron expression"},"cronError":"Invalid ScheduleExpression","startDay":{"sunday":"Sunday","monday":"Monday","tuesday":"Tuesday","wednesday":"Wednesday","thursday":"Thursday","friday":"Friday","saturday":"Saturday","validate":{"dayRequired":"Day is required"}},"startHour":{"label":"Start hour","validate":{"required":"Hour is required","range":"Hour must be between 0-23","hint":"Value must be between 0-23"}},"startMinute":{"label":"Start minute","validate":{"required":"Minute is required","range":"Minute must be between 0-59"},"hint":"Value must be between 0-59"},"successFlash":{"content":"Successfully created trigger: {{triggerName}}"}},"edit":{"successFlash":{"content":"Successfully edited trigger: {{triggerName}}"}},"remove":{"successFlash":{"content":"Successfully deleted trigger: {{triggerName}}"}}},"viewProject":{"configuration":"Configuration","additionalSources":"Additional sources","projectArn":"Project ARN","concurrentBuildLimit":"Concurrent build limit","secondarySource":"{{sourceNumber}} secondary source","secondarySources":"{{sourceNumber}} secondary sources","additionalArtifacts":"Additional artifacts","secondaryArtifact":"{{artifactNumber}} secondary artifact","secondaryArtifacts":"{{artifactNumber}} secondary artifacts","buildHistory":"Build history","batchHistory":"Batch history","deleteProject":"Delete","buildConfiguration":"Build details","projectConfiguration":"Project details","metrics":"Metrics"},"buildConfiguration":{"configuration":"Project configuration","source":"Source","environment":"Environment","buildspec":"Buildspec","batchConfiguration":"Batch configuration","artifacts":"Artifacts","logsConfig":"Logs","noTags":"No tags set on this project","reportGroups":"Reports","edit":{"project":"Edit project","configuration":"Edit project configuration","source":"Edit source","environment":"Edit environment","buildspec":"Edit Buildspec","batchConfiguration":"Edit batch configuration","artifacts":"Edit artifacts","logsConfig":"Edit logs"},"clone":{"project":"Clone project"},"value":{"timeout":"{{timeout}} minutes"}},"certificate":{"label":{"choiceField":"Certificate","noCertificate":"Do not install any certificate","customCertificate":"Install certificate from your S3 bucket","bucket":"S3 bucket of certificate","objectKey":"Object key of certificate"},"description":{"choiceField":"If you have a self-signed certificate or a certificate signed by a certification authority, choose the option to install it from your S3 bucket.","disabledByLambda":"Certificate isn\'t supported for Lambda compute type"}},"deleteBuildsModal":{"text":{"areYouSure":"Are you sure you want to delete the selected builds?"},"heading":{"deleteBuild":"Delete builds"},"button":{"delete":"Delete builds","cancel":"Cancel"}},"editEnvironment":{"button":{"changeProvisioningModel":"Change provisioning model","overrideImage":"Override image"},"label":{"currentImage":"Current environment image","newImage":"Environment image"}},"oauthSelector":{"tiles":{"public":"Public repository","account":{"github":"Repository in my GitHub account","github_enterprise":"Repository in my GitHub Enterprise account","bitbucket":"Repository in my Bitbucket account"}},"connect":{"tiles":{"token":{"github":"Connect with a GitHub personal access token","bitbucket":"Connect with a Bitbucket access token"},"oauth":"Connect using OAuth","basic":{"bitbucket":"Connect with a Bitbucket app password"}},"hint":{"github":"AWS CodeBuild needs access to your GitHub account to display available repositories.","bitbucket":"AWS CodeBuild needs access to your Bitbucket account to display available repositories."},"button":{"github":"Connect to GitHub","bitbucket":"Connect to Bitbucket"},"error":{"bitbucket":"Bitbucket failed to connect"}},"label":{"repository":{"url":"Repository URL","github":"GitHub repository","bitbucket":"Bitbucket repository"},"sourceRepository":"Repository"},"publicUrl":{"hint":{"github":"https://github.com/<user-name>/<repository-name>","bitbucket":"https://bitbucket.org/<user-name>/<repository-name>.git"}},"disconnectButton":{"github":"Disconnect from GitHub","bitbucket":"Disconnect from Bitbucket"},"disconnectLabel":"Connection status","disconnectText":{"github":{"oauth":"You are connected to GitHub using OAuth.","token":"You are connected to GitHub using a personal access token."},"bitbucket":{"oauth":"You are connected to Bitbucket using OAuth.","basic":"You are connected to Bitbucket using an app password.","token":"You are connected to Bitbucket using an access token."}},"disconnectModal":{"github":{"title":"Disconnect from GitHub"},"githubEnterprise":{"title":"Disconnect from GitHub Enterprise"},"bitbucket":{"title":"Disconnect from Bitbucket"},"content":"This will disconnect the source provider from all projects in the account. Are you sure you want to proceed?"},"error":{"listRepo":"You can manually enter repository details."}},"githubEnterprise":{"connect":{"label":"Personal access token","button":"Save token"},"disconnect":{"button":"Disconnect from GitHub Enterprise"},"url":{"hint":"https://<host-name>/<user-name>/<repository-name>"}},"tokenConnector":{"connect":{"github":{"button":"Save token","token":{"label":"GitHub personal access token"}},"bitbucket":{"button":{"BASIC_AUTH":"Save Bitbucket credentials","PERSONAL_ACCESS_TOKEN":"Save token"},"token":{"label":"Bitbucket access token"},"username":{"label":"Bitbucket username"},"password":{"label":"Bitbucket app password"}},"github_enterprise":{"button":"Save token","token":{"label":"GitHub Enterprise personal access token"}}},"validation":{"personalAccessToken":{"empty":"You must enter a token"},"userName":{"empty":"You must enter a username"},"appPassword":{"empty":"You must enter an app password"}}},"webhook":{"webhook":{"label":"Webhook","description":"Rebuild every time a code change is pushed to this repository","manualCreation":{"label":"Manual creation","description":"Manually create a webhook for this repository in GitHub console."},"warning":"Important security considerations","orgLevel":{"tile":{"github":"GitHub scoped webhook","github_enterprise":"GitHub Enterprise scoped webhook"},"config":{"name":{"description":{"GITHUB":"Your GitHub organization name.","GITHUB_ENTERPRISE":"Your GitHub Enterprise organization name."},"label":"Organization name"},"domain":{"description":{"GITHUB":"Your GitHub organization domain.","GITHUB_ENTERPRISE":"Your GitHub Enterprise organization domain."},"label":"Domain name"}}},"scopeLevel":{"label":"Scope type","tiles":{"label":{"organization":"Organization level","global":"Enterprise level"}},"config":{"name":{"description":{"GITHUB":"Your GitHub enterprise name.","GITHUB_ENTERPRISE":"Your GitHub Enterprise account enterprise name."},"label":"Enterprise name"},"domain":{"description":{"GITHUB":"Your GitHub enterprise domain.","GITHUB_ENTERPRISE":"Your GitHub Enterprise account enterprise domain."},"label":"Domain name"}}}},"branchFilter":{"hint":"Enter a regular expression","label":"Branch filter"},"rotateSecret":{"label":"Rotate key","description":"Rotate webhook secret key"},"heading":"Primary source webhook events","filterGroups":{"label":"Webhook event filter groups","sectionTitle":"Filter group {{number}}","condition":"A build is triggered if any filter group evaluates to true, which occurs when all the filters in the group evaluate to true.","add":{"label":"Add filter group"},"remove":{"label":"Remove filter group"},"startBuild":{"label":"Start a build under these conditions","labelOptional":"Start a build under these conditions - <1>optional</1>"},"skipBuild":{"label":"Don\'t start a build under these conditions","labelOptional":"Don\'t start a build under these conditions - <1>optional</1>"},"description":"Add one or more webhook event filter groups to specify which events trigger a new build. If you do not add a webhook event filter group, then a new build is triggered every time a code change is pushed to your repository.","eventType":{"label":"Event type"},"eventTypeOption":{"push":"PUSH","pullRequestCreated":"PULL_REQUEST_CREATED","pullRequestUpdated":"PULL_REQUEST_UPDATED","pullRequestReopened":"PULL_REQUEST_REOPENED","pullRequestMerged":"PULL_REQUEST_MERGED","pullRequestClosed":"PULL_REQUEST_CLOSED","workflowJobQueued":"WORKFLOW_JOB_QUEUED","released":"RELEASED","prereleased":"PRERELEASED"},"actor":{"label":"ACTOR_ID"},"headref":{"label":"HEAD_REF"},"baseref":{"label":"BASE_REF"},"filepath":{"label":"FILE_PATH"},"commitmessage":{"label":"COMMIT_MESSAGE"},"workflowname":{"label":"WORKFLOW_NAME"},"tagname":{"label":"TAG_NAME"},"releasename":{"label":"RELEASE_NAME"},"repositoryname":{"label":"REPOSITORY_NAME"},"organizationname":{"label":"ORGANIZATION_NAME"},"filter":{"add":"Add filter","type":"Type","pattern":"Pattern","excludeMatchedPattern":"Exclude matched pattern","noFilter":"No webhook filter in this group","sectionTitle":"Filter {{number}}"},"hintText":{"required":"Both are required."}}},"gheWebhookModal":{"update":{"title":"Update webhook","description":{"GITHUB_ENTERPRISE":"You must update the webhook secret for your GitHub Enterprise repository. Make sure to copy the webhook secret now as you will not be able to see it again.","GITHUB":"You must update the webhook secret for your GitHub repository. Make sure to copy the webhook secret now as you will not be able to see it again."}},"new":{"title":"Create webhook","description":{"GITHUB_ENTERPRISE":"You must create a webhook for your GitHub Enterprise repository.","GITHUB":"You must create a webhook for your GitHub repository."}},"common":{"payloadUrl":"Payload URL","copyPayload":"Copy payload URL","copySecret":"Copy secret","secret":"Secret"}},"codeartifact":{"title":"CodeArtifact","label":"CodeArtifact connection","description":"Select a CodeArtifact repository that your AWS CodeBuild project will access.","packageType":"Package manager type","domainName":"Domain name","domainOwner":"Domain owner","repositoryName":"Repository name","manualEntry":{"title":"Using an unlisted repository?","link":"Manually enter repository details."},"ownedRepo":{"title":"Using a repository you own?","link":"Search for repository."}},"testReport":{"tagType":"Report group","reportGroup":{"table":{"heading":"Report groups","column":{"name":"Name","type":"Type","status":"Status","exportConfig":"Export location","bucketOwner":"S3 bucket owner","lastModified":"Last modified"},"test":{"heading":"Test reports history"},"codeCoverage":{"heading":"Code coverage reports history","info":"Info about code coverage report"}},"delete":{"success":"Successfully deleted report {{reportId}}"},"editForm":{"successMessage":"Report {{ reportGroupName }} successfully updated","save":"Update report group"},"createForm":{"successMessage":"Report group created successfully","configuration":{"header":"Report group configuration"},"export":{"header":"Export"},"save":"Create report group","section":{"name":{"label":"Report group name"},"backup":{"label":"Export to Amazon S3","description":"Store test result raw data in an Amazon S3 bucket"},"s3bucket":{"label":"S3 bucket name"},"s3bucketOwner":{"label":"S3 bucket owner","hint":"The 12 digit AWS account number of the bucket owner. For example 123456789012."},"s3path":{"label":"Path"},"encryptionKey":{"label":"AWS KMS encryption key","hint":"arn:aws:kms:<region-id>:<account-id>:key/<key-ID> or arn:aws:kms:<region-id>:<account-id>:alias/<key-alias>"},"encryption":{"label":"Encryption"},"footer":{"label":"Encryption key"},"packaging":{"label":"Compress test result data in a zip file"}},"encryptionOptions":{"default":{"label":"Default AWS managed key","description":"Use the AWS managed customers master key for S3"},"customKey":{"label":"Choose a custom key","description":"Select a KMS key for CodeBuild to encrypt your artifacts"},"noEncryption":{"label":"Disable artifact encryption","description":"Disable encryption if you share test results or publish them to a static website."}}},"create":"Create report group","statuses":{"active":"Active","deleting":"Deleting"},"deleteReports":{"info":{"heading":"Deleting report group","description":"All reports that belong to the report group will be deleted."}},"trends":{"title":"Trends","description":"Select up to the number of reports","label":{"passRate":"Pass rate","duration":"Average report duration","testCasesRan":"Average number of test cases run","numberOfReports":"Number of reports"}},"graph":{"trends":{"title":"Test report failure and errors","legend":{"success":"Passed","error":"Failed/Error","skipped":"Skipped","unknown":"Unknown","none":"No trends available"},"xAxis":"Oldest to newest report","yAxis":"Failed/Error"},"durationOverTotal":{"title":"Duration and total tests run","legend":{"duration":"Report duration","none":"No duration data available"},"xAxis":"Oldest to newest report","yAxis":"Duration (seconds)"}}},"report":{"table":{"heading":"Report history","column":{"report":"Report","type":"Type","status":"Status","lineCoverage":"Line coverage %","branchCoverage":"Branch coverage %","coveredLines":"Covered lines","missedLines":"Missed lines","coveredBranches":"Covered branches","missedBranches":"Missed branches","totalLines":"Total # of lines","duration":"Duration","created":"Created","filePath":"File path","build":"Build","reportGroup":"Report group"},"dropdown":{"options":{"noFilter":"No coverage filter","maxLineCoverage":"Max line coverage %","minLineCoverage":"Min line coverage %"}}},"select":{"label":"Select report status to filter","filter":{"label":"Filter status"}},"statuses":{"generating":"Generating","succeeded":"Succeeded","failed":"Failed","incomplete":"Incomplete","deleting":"Deleting","complete":"Complete"},"filter":{"any":"Any status"},"summary":{"title":"Summary"},"button":{"viewBuild":"View build run","viewReportGroup":"View report group"},"delete":{"success":"Report {{reportId}} deletion started"},"graph":{"ariaLabel":{"success":"Passed: {{value}} test cases","error":"Failed/Error: {{value}} test cases","unknown":"Unknown: {{value}} test cases","skipped":"Skipped: {{value}} test cases"},"legend":{"success":"Passed","error":"Failed/Error","unknown":"Unknown","skipped":"Skipped","none":"No test cases","noSummary":"Test summary not available"}},"cases":"test cases"},"durationInSeconds":"{{durationInSeconds}} seconds","noExport":"No export","unknownExport":"Unknown export type","export":{"button":{"text":"View artifacts","ariaLabel":"View artifacts, opens in new tab"}},"button":{"refresh":{"ariaLive":"Reports history refreshed"}},"test":{"details":{"durationInMs":"Duration: {{ val }} milliseconds","rawDataPath":"Test raw data path: {{ rawDataPath }}","noMessage":"No message"},"statuses":{"succeeded":"Succeeded","failed":"Failed","error":"Error","skipped":"Skipped","unknown":"Unknown"},"filter":{"any":"Any status"},"own":{"truncated":"To see the full list of {{val}} test cases for this report, view the artifacts."},"shared":{"truncated":"To see the full list of {{val}} test cases for this report, view the artifacts in the owner\'s account."},"table":{"header":"Test cases","column":{"testCase":"Test case","status":"Status","prefix":"Prefix","message":"Message","duration":"Duration"}}},"viewProject":{"noReportGroups":"No report groups are configured for this project"},"viewReportGroup":{"configuration":{"title":"Configuration","dictionaryItem":{"type":{"label":"Type"},"export":{"label":"Export location","bucketOwner":"S3 bucket owner"},"artifact":{"label":"Artifacts encryption"},"encryption":{"label":"Encryption key","enabled":"Encryption enabled","disabled":"Encryption disabled"}}}},"reportType":{"label":{"test":"Test","codeCoverage":"Code coverage"}}},"codeCoverageReport":{"report":{"summary":{"title":"Code coverage summary"},"graph":{"lineCoverage":{"legend":{"none":"No line coverage data"}},"branchCoverage":{"legend":{"none":"No branch coverage data"}},"legend":{"noSummary":"Code coverage summary not available","lineCovered":"Line covered","lineMissed":"Line missed","branchCovered":"Branch covered","branchMissed":"Branch missed"}},"fileCoverage":{"title":"File coverage","button":{"refresh":{"ariaLive":"File coverage refreshed"}}},"lines":"lines","lineCoverage":{"ariaDescription":"Donut chart showing line coverage"},"branchCoverage":{"ariaDescription":"Donut chart showing branch coverage"},"label":{"lineCoverage":"Line coverage","branchCoverage":"Branch coverage"}},"reportGroup":{"trends":{"label":{"lineCoverage":"Average line coverage percentage","branchCoverage":"Average branch coverage percentage"}},"graph":{"trends":{"legend":{"lineCoverage":"Line coverage percentage","branchCoverage":"Branch coverage percentage"},"title":"Coverage trend","yAxis":"Coverage percentage","xAxis":"Oldest to newest report","lineCoverage":{"legend":{"none":"No line coverage trends available"}},"branchCoverage":{"legend":{"none":"No branch coverage trends available"}}}}}},"projectConfiguration":{"heading":{"projectConfiguration":"Project configuration"},"subtext":{"additionalConfig":"Description, Build badge, Concurrent build limit, "},"label":{"projectName":"Project name","description":"Description","enableConcurrentBuildLimit":"Enable concurrent build limit","enablePublicBuildAccess":"Public build access","enablePublicBuildAccessServiceRole":"Public build service role"},"hint":{"projectName":"A project name must be 2 to 255 characters. It can include the letters A-Z and a-z, the numbers 0-9, and the special characters - and _.","enableConcurrentBuildLimit":"The concurrent build limit must be greater than 0 and less than the account build limit."},"checkbox":{"enableConcurrentBuildLimit":"Restrict number of concurrent builds this project can start","enablePublicBuildAccess":"Enable public build access"},"description":{"enableConcurrentBuildLimit":"Concurrent build limit","concurrentBuildLimitDescription":"Limit the number of allowed concurrent builds for this project.","enablePublicBuildAccess":"Public build access allows you to make the build results, including logs and artifacts, for this project available for the general public.","enablePublicBuildAccessServiceRole":"The public build service role is used to provide read access to your logs and artifacts for public builds. You can let CodeBuild create a new role, or you can choose an existing role."},"header":{"enablePublicBuildAccessAlert":"Public build access enabled"},"content":{"enablePublicBuildAccessAlert":"Your build results, including logs and artifacts, are accessible to the general public. Downloading logs and/or artifacts will increase your AWS costs.","confirmPublicBuildAccessModal":"When you enable public build access, your build results, including logs and artifacts, are accessible to the general public. Downloading logs and/or artifacts will increase your AWS costs."},"confirmPublicBuildAccess":{"modalHeader":"Confirm public build access","modalDescription":"To confirm, type <i>public</i> in the field."}},"stopBatchModal":{"heading":{"stopBuild":"Stop batch"}},"stopBuildModal":{"text":{"areYouSure":"Are you sure you want to stop?"},"heading":{"stopBuild":"Stop build"},"button":{"stop":"Stop","cancel":"Cancel"}},"deleteBuildFlashes":{"heading":{"buildsDeleted":"Builds successfully deleted:","buildsNotDeleted":"Builds not deleted:"}},"lambdaConfirmModal":{"header":"Update Compute Type","content":"Update the compute type to Lambda? Proceeding with this action will update configurations to the default values compatible with Lambda.","alertContent":"Lambda compute is optimized for speed and minimizes the startup time of builds. However, the following use cases aren\'t supported for Lambda:","useCase":{"provisionedFleet":"Reserved Capacity","batchBuilds":"Batch Builds","caching":"Caching across builds","runtimeMinutes":"Restricting runtime minutes with timeout","rootUserTools":"Tools which require root-user permissions"},"button":{"confirm":"Confirm","cancel":"Cancel"}},"buildTransform":{"artifactsTypeCodePipeline":"CodePipeline","artifactsTypeS3":"Amazon S3","artifactsTypeNone":"No artifacts","artifactsNamespaceNone":"None","artifactsNamespaceBuildId":"Build ID","duration":"{{durationInSeconds}} seconds"},"projectTransform":{"providerType":{"NO_SOURCE":"No source","CODECOMMIT":"AWS CodeCommit","CODEPIPELINE":"AWS CodePipeline","S3":"Amazon S3","GITHUB":"GitHub","BITBUCKET":"Bitbucket","GITHUB_ENTERPRISE":"GitHub Enterprise","CODECONNECTIONS":"GitLab","GITLAB":"GitLab","GITLAB_SELF_MANAGED":"GitLab Self Managed"},"instanceSizeSmall":"3 GB memory, 2 vCPUs","instanceSizeSmallArm":"4 GB memory, 2 vCPUs","instanceSizeMedium":"7 GB memory, 4 vCPUs","instanceSizeMediumArm":"8 GB memory, 4 vCPUs","instanceSizeLarge":"15 GB memory, 8 vCPUs","instanceSizeLargeArm":"16 GB memory, 8 vCPUs","instanceSizeXLarge":"70 GB memory, 36 vCPUs","instanceSizeXLargeArm":"64 GB memory, 32 vCPUs","instanceSizeTwoXLargeArm":"96 GB memory, 48 vCPUs","lambdaCompute1GB":"1 GB memory","lambdaCompute2GB":"2 GB memory","lambdaCompute4GB":"4 GB memory","lambdaCompute8GB":"8 GB memory","lambdaCompute10GB":"10 GB memory","instanceSizeLargeArmDesc":"ARM is restricted to this compute type","instanceSizeLargeLinuxGpu":"255 GB memory, 32 vCPUs, GPU-enhanced","instanceSizeSmallLinuxGpu":"16 GB memory, 4 vCPUs, GPU-enhanced","instanceSizeLargeLinuxGpuDesc":"Linux GPU is restricted to this compute type","instanceSize2xLarge":"145 GB memory, 72 vCPUs","macM2InstanceMedium":"Apple M2, 24 GB memory, 8 vCPUs","macM2InstanceLarge":"Apple M2, 32 GB memory, 12 vCPUs","lambdaSizeSmall":"4GB memory, 2vCPUs","lambdaSizeMedium":"8GB memory, 4vCPUs","packagingTypeNone":"None","packagingTypeZip":"Zip","environmentArm":"ARM","environmentArmLambda":"ARM Lambda","environmentLinux":"Linux EC2","environmentLinuxLambda":"Linux Lambda","environmentLinuxGpu":"Linux GPU","environmentWindows":"Windows","environmentWindows2019":"Windows 2019","environmentWindows2022":"Windows 2022","environmentMacArm":"MAC_ARM","cacheTypeNone":"No cache","isPrivileged":"True","isNotPrivileged":"False","isCustomEntrypoint":"True","isNotCustomEntrypoint":"False","accountLevelCodeConnections":"Default connection","projectLevelCodeConnections":"Custom connection"},"serviceRole":{"existingRoleTile":{"description":"Choose an existing service role from your account","label":"Existing service role"},"modifyPermissions":{"label":"Allow AWS CodeBuild to modify this service role so it can be used with this build project","header":"Service role permissions","error":"Unable to modify service role permissions"},"newRoleTile":{"description":"Create a service role in your account","label":"New service role"},"roleName":{"hint":"Type your service role name","label":"Role name"},"roleArn":{"label":"Role ARN"},"serviceRole":{"label":"Service role"},"validation":{"roleRequired":"You must choose a service role","roleNameRequired":"Enter a service role name","invalidRoleName":"Service role name is invalid. Valid characters are [A-Za-z0-9+=,.@_-]","roleNameExists":"The service role name already exists"}},"batchBuilds":{"viewBatch":{"batchSummary":{"header":"Batch status","batchArn":"Batch ARN"},"label":{"builds":"Builds in batch","details":"Batch details"}},"buildType":{"label":"Build type","singleBuild":{"label":"Single build","description":"Triggers single build"},"batchBuild":{"label":"Batch build","description":"Triggers multiple builds as single execution"}},"configuration":{"heading":"Batch configuration","description":"You can run a group of builds as a single execution. Batch configuration is also available in advanced option when starting build.","disabled":"Batch configuration isn\'t supported for this project\'s environment selections.","useBatchBuilds":{"label":"Define batch configuration","description":"You can also define or override batch configuration when starting a build batch."},"serviceRole":{"label":"Batch service role","description":"Batch service role can be overridden when starting build. You can create a secondary service role or use an existing service role."},"computeTypes":{"label":"Allowed compute type(s) for batch","description":"Selected compute types can be used in batch","placeholder":"Choose options"},"maximumBuilds":{"label":"Maximum builds allowed in batch","description":"The maximum number of builds you can include in a batch.","hint":"Maximum builds must be between 1-100"},"timeout":{"label":"Batch timeout","description":"Default timeout is 8 hours for build batch."},"combineArtifacts":{"label":"Combine artifacts","description":"Individual build artifacts will be combined into a single location.","checkbox":"Combine all artifacts from batch into a single location","isOn":"Yes","isOff":"No"},"batchReportMode":{"label":"Batch report mode","description":"Select the report mode. Batch build results can be aggregated into a single report, or reported individually. <link />","type":{"aggregated":"Aggregated Builds","individual":"Individual Builds"}}}},"createProjectForCodePipeline":{"button":{"create":"Continue to CodePipeline"},"alert":{"header":"Continue to CodePipeline","message":"Create a new CodeBuild build project and return to CodePipeline to finish configuring your pipeline."}},"createProject":{"validation":{"cannotSubmitForm":"An error occurred submitting the form","cannotDeterminePolicy":"Unable to determine service role policy type","bucketHasLifecycle":"The bucket already has lifecycle configuration","bucketInDifferentRegion":"The S3 bucket is in a different region. Choose an S3 bucket in your AWS account\'s current region.","projectNameRequired":"Project name is required","nameTooLong":"Project name cannot be longer than 255 characters.","nameInvalidCharacters":"Project name must start with an alphanumeric character and can only contain alphanumeric characters, -, and _.","descriptionTooLong":"Project description cannot be longer than 255 characters.","sourceIdentifierRequired":"Source must have an identifier","repositoryRequired":"You must choose a repository","objectKeyRequired":"You must enter an object key","folderRequired":"You must enter an object key or S3 folder","pathRequired":"A source code folder cannot be the root of an S3 bucket","bucketRequired":"You must select a bucket","buildSpecRequired":"Build command should not be empty","noSource":{"buildspecRequired":"If the primary source for the build project is \\"No source\\", a valid buildspec command must be provided"},"fleetArn":"You must choose a fleet","overflowBehavior":"You must choose an overflow behavior","operatingSystemRequired":"You must choose an operating system","imageTypeRequired":"You must choose a programming language runtime type","imageVersionRequired":"You must choose a programming language runtime version","roleNameRequired":"Enter a service role name","roleNameExists":"The service role name already exists","invalidRoleName":"Service role name is invalid. Valid characters are [A-Za-z0-9+=,.@_-]","roleRequired":"You must choose a service role","certInvalidKey":"Certificate must be either .pem or .zip file","invalidTimeout":"Timeout must be between {{minTimeoutMinutes}} and {{maxTimeoutMinutes}} minutes","artifactIdentifierRequired":"Artifact must have an identifier","artifactBucketRequired":"Choose an existing output bucket","invalidS3Prefix":"S3 prefix should be valid","lifecycleRequired":"You must enter a lifecycle","lifecycleMustBeNumber":"Lifecycle must be a positive integer","lifecycleMustBePositive":"Lifecycle must be a positive integer","cwLogs":{"groupNameRequired":"You must enter a group name","streamNameRequired":"You must enter a stream name"},"s3Logs":{"locationRequired":"You must choose a location"},"branch":{"required":"Branch is required"},"tag":{"required":"Tag is required"},"reference":{"required":"Reference is required"},"commitId":{"required":"Commit ID is required"},"fileSystemId":{"required":"ID is required"},"fileSystemMountPoint":{"required":"Mount point is required"},"fileSystemIdentifier":{"required":"Identifier is required"},"codeconnections":{"connectionRequired":"Connection is required","repositoryRequired":"Repository is required"}},"testReports":{"label":"Report ARN"},"heading":{"create":"Create build project"},"button":{"cancel":"Cancel","create":"Create build project"},"flashes":{"success":"You have successfully created the following project: {{ name }}","successHeader":"Project created"}},"deleteBuilds":{"heading":{"success":"Success","error":"Failure"},"text":{"unableToDelete":"There was an issue deleting builds.","unableToUpdate":"There was an issue updating builds."}},"deleteProject":{"heading":{"delete":"Delete build project","success":"Success","error":"Failure"},"text":{"delete":"Are you sure you want to delete this project?","success":"Project {{projectName}} successfully deleted","unableToDelete":"There was an issue deleting the project.","unableToUpdate":"There was an issue updating projects."},"button":{"delete":"Delete build project"}},"editProject":{"header":"Edit {{section}}","success":"Build project {{projectName}} successfully updated","project":{"save":"Update project","clone":"Clone project","successMessage":"Project details for build project {{projectName}} successfully updated."},"configuration":{"save":"Update configuration","successMessage":"Project configuration for build project {{projectName}} successfully updated."},"source":{"save":"Update source","successMessage":"Source for build project {{projectName}} successfully updated."},"environment":{"save":"Update environment","successMessage":"Environment for build project {{projectName}} successfully updated.","image":"Environment image","managedImage":{"description":"Use an image managed by AWS CodeBuild"},"customImage":{"description":"Specify a Docker image"},"privileged":{"description":"Enable this flag if you want to build Docker images or want your builds to get elevated privileges."},"customEntrypoint":{"description":"Enable this checkbox if you want to run the entrypoint commands present in the custom Docker image."}},"buildspec":{"currentBuildspec":"Current buildspec","currentlyUsingYml":"Using the buildspec.yml in the source code root directory","save":"Update buildspec","successMessage":"Buildspec for build project {{projectName}} successfully updated."},"batchConfiguration":{"back":"Back","save":"Update batch configuration","successMessage":"Batch configuration for build project {{projectName}} successfully updated."},"artifacts":{"save":"Update artifacts","successMessage":"Artifacts for build project {{projectName}} successfully updated."},"logsConfig":{"save":"Update logs","successMessage":"Logs for build project {{projectName}} successfully updated."},"reportGroups":{"save":"Update reports"}},"listProjects":{"heading":{"noProjects":"Empty projects list","unexpectedError":"Unexpected error","projectsNotFound":"Some projects not found","projects":"Build projects","tableOptions":"List projects table options"},"text":{"noProjects":"There are no build projects to display","unexpectedError":"An unexpected error occurred during this request"},"validation":{"projectsNotFound":"These project ids were not found: {{ projectNames }}"},"info":{"projects":"Info about build projects"},"button":{"create":"Create project","delete":"Delete","startBuildOptions":"Start build","refresh":{"ariaLive":"Build projects refreshed"}}},"startBuild":{"heading":{"startBuildFailed":"Build failed to start","buildStarted":"Build started","environmentVariablesOverride":"Environment variables override"},"validation":{"unknownError":"An unknown issue caused the build to fail to start"},"flashes":{"success":"You have successfully started the following build: {{ buildId }}","failed":"Build failed to start. The following error occurred: {{ message }}"},"button":{"viewBuild":"View build"},"disableArtifacts":{"label":"Disable artifacts","description":"Turn off artifacts configured for this project"},"enableSessionConnection":{"label":"Session connection","description":"Setup AWS Session Manager to manage your build machine\'s container through an interactive browser-based shell. Service role needs to have AWS Session Manager permissions to enable session connection.","checkbox":{"label":"Enable session connection"},"disabledByLambda":"Session connection isn\'t supported for Lambda compute type"},"configuration":{"footerSubtext":"Git clone depth, timeout"},"codecommit":{"label":{"sourceVersion":"Source version","tag":"Git tag","commit":"Commit ID"},"description":{"sourceVersion":"Latest commit on selected branch","sourceVersionType":"Choose the source version reference type that contains your source code.","branch":"References the branch that contains your source code.","tag":"References the tag that contains your source code.","commit":"References the commit that contains your source code.","branchSelect":"Choose a branch that contains the code to build.","tagSelect":"Choose a tag that contains the code to build.","commitSelect":{"optional":"Choose a commit ID. This can shorten the duration of your build.","required":"Choose a commit ID that contains the code to build."}},"errors":{"branchSelect":{"required":"Must select a branch."},"tagSelect":{"required":"Must select a git tag."},"commitSelect":{"required":"Must select a commit ID."}}}},"stopBuild":{"heading":{"success":"Builds successfully stopped.","error":"Failure"},"text":{"success":"Build {{id}} successfully stopped.","unableToStop":"Unable to stop all builds.","unableToUpdate":"There was an issue updating builds."}},"buildStatus":{"label":{"succeeded":"Succeeded","failed":"Failed","fault":"Fault","timedOut":"Timed out","inProgress":"In progress","stopped":"Stopped","clientError":"Client error","retry":"Retried","pending":"Pending","phase":"Current Phase","outputArtifacts":"Output artifacts"},"header":{"label":"Build status"},"link":{"label":"Go to {{status}} project {{projectName}}"}},"startBuildValidators":{"validation":{"bucketNameRequired":"The bucket name is required","bucketDoesNotExist":"The following bucket does not exist: {{bucketName}}","projectNameRequired":"You must select a project.","repositoryNameRequired":"Repository name is required.","branchNameRequired":"Branch name is required.","providerRequired":"Source provider is required.","sourceVersion":"Source version must be empty when you use an S3 folder for the source location"}},"breadcrumbs":{"codeBuild":"CodeBuild","history":"Build history","newBuild":"Start new build","debug":"Debug build","projects":"Build projects","newProject":"Create build project","cloneProject":"Clone project","editProject":"Edit {{section}}","metrics":"Account metrics","reportGroups":"Report groups","editReportGroup":"Edit {{ reportGroupName }}","createReportGroup":"Create report group","testReportHistory":"Test report history","listFleets":"Compute fleets","createFleet":"Create Fleet","editFleet":"Edit Fleet"},"managedImageSelector":{"label":{"os":"Operating system","runtime":"Runtime","runtimeVersion":"Runtime version","runtimes":"Runtime(s)","image":"Image","runtimeVersionImage":"Image version","runtimeVersionImageDefaultSelection":"Always use the latest image for this runtime version","linuxGPU":"Use GPU-enhanced compute"}},"oauthLandingPage":{"text":{"processing":"Processing OAuth request","confirm":{"github":"Choose Confirm to connect CodeBuild to your GitHub account","bitbucket":"Choose Confirm to connect CodeBuild to your BitBucket account","github_enterprise":"Choose Confirm to connect CodeBuild to your GitHub Enterprise account","secretsManager":"Choose Confirm to save your oauth token to a Secrets Manager secret"}},"button":{"confirm":{"text":"Confirm"},"cancel":{"text":"Cancel"}}},"environmentType":{"validation":{"empty":"Please select an environment type"}},"environmentImage":{"validation":{"empty":"Please enter an environment image location"}},"customImage":{"heading":{"imageRegistry":"Image registry","amazonECR":"ECR account","internalAccount":"ECR account"},"label":{"amazonECR":"Amazon ECR","custom":"Other registry","internalAccount":"My ECR account","externalAccount":"Other ECR account","credential":{"servicePrincipal":"AWS CodeBuild credentials","projectRole":"Project service role"},"location":"External registry URL","registryCredential":"Registry credential","fleetArn":"Fleet ARN"},"description":{"amazonECR":"Use an image from Amazon ECR","custom":"Use an image hosted in an external Docker registry","credential":{"servicePrincipal":"Use the AWS CodeBuild default service role","projectRole":"Use the service role associated with this project to pull the image"}},"internalAccount":{"description":"You can use an ECR image from your account or another that you have access to."},"hint":{"location":"<docker repository>/<docker image name>","registryCredential":"You can supply a secret name or ARN from AWS Secrets Manager to authenticate to an external registry. Providing a credential requires using the project\'s service role to pull the image."}},"ecr":{"validation":{"selectRepository":"Choose an existing Amazon ECR repository","selectRepositoryUri":"Choose a valid Amazon ECR repository URI","selectImage":"Choose an existing Amazon ECR Image"},"label":{"repository":"Amazon ECR repository","image":"Amazon ECR image","repositoryUri":"Amazon ECR repository URI","tag":"Amazon ECR image tag","digest":"Amazon ECR image digest","credentialType":"Image pull credentials"},"description":{"repository":"Choose an Amazon ECR repository","image":"Choose an Amazon ECR image","repositoryUri":"Enter the full image URI in the other account","tag":"Choose an Amazon ECR image tag","digest":"Choose an Amazon ECR image digest","credentialType":"Choose which service role will be authorized to pull the selected image","credentialTypeDisabledByLambda":"Project service role will be used for Lambda Compute Type"}},"vpc":{"validation":{"subnetsEmpty":"Subnets cannot be empty","securityGroupsEmpty":"Security groups cannot be empty"},"label":{"vpc":"VPC","vpcId":"VPC Id","noVpc":"No VPC","subnet":"Subnet","subnets":"Subnets","securityGroup":"Security group","securityGroups":"Security groups","testConnectivity":"Validate VPC Settings"},"description":{"vpc":"Select a VPC that your AWS CodeBuild project will access.","subnet":"Select the VPC subnets that AWS CodeBuild should use to set up your VPC configuration. For high availability, we recommend selecting multiple subnets from multiple Availability Zones. Ensure that your subnets include a NAT gateway.","securityGroups":"Select the VPC security groups that AWS CodeBuild should use to work with your VPC. Ensure that your security groups allow outbound connections.","disabledByLambda":"VPC isn\'t supported for Lambda compute type"},"connectivity":{"connectionSucceeded":"The VPC with ID {{selectedVpcId}} has an internet connection.","error":{"noInternetGateway":"The VPC with ID {{vpcId}} might not have an internet connection. CodeBuild cannot detect an internet gateway on this VPC.","noRouteToInternetGateway":"The VPC with ID {{vpcId}} might not have an internet connection. CodeBuild cannot find the 0.0.0.0/0 destination for the target internet gateway with subnet ID {{subnetId}}.","noRouteToNatGateway":"The VPC with ID {{vpcId}} might not have an internet connection because CodeBuild cannot find the 0.0.0.0/0 destination for the target NAT gateway with subnet ID {{subnetId}}.","noRouteToNatGatewayDevice":"The VPC with ID {{vpcId}} might not have an internet connection because CodeBuild cannot find the 0.0.0.0/0 destination for the target NAT gateway with subnet ID {{subnetId}}. Verify your VPC has an internet connection through the device with ID {{deviceId}}.","publicSubnet":"The VPC with ID {{vpcId}} might not have an internet connection because the provided subnet with ID {{subnetId}} is public. Provide a private subnet with the 0.0.0.0/0 destination for the target NAT gateway and try again.","detectionFailed":"Validation failed. Check the current account to ensure it has permissions to access the VPC."}}},"environment":{"subtext":{"additionalConfiguration":{"default":"Timeout, privileged, certificate, VPC, compute type, environment variables","noVpc":"Timeout, privileged, certificate, compute type, environment variables","fileSystems":"Timeout, privileged, certificate, VPC, compute type, environment variables, file systems","lambda":"Compute type, environment variables, parameters, timeout","reservedCapacityNoVpc":"Timeout, privileged, certificate, environment variables","reservedCapacity":"Timeout, privileged, certificate, VPC, environment variables"}},"label":{"provisioningModel":"Provisioning model","current":{"provisioningModel":"Current provisioning model"},"new":{"provisioningModel":"Provisioning model"},"onDemand":"On-demand","fleet":"Reserved capacity","fleetArn":"Fleet name","fleetOverFlow":"Overflow behavior for project\'s excess builds","environmentImage":"Environment image","managedImage":"Managed image","environmentType":"Choose an environment type","customImage":"Custom image","computeConfig":"Compute","ec2ComputeConfig":"EC2","lambdaComputeConfig":"Lambda","createFleet":"Create new fleet"},"fleet":{"noOption":"No fleets","createFleet":"Create fleet","creating":"Creating fleet","successAlert":"Successfully created fleet {{fleetName}}.","alertHeader":"Continue to create project","alertMessage":"Create a new CodeBuild fleet and return to create page to finish configuring your project."},"description":{"provisioningModel":"Use a dedicated fleet of instances for builds. A fleet\'s compute and environment type will be used for the project.","onDemand":"Automatically provision build infrastructure in response to new builds.","fleet":"Use an image managed by AWS CodeBuild","fleetArn":"Choose an existing fleet for this project, or <1>create a new fleet</1>.","fleetOverFlow":"Define the behavior of excess builds when fleet is fully in use","managedImage":"Use an image managed by AWS CodeBuild","customImage":"Specify a Docker image","ec2ComputeConfig":"Optimized for flexibility during action runs","lambdaComputeConfig":"Optimized for speed and minimizes the start up time of workflow actions"},"option":{"label":{"fleetOverFlow":{"queue":"Queued build until fleet capacity is available","onDemand":"Use on-demand capacity, bypassing the fleet"}}},"hint":{"privileged":"Enable this flag if you want to build Docker images or want your builds to get elevated privileges","customEntrypoint":"Enable this checkbox if you want to run the entrypoint commands present in the custom Docker image.","autoDiscover":"Enable this flag to search build files for supported report file types and generate reports","privilegedDisabledByLambda":"Privileged Mode isn\'t supported for Lambda compute type"},"variables":{"environmentVariables":"Environment variables","validations":{"nameRequired":"Name required","nameNotUnique":"Name must be unique","valueRequired":"Value required"},"actions":{"addVariable":"Add environment variable","removeVariable":"Remove environment variable"},"plaintext":"Plaintext","parameter":"Parameter","createParameter":"Create parameter","noEnvironmentVariables":"No environment variables in this project.","createParameterModal":{"header":"Create parameter","submit":"Create parameter","modalDescription":"You can use Parameter Store in Amazon EC2 Systems Manager to store sensitive values required by your builds. For example, passwords and AWS access IDs.","name":{"label":"Name","validation":{"required":"Name is required","length":"Maximum length for the fully qualified parameter name is 1011 characters.","invalidPrefix":"Name cannot be prefixed with \\"aws\\" or \\"ssm\\".","containsSpaces":"Name cannot contain spaces."}},"value":{"label":"Value","validation":{"required":"Value is required","length":"Maximum length is 4096 characters."}},"key":{"label":"KMS key - optional","validation":{"kmsString":"Invalid KMS key. Must match pattern: \\"^([a-zA-Z0-9:/_-]+)$\\"","length":"Maximum length is 256 characters."}},"success":{"message":"New parameter: {{ codebuildNameString }} successfully created.","header":"Success"}},"secretsManager":"Secrets Manager"},"ec2ComputeConfig":"EC2","lambdaComputeConfig":"Lambda"},"cache":{"hint":{"lifecycle":"You can apply a lifecycle expiration action to all or a subset of objects in the cache bucket based on the path prefix.","disabledByLambda":"Cache isn\'t supported for Lambda compute type"},"label":{"noCache":"No cache","cacheBucket":"Cache bucket","prefix":"Cache path prefix","lifecycle":"Cache lifecycle (days)","local":"Local"},"button":{"addExpiration":"Add expiration"},"href":{"lifecycle":"Lifecycle management"},"header":{"lifecycleError":"Amazon S3 responded with an error"},"local":{"label":"Select one or more local cache options.","error":"At least one option required."},"checkbox":{"label":{"dockerLayerCache":"Docker layer cache","sourceCache":"Source cache","customCache":"Custom cache"},"description":{"dockerLayerCache":"Caches existing Docker layers so they can be reused. Requires privileged mode.","sourceCache":"Caches .git metadata so subsequent builds only pull the change in commits.","customCache":"Caches directories specified in the buildspec file."}}},"clearCache":{"heading":{"clear":"Clear the cache for the {{projectName}} project?","success":"Success","error":"Failure"},"button":{"clear":"Clear cache"},"confirm":{"clear":"Clear"},"text":{"clear":"You will lose cached reusable pieces of your build environment that can save time during a build.","success":"The cache for the {{projectName}} project was cleared.","unableToClear":"There was a problem clearing the {{projectName}} project cache.","resourceNotFound":"The specified AWS resource for the {{projectName}} project cannot be found."}},"source":{"subtext":{"additionalConfiguration":"Git clone depth, build badge","additionalConfigurationGitHubEnt":"Git clone depth, insecure SSL, build badge","buildStatusConfig":"Build status config"},"description":{"insecureSsl":"Enable this flag to ignore SSL warnings while connecting to project source.","cloneDepth":"Enable this flag to make your project\'s build status visible and embeddable","buildStatus":"Report build statuses to source provider when your builds start and finish","buildStatusConfig":{"context":"Configurable context with build status with support for environment variables.","targetUrl":"Custom URL sent with build status with support for environment variables."}},"label":{"enableInsecureSsl":"Enable insecure SSL","enableBuildBadge":"Enable build badge","enableGitSubmodules":"Use Git submodules","buildStatusConfig":{"context":"Status context","targetUrl":"Target URL"}},"repository":{"link":{"error":"No repository name"}}},"viewBuild":{"button":{"retry":"Retry build","watchLogs":"Tail logs","jumpToBottom":"Scroll to bottom","currentPhase":"Current phase"},"label":{"initiator":"Initiator","buildArn":"Build ARN","sourceVersion":"Source version","buildConfiguration":"Build configuration","logs":"Build logs","phases":"Phase details","reports":"Reports","environmentVariables":"Environment variables","exportedEnvironmentVariables":"Exported environment variables","utilization":"Resource utilization"},"text":{"environmentVariablesEmpty":"No environment variables configured for this build","logLines":"Showing the last {{lineLimit}} lines of the build log.","noLogs":"No logs available for this build","buildNotStarted":"Build has not started"},"href":{"viewLogs":"View entire log"},"th":{"context":"Context"},"notSupportedAcrossAccount":{"logs":"Build logs are not supported on shared builds"}},"optout-flash":{"header":"Introducing the new AWS CodeBuild console experience!","body1":"We have updated the AWS CodeBuild console experience to make it easier to use."},"buildMetrics":{"header":{"buildMetrics":"Build metrics"},"button":{"cloudWatch":"View in CloudWatch"},"label":{"builds":"Builds","duration":"Duration","succeededBuilds":"Succeeded Builds","failedBuilds":"Failed Builds"}},"resourceUtilMetrics":{"header":"Resource utilization metrics","description":"Builds shorter than 1 minute are not available in metrics","buildInstance":{"description":"Time frame of the metrics are from build start time to build end time. Metrics are not available for builds shorter than 1 minute."},"label":{"cpuUtilized":"CPU utilized (CPU units)","memoryUtilized":"Memory utilized (Megabytes)","cpuMemoryUtilizedPercentage":"CPU and memory utilized percentage (Percent)","storage":"Storage (Bytes)"}},"accountMetrics":{"header":{"metrics":"Account metrics"}},"ram":{"readonly":{"projects":{"error":"Shared projects allow read-only access. Project notifications, Amazon CloudWatch Logs, triggers, and metrics are available only through the account that owns the resource."},"reportGroup":{"error":"Shared report groups allow read-only access. A report group\'s export location may be available only through the account that owns the resource."}},"projects":{"label":{"currentAccount":"Your projects"},"filter":{"label":{"allSharedAccounts":"Shared projects","allTaggedAccounts":"Tagged projects"}}},"reportGroups":{"label":{"currentAccount":"Your report groups"},"filter":{"label":{"allSharedAccounts":"Shared report groups"}}}},"fleet":{"createFleet":{"form":{"header":"Compute fleet configuration","footer":{"azSubtext":"Availability zone, ","autoScalingSubtext":"Fleet utilization rate, Maximum capacity, ","vpcSubtext":"VPC, Fleet Service Role, ","defaultSubtext":"Tags"},"configuration":{"header":"Compute fleet configuration","headerDescription":"Fleet reduces provisioning latency by dedicated instances that won’t be cleaned up after inactivity."},"info":{"messageforLinuxWindows":"With reserved capacity, your machines are always running and will incur costs as long they are provisioned. Billing for reserved capacity is per instance minute with a 1-hour minimum allocation period per instance. At the  end of the 1-hour minimum allocation period, the instance can be released at any time with no further commitment.","messageforMac":"With reserved capacity, your machines are always running and will incur costs as long they are provisioned. Billing for reserved capacity is per instance minute with a 24-hour minimum allocation period per instance. At the  end of the 24-hour minimum allocation period, the instance can be released at any time with no further commitment.","link":"View Documentation"},"field":{"name":{"text":"Compute fleet name","description":"The name must have 3-255 characters. Valid characters: A-Z, a-z, 0-9, and ._-(hyphen)"},"operatingSystem":"Operating system","architecture":"Architecture","environmentType":"Environment type","availabilityZone":"Availability zone","computeType":{"text":"Compute","description":"The type of instances included in this fleet"},"capacity":{"text":"Capacity","description":"Number of instances to include in this fleet. There must be at least 1 instance in your fleet.","infoMessage":"Capacity must be integer greater than or equal to 0."},"maxCapacity":{"text":" Maximum capacity","description":"Maximum number of instances to include in this fleet when auto-scaling. There must be at-least 1 instance in your fleet"},"fleetUtilizationRate":{"text":"Fleet utilization rate","description":"Fleet utilization rate must be a number between 0 and 100"},"scalingMode":{"text":"Scaling mode","description":"Choose the behavior when demand exceeds the fleet capacity. <1>Learn more<1/>."},"overflowBehavior":{"text":"Overflow behavior","description":"Choose the behavior when demand exceeds the fleet capacity. <1>Learn more<1/>."},"fleetServiceRole":{"text":"Fleet service role","description":"Fleet service role can be updated. You can create a new service role or use an existing service role."},"fleetVpcConfig":{"text":"VPC","description":"Select a VPC that your AWS CodeBuild fleet will access."},"selectingImageTypeFieldLabel":"Environment image","managedImageTile":{"label":"Managed image","description":"Use an image managed by CodeBuild"},"customImageTile":{"label":"Custom image","description":"Specify a custom macOS image"},"majorVersionFieldLabel":"Major version","minorVersionFieldLabel":"Minor version","alwaysUseLatestVersion":"Always use latest version","amiId":"AMI","amiIdPlaceholder":"Select AMI"},"successMessage":"Fleet created successfully","submitText":"Create fleet","selected":"Selected"}},"editFleet":{"form":{"header":"Edit fleet","infoMessage":"You cannot edit operating system, architecture, or compute type for an active fleet with capacities. Deactivate the fleet first to make changes to these attributes."},"editForm":{"save":"Save fleet","successMessage":"Fleet {{ fleetName }} successfully updated."}},"viewFleet":{"dictionaryItem":{"name":"Name","fleetArn":"Fleet ARN","status":"Status","operatingSystem":"Operating System","environmentType":"Environment Type","computeType":"Compute Type","availabilityZone":"Availability Zone","overflowBehavior":"Overflow Behavior","autoScaling":{"text":"Scaling Mode","maximumCapacity":"Maximum Capacity","fleetUtilizationRate":"Fleet Utilization Rate"},"capacity":"Capacity","lastModified":"Last modified","created":"Created","ami":"Image"},"status":{"creating":"Creating","action_required":"Action Required","active":"Active","pending_deletion":"Pending Deletion","deleting":"Deleting","rotating":"Rotating","updating":"Updating","create_failed":"Create Failed","inactive":"Inactive","insufficient_capacity":"Insufficient Capacity","unknown":"Unknown","update_failed":"Update Failed"},"errorCodes":{"UNAUTHORIZED_OPERATION_CREATE_NETWORK_INTERFACE":"The fleet service role is not authorized to perform ec2:CreateNetworkInterface","UNAUTHORIZED_OPERATION_CREATE_NETWORK_INTERFACE_PERMISSION":"The fleet service role is not authorized to perform ec2:CreateNetworkInterfacePermission","UNAUTHORIZED_OPERATION_DELETE_NETWORK_INTERFACE":"The fleet service role is not authorized to perform ec2:DeleteNetworkInterface","UNAUTHORIZED_OPERATION_DESCRIBE_DHCP_OPTIONS":"The fleet service role is not authorized to perform ec2:DescribeDhcpOptions","UNAUTHORIZED_OPERATION_DESCRIBE_SUBNETS":"The fleet service role is not authorized to perform ec2:DescribeSubnets","UNAUTHORIZED_OPERATION_DESCRIBE_VPCS":"The fleet service role is not authorized to perform ec2:DescribeVpcs","UNAUTHORIZED_OPERATION_MODIFY_NETWORK_INTERFACE_ATTRIBUTE":"The fleet service role is not authorized to perform ec2:ModifyNetworkInterfaceAttribute","REQUEST_LIMIT_EXCEEDED":"The maximum request rate permitted by the Amazon EC2 APIs has been exceeded for your account","DNS_NOT_FOUND":"Domain name server for provided vpc not found","SUBNET_ID_NOT_FOUND":"At least one of the subnet IDs does not exist","VPC_NOT_FOUND":"VPC not found in account","INSUFFICIENT_SUBNET":"The subnets have insufficient free addresses for this build","DEDICATED_VPC_NOT_ALLOWED":"VPCs with dedicated instance tenancy cannot be used with AWS CodeBuild","DHCP_OPTION_SET_REQUIRED":"VPCs must have a DHCP option set to be used with AWS CodeBuild","EC2_SERVICE_UNAVAILABLE":"AWS EC2 request has failed due to a temporary failure of the EC2 server.","UNABLE_TO_ASSUME_ROLE":"Unable to assume fleet service role."},"environmentType":{"arm":"ARM","linux":"Linux EC2","linuxGpu":"Linux GPU","windows2019":"Windows 2019","windows2022":"Windows 2022","macArm":"Mac ARM"},"tags":{"noTag":"No tags set on this fleet"}},"listFleet":{"instruction":{"fleet":{"header":"Fleet","content":"Fleet is a group of dedicated instances that won’t be cleaned up after inactivity. Reserved capacity reduces provisioning latency."},"createFleet":{"header":"Create fleet","content":"You can create fleet by defining fleet name, environment type, compute type, capacity and availability zones."},"useFleet":{"header":"Use fleet in projects","content":"A fleet can be used for one or more projects. You can add a project on fleet page or select fleet in project environment."}},"fleetTable":{"header":"Compute fleets","headerDescription":"Use fleet as dedicated instances to reduce provisioning latency.","columnDefinition":{"name":"Name","operatingSystem":"Operating System","architecture":"Architecture","machineType":"Machine Type","status":"Status","capacity":"Capacity","scalingMode":"Scaling Mode"}},"createFleet":{"button":"Create Fleet"},"viewDetails":{"button":"View Details"}},"deleteFleet":{"delete":{"header":"Delete fleet: {{ fleetName }}","defaultHeader":"Delete fleet","text":"Any future builds for the projects applied with this fleet will fail after deletion. Consider updating projects\' provisioning model before deleting.","success":"Successfully deleted fleet {{ fleetArn }}"}},"operatingSystem":{"linux":"Amazon Linux","windows_2019":"Windows Server 2019","windows_2022":"Windows Server 2022","mac":"macOS"},"architecture":{"amd64":"x86_64","arm64":"Arm64"},"environmentType":{"linux":"Linux EC2","linuxGpu":"Linux GPU"},"compute":{"instanceSizeSmall":"3 GB memory, 2 vCPUs","instanceSizeMedium":"7 GB memory, 4 vCPUs","instanceSizeLarge":"15 GB memory, 8 vCPUs"},"scalingMode":{"auto":"Provision additional capacity on-demand","disabled":"Wait until additional fleet capacity is available"},"overflowBehavior":{"on_demand":{"label":"On-demand","description":"Run on CodeBuild on-demand."},"queue":{"label":"Queue","description":"Wait on the existing fleet instance to become available."}},"fleetServiceRole":{"label":"Fleet Service Role","description":"Please use an existing service role. <1></1>","linkText":"Service role permissions"},"fleetVpcConfig":{"vpc":{"label":"VPC","description":"Select a VPC that your AWS CodeBuild fleet will access."},"subnet":{"label":"Subnet","description":"Select the VPC subnet that AWS CodeBuild should use to set up your VPC configuration. Ensure that your subnet include a NAT gateway."},"securityGroups":{"label":"Security Groups","description":"Select the VPC security groups that AWS CodeBuild should use to work with your VPC. Ensure that your security groups allow outbound connections."}}},"debugBuild":{"header":"Debug build","sectionHeader":"Buildspec","description":"In AWS CodeBuild, you can pause a running build and then use AWS Systems Manager Session Manager to connect to the build container and view the state of the container.","steps":{"header":"Debug steps","message1":"Before you start the debug build, insert the <c>codebuild-breakpoint</c> command into any of your build phases to pause the build.","message2":"During the build, open the <bold>AWS Session Manager</bold> link on the <bold>Build details</bold> page to connect to the build container.","message3":"After you finish reviewing the build container, run the <c>codebuild-resume</c> command from the container shell to resume the build."},"preCheck":{"alert":{"header":"Prerequisites are missing","description":"To allow Session Manager to be used with your build session, you must enable session connection for your build.","learnMore":"Learn more"},"error":{"message":{"INVALID_SESSION_MANAGER_IMAGE":"To use a custom image for your build, you must install the SSM Agent and copy the required file into your image.","UNABLE_TO_UPDATE_SESSION_MANAGER_ROLE":"Make sure that your CodeBuild service role have the correct SSM policy."}}},"originEditor":{"header":"Example code","description":"The buildspec file cannot be previewed in the editor. You can create a buildspec within the editor and start a build with override."}},"navigation":{"new":{"label":"New","reserveCapacity":{"header":"Introducing reserved capacity support for builds","content":"AWS CodeBuild now supports reserved capacity, to enable building and testing of software packages with latency sensitive workloads."},"githubActions":{"header":"AWS CodeBuild now supports GitHub Actions","content":"AWS CodeBuild now supports running self-hosted GitHub Actions runners in build containers to process GitHub Actions workflow jobs."}}},"sourceConnections":{"popup":{"header":"Manage {{ provider }} Connections","managedConnectionLabel":"CodeBuild managed secrets","managedConnectionDescription":"Store your access tokens directly with CodeBuild to be used in build projects","customConnectionLabel":"Custom managed tokens","customConnectionDescription":"Custom managed tokens will be stored in secrets manager and will be fetched on demand for use by CodeBuild","customConnection":{"awsCliExpandLabel":"Show aws cli creation command","fields":{"secretName":{"label":"Secret name","emptyError":"Please provide a secret name","maxLengthError":"Input is over the maximum length of {{ length }} characters"},"secretDescription":{"label":"Secret description","maxLengthError":"Input is over the maximum length of {{ length }} characters"}}}},"sourceAuthSelector":{"popupLabelCreate":"Create new connection","popupLabelManage":"Manage connections","label":"Select a source connection","loadingText":"Loading options...","tags":{"provider":{"label":"Provider"},"type":{"label":"Type"}},"managedConnection":{"label":"AWS CodeBuild Managed Connection","description":"AWS CodeBuild Managed Connection","generic":"Managed Connection","OAUTH":"Managed OAuth Connection","PERSONAL_ACCESS_TOKEN":"Managed Personal Access Token"},"secretsManagerConnection":{"label":"AWS SecretsManager Stored Connection","loadError":"Error loading secrets from AWS Secrets Manager","filterSecretsSearch":"Only show secrets with tag codebuild:source"},"noSource":{"expandLabel":"Add secrets manager connection fallback","removeLabel":"Remove"}}}}')},codecommit:{...JSON.parse('{"addSubscriptionModal":{"header":"Add email subscriber","actions":{"submit":"Add"},"endpoint":{"label":"Email address","validation":{"required":"Email address is required","email":"Email address is not valid"}},"success":{"message":"Subscription successfully added"}},"breadcrumbs":{"home":"CodeCommit","listRepositories":"Repositories","createRepository":"Create repository","createPullRequest":"Create pull request","listBranches":"Branches","listTags":"Git tags","listCommits":"Commits","listPullRequests":"Pull requests","putFile":"File","compareReferences":"Compare","editPullRequest":"Edit","repositorySettings":"Settings","approvalRuleTemplates":"Approval rule templates","createApprovalRule":"Create approval rule","createApprovalRuleTemplate":"Create approval rule template"},"browseRepositoryBlob":{"actions":{"viewSource":"View source","viewRendered":"View rendered"},"alert":{"binaryContent":"This file is either a binary file or the character encoding method is unsupported. The contents could not be displayed.","trojanSource":"This file contains Unicode text that cannot be displayed in the CodeCommit console. These hidden characters might be interpreted or compiled. This could lead to vulnerabilities or unexpected behavior. We recommend that you review this file in a code editor that displays hidden Unicode characters."}},"browseRepositoryTree":{"actions":{"addFile":{"label":"Add file","createFile":"Create file","uploadFile":"Upload file"}},"alt":{"parentDirectory":"Parent directory","directory":"Directory","file":"File"},"symlink":"Symbolic link","gitlink":"Git submodule","th":{"name":"Name"}},"cloneUrl":{"label":"Clone URL","https":"Clone HTTPS","ssh":"Clone SSH","gitRemoteHttps":"Clone HTTPS (GRC)","instructions":"Connection steps"},"commenting":{"actions":{"newComment":"New comment"}},"commentingComment":{"heading":"{{displayUser}} commented {{date}}","deleted":"This comment has been deleted.","actions":{"reply":"Reply","edit":"Edit","delete":{"modal":{"header":"Delete comment contents","content":"Deleting this comment will remove the content of the comment. The comment will remain, with its contents replaced by a deleted comment message. Replies and reactions to this comment will still be shown.{{lineBreak}}Do you want to delete the comment contents as displayed here?"}},"submit":{"reaction":{"flash":{"content":"Your reaction feedback has been submitted.","button":"Cancel"}}},"view":{"all":{"reactions":"View all reactions"}},"currentReaction":"Your emoji reaction is {{currentSelection}}.","no":{"currentReaction":"You haven\'t provided an emoji reaction to this comment."},"deleted":{"user":{"reaction":{"single":"Unknown reaction","multiple":"Unknown reactions"}}}},"action":{"all":{"reactions":{"modal":{"header":"All reactions","button":"OK"}}}},"reactions":{"table":{"header":{"reaction":"Reaction","user":"User"}},"popover":{"content":{"multiple":"You reacted with {{emojiType}}. {{emojiCount}} additional users reacted with this emoji.","single":"You reacted with {{emojiType}}. {{emojiCount}} additional user reacted with this emoji.","deleted":{"user":{"single":"{{deletedCount}} deleted user","multiple":"{{deletedCount}} deleted users"}}}}}},"commentingForChanges":{"header":"Comments on changes"},"commentingForm":{"new":{"label":"New comment"},"edit":{"label":"Edit comment"},"reply":{"label":"Reply to comment"},"replyToBot":{"label":"Reply to this recommendation and choose one of the reaction buttons to provide feedback.","disclaimer":"Feedback and comments will also be shared with Amazon CodeGuru Reviewer and might be used to improve the service."}},"common":{"defaultBranch":"Default branch","branches":"Branches","tags":"Git tags","commits":"Commits","actions":{"createPullRequest":"Create pull request"}},"commitsShell":{"tab":{"list":"Commits","graph":"Commit visualizer","compare":"Compare commits"}},"commitsGraph":{"heading":"Commit visualizer","loadMore":"Load more"},"compareReferences":{"actions":{"compare":"Compare"}},"conflictsPaginator":{"error":{"noConflicts":"This pull request has no merge conflicts to resolve. The source branch might not contain any changes when compared with the destination branch."}},"createBranchModal":{"heading":"Create branch","action":{"submit":"Create branch"},"branchName":{"label":"Branch name","validation":{"required":"A branch name is required. Branch names must be between 1 and 256 allowed characters."}},"branchFrom":{"label":"Branch from","validation":{"required":"Choose a reference to branch from"}},"success":"Branch {{branchName}} has been created."},"createPullRequest":{"header":{"title":"Create pull request"},"actions":{"compare":"Compare"},"success":{"content":"Pull request {{pullRequestId}} has been created."}},"createPullRequestComparisonSummary":{"sameSourceDestinationBranch":"The branch is the same for both the source and the destination. No comparison is possible as they are identical. Choose a different branch for either the source or the destination and then try again.","sameSourceDestinationCommitId":"The source and destination branches both reference the same commit as their head commit. There are no differences between these two branches. You can create a pull request with these branches, but no code changes will be included unless additional commits are pushed to the source branch.","mergeable":"There are currently no conflicts between {{sourceReference}} and {{destinationReference}}. You can close this pull request by merging it in the AWS CodeCommit console.","withConflictsEditor":{"notMergeable":"There are conflicts between the branches that must be resolved before the pull request can be merged. You can resolve them in the console, or you can resolve the conflicts locally and then merge the branches using Git."}},"createPullRequestDifferences":{"isNoMergeBase":"Differences between the source branch and the destination branch cannot be displayed for this pull request. The branch specified as the destination branch includes all the changes in the branch specified as the source branch as well as additional changes. You might have mixed up which branch should be the source, and which branch should be the destination.","isMergeBaseUnknown":"Differences between the source branch and the destination branch cannot be displayed for this pull request. The difference between the source branch and the merge base of the destination branch is too great. Use Git to forward integrate changes in the destination branch into the source branch, squash the source branch commits, or otherwise reduce the number of differences between the two branches."},"createPullRequestForm":{"actions":{"create":"Create pull request"},"tabs":{"changes":"Changes","commits":"Commits"}},"createPullRequestFormDetails":{"header":"Details","field":{"title":{"label":"Title","hint":"150 characters maximum"},"description":{"label":"Description"}}},"createRepository":{"header":{"title":"Create repository","description":"Create a secure repository to store and share your code. Begin by typing a repository name and a description for your repository. Repository names are included in the URLs for that repository."},"form":{"header":"Repository settings","actions":{"create":"Create"},"field":{"repositoryName":{"label":"Repository name","hint":"100 characters maximum. Other limits apply."},"repositoryDescription":{"label":"Description","hint":"1,000 characters maximum"}},"guru":{"description":"Get recommendations to improve the quality of the Java code for all pull requests in this repository.","iamDisclaimer":"A service-linked role will be created in IAM on your behalf if it does not exist."},"guruWithPython":{"description":"Get recommendations to improve the quality of the Java and Python code for all pull requests in this repository."}}},"createSnsTopicModal":{"header":"Create SNS topic","actions":{"submit":"Create"},"topicName":{"label":"Topic name","validation":{"required":"Topic name is required","maxLength":"256 characters maximum"}},"success":{"message":"SNS topic successfully created"}},"deleteBranchModal":{"header":"Delete branch","actions":{"confirm":"Delete branch"},"prompt":"The following branch will be deleted from the remote repository in AWS CodeCommit: {{branchName}}. After deleting, this branch might still exist in local repositories.","alert":{"content":"Deleting a branch from AWS CodeCommit cannot be undone from the console. However, users might continue to have a copy of this branch in their local repositories until the next time they pull changes."}},"deleteRepository":{"modal":{"description":{"prompt":"Are you sure you want to delete the repository {{repositoryName}}?","deletionWarning":"This will delete the repository in AWS CodeCommit, including all branches, triggers, comments, pull requests, and history. Deleting the repository cannot be undone.","accessWarning":"Users will no longer be able to connect to the repository in AWS CodeCommit, but they will still have access to their local repositories."}},"section":{"description":"This will delete the repository in AWS CodeCommit, including all branches, triggers, comments, pull requests, and history.","action":"Delete repository","header":"Delete repository"},"flash":{"success":{"message":"{{ repositoryName }} successfully deleted."}}},"differences":{"error":{"differences":"An error occurred while loading the differences.","diff":{"generic":"Differences cannot be displayed.","tooLarge":"The difference cannot be displayed. Either an individual file is too large to display, or the overall difference between the files is too complex."}},"info":{"noDifferences":"There are no differences to display.","cannotDisplay":"Difference cannot be displayed","binary":"Binary files cannot be displayed, and the content of binary files is not shown.","symlink":"Differences within symbolic links cannot be displayed.","gitlink":"Differences within Git submodules cannot be displayed."},"eof":{"noNewLine":"No newline is present at the end of the file."}},"differencesBar":{"page":"Page {{page}} of {{pages}}","actions":{"goToFile":"Go to file","hideWhitespace":"Hide whitespace changes","hideComments":"Hide comments","diffVariant":{"inline":"Unified","split":"Split"}}},"differencesContainer":{"changeType":{"added":"Added","deleted":"Deleted"},"actions":{"browseFileContents":"Browse file contents","commentOnFile":"Comment on file"}},"editPullRequest":{"success":{"content":"Pull request {{pullRequestId}} has been updated."},"form":{"header":"Edit {{pullRequestId}}: {{title}}"},"section":{"header":"Details"},"field":{"title":{"label":"Title","validation":{"required":"A title is required"}},"description":{"label":"Description"}}},"guru":{"addGuru":{"label":"Enable Amazon CodeGuru Reviewer for Java"},"addGuruWithPython":{"label":"Enable Amazon CodeGuru Reviewer for Java and Python"},"settings":{"general":{"description":"When you associate this repository with Amazon CodeGuru Reviewer, you will receive recommendations to help improve Java code in all pull requests."},"disable":{"button":"Disassociate repository"},"enable":{"button":"Associate repository"},"header":"Amazon CodeGuru Reviewer for Java","timeAlert":{"association":"Association can take up to 10 minutes. Choose the refresh button to display the most recent status.","disassociation":"Disassociation can take up to 10 minutes. Choose the refresh button to display the most recent status."},"statusLabel":"Status","notEnabled":"Not associated","status":{"associated":"Associated","associating":"Associating","disassociating":"Disassociating","failed":"Failed"}}},"guruWithPython":{"settings":{"general":{"description":"When you associate this repository with Amazon CodeGuru Reviewer, you will receive recommendations to help improve Java and Python code in all pull requests."},"header":"Amazon CodeGuru Reviewer for Java and Python"}},"listBranches":{"th":{"branchName":"Branch name","commitDate":"Last commit date","commitMessage":"Commit message","actions":"Actions"},"actions":{"createPullRequest":"Create pull request","viewLastCommit":"View last commit","viewBranch":"View branch","createBranch":"Create branch","deleteBranch":"Delete branch","copyBranch":"Copy branch name","browse":"Browse"}},"listCommits":{"th":{"commitId":"Commit ID","commitMessage":"Commit message","commitDate":"Commit date","author":"Author","actions":"Actions"},"actions":{"copyCommitId":"Copy ID","browse":"Browse"}},"listCommitsFromMergeBase":{"status":{"empty":"Differences between the source branch and the destination branch cannot be displayed for this pull request. Either the source branch has no commits, has had its tip reset to the same commit as the destination branch, or the source branch has been orphaned. To fix this problem, commit and push some code to the source branch, reset the tip of the source branch, or close this pull request and create another.","paginationNotAvailable":"The divergence between the source branch and the destination branch contains too many commits to display in the AWS CodeCommit console. To view a full commit list, use your Git client."}},"listRepositories":{"heading":"Repositories","th":{"repositoryName":"Name","repositoryDescription":"Description","lastModified":"Last modified","cloneUrl":"Clone URL"},"actions":{"viewRepository":"View repository","createRepository":"Create repository"},"cloneUrl":{"https":"HTTPS","ssh":"SSH","gitRemoteHttps":"HTTPS (GRC)"}},"listTags":{"heading":{"title":"Git tags"},"th":{"tagName":"Tag name","commitId":"Commit ID","commitMessage":"Commit message","commitDate":"Commit date","actions":"Actions"},"actions":{"browse":"Browse","copyTag":"Copy tag name"}},"referenceSelector":{"filterPrompt":"Type to filter.","noMatch":"No results found.","useCommitId":"Use commit ID","commitsLink":"Browse commits"},"repositoryValidator":{"required":"Repository name is required.","nameMaxLength":"Repository name must be less than 100 characters.","descriptionMaxLength":"Repository description is too long."},"repositoryNameForm":{"header":"Repository name","repositoryName":{"label":"Repository name","hintText":"100 characters maximum"},"repositoryId":{"label":"Repository ID"},"repositoryArn":{"label":"Repository ARN"},"save":"Save"},"repositoryDescriptionForm":{"header":"Repository description","previewMarkdown":"Preview markdown","description":{"label":"Description"}},"repositoryDefaultBranchForm":{"header":"Default branch","defaultBranch":{"label":"Default branch","description":"Changing the default branch for a repository affects those users who clone the repository after you make the change."},"repositoryIsEmpty":"The repository is empty."},"repositoryNotifications":{"settings":{"heading":"Notifications","editHeading":"Configure notifications","description":"Set up notifications so that repository users will receive emails about repository events. Specify the users that will receive emails in Subscriptions after you set up notifications.","actions":{"setUp":"Set up"},"snsTopic":{"label":"SNS topic","description":"Choose an SNS topic to use to send email notifications.","validation":{"required":"An Amazon SNS topic is required."},"create":"Create SNS topic"},"eventStatus":{"label":"Event status","enabled":"Enabled","disabled":"Disabled","field":"Enable notifications","none":"Not configured"},"cweRule":{"label":"CloudWatch event rule","description":"An Amazon CloudWatch Event rule will be created for your repository in your AWS account. Do not manually edit or modify this rule, or notifications might not work as expected."},"pullRequestUpdateEvents":{"label":"Pull request update events","description":"Notify subscribers when a pull request is created, updated, or closed."},"pullRequestCommentEvents":{"label":"Pull request comment events","description":"Notify subscribers when someone comments on a pull request."},"commitCommentEvents":{"label":"Commit comment events","description":"Notify subscribers when comments and replies are added to commits."},"eventTypes":{"label":"Event types"},"eventType":{"enabled":"Enabled","disabled":"Not enabled"},"success":{"content":"Notification settings updated"},"ruleDescription":"An Amazon CloudWatch Event rule has been created by AWS CodeCommit for the following repository: {{repositoryArn}}."}},"mergePullRequestForm":{"mergeTypes":{"fastForward":{"label":"Fast forward merge","description":"Merges the branches and moves the destination branch pointer to the tip of the source branch. This is the default merge strategy in Git."},"squash":{"label":"Squash and merge","description":"Combines all commits from the source branch into a single merge commit in the destination branch."},"threeWay":{"label":"3-way merge","description":"Creates a merge commit and adds individual source commits to the destination branch."}},"form":{"h1":"Merge pull request {{pullRequestId}}: {{title}}","submit":"Merge pull request","header":"Merge request details","pullRequestLabel":"Pull request:","mergeStrategy":{"label":"Merge strategy","description":"Determines the way in which the current pull request will be merged into the destination branch"},"delete":{"checkbox":"Delete source branch {{branchName}} after merging?"},"threeWay":{"commitMessage":"Merge branch \'{{source}}\' into {{destination}}"},"messageEditor":{"label":"Commit message"}},"error":{"notMergeable":"There are conflicts that must be resolved before you can merge."},"conflictsAlert":{"text":"There are conflicts between the branches that cannot be merged automatically. Choose Resolve conflicts or use your Git client to resolve these conflicts."}},"notificationsSubscriptionsTable":{"header":{"title":"Subscribers","description":"Choose the users or services you want to receive notifications of repository events."},"actions":{"add":"Add","delete":"Delete"},"empty":{"title":"You haven’t set up notifications","content":"After you have set up notifications, you can add subscribers.","setUpButton":"Set up notifications"},"th":{"protocol":"Protocol","endpoint":"Address or endpoint","status":"Subscription status"},"status":{"unconfirmed":"Unconfirmed","confirmed":"Confirmed"},"delete":{"success":"The subscription has been deleted."}},"pullRequestsTable":{"header":{"title":"Pull requests"},"th":{"title":"Pull request","author":"Author","destination":"Destination","lastActivityDate":"Last activity","status":"Status","approvalStatus":"Approval status"},"actions":{"viewPullRequests":{"unknown":"View pull requests","all":"All pull requests","open":"Open pull requests","closed":"Closed pull requests","my":"My pull requests","myOpen":"My open pull requests","myClosed":"My closed pull requests"},"createPullRequest":"Create pull request"}},"pullRequestActivityComment":{"header":{"commentOnChanges":"Comment on changes","commentOnFile":"Comment on {{filePath}}","commentOnLine":"Comment on line {{lineNumber}} of {{filePath}}"}},"pullRequestActivityEvent":{"created":"Pull request created {{date}}. {{user}} created the pull request.","closed":"Pull request status changed to closed {{date}}. {{user}} changed the pull request status.","opened":"Pull request status changed to open {{date}}. {{user}} changed the pull request status.","merged":"Pull request merged {{date}}. Pull request branch merged to {{branchName}}. This branch is in {{repositoryName}}. {{user}} merged the branch.","sourceUpdated":"Pull request updated {{date}}. One or more commits added. {{user}} updated the pull request."},"pullRequestApprovals":{"actions":{"approve":{"action":"Approve","success":"You have approved the pull request."},"revoke":{"action":"Revoke approval","success":"You have revoked your approval of the pull request."}},"table":{"header":"Approvals"},"property":{"approver":"Approver","status":"Status"},"status":{"approved":"Approved"},"override":{"modal":{"warning":"By choosing override, you will disable all approval rules for the current revision of this pull request. You will be able to merge the code without meeting the requirements in those approval rules. This can result in code that does not meet quality standards. Make sure that you are satisfied with all code changes in this pull request before overriding the approval rules.","prompt":"Are you sure you want to override?","title":"Override approval rules","submit":"Override","revoke":{"title":"Revoke override","warning":"The approval rule requirements for this pull request do not currently apply. You can re-apply the approval rule requirements for the current revision of this pull request by choosing to revoke the override.","submit":"Revoke override"}},"callToAction":"Override approval rules","revoke":{"callToAction":"Revoke override","success":"Sucessfully revoked override"},"success":"Successfully overrode approval"}},"pullRequestApprovalRules":{"table":{"actions":{"create":"Create approval rule","viewTemplates":"View templates"},"header":{"pullRequestApprovalRules":"Approval rules","appliedTemplates":"Approval rules (applied by template)"}},"property":{"approvalRule":"Approval rule","origin":"Template name","approvalsNeeded":"Number of approvals needed","approvalPool":"Approval pool","status":"Status"},"approvalPoolStatus":{"none":"No approval pool","some":"Approval pool defined"},"status":{"satisfied":"Rule satisfied","notSatisfied":"Rule not satisfied"}},"approvalRuleForm":{"create":{"header":"Create approval rule","success":"Approval rule created"},"edit":{"header":"Edit approval rule","success":"Approval rule updated"},"section":{"header":"Rule details"},"approvalRuleName":{"label":"Rule name"},"approvalsRequired":{"label":"Number of approvals needed"},"approvalPoolMembers":{"label":"Approval pool members","description":"If approval pool members are specified, only approvals from these members will count toward satisfying this rule. You can use wildcards to match multiple approvers with one value.","columnLabel":{"type":"Approver type","value":"Value"},"type":{"codecommitApprovers":{"label":"IAM user name or assumed role","description":"Examples: Mary_Major or My_Role_Name"},"arn":{"label":"Fully qualified ARN","description":"Example: arn:aws:iam::123456789012:user/Mary_Major"}}},"delete":{"success":"Approval rule deleted"}},"approvalStatusIndicator":{"overridden":"Overridden","approved":"Approved","inProgress":"{{rulesSatisfied}} of {{rules}} rules satisfied","noApprovalRules":"No approval rules"},"approvalRuleTemplatesTable":{"title":"Approval rule templates","actions":{"create":"Create template"},"description":"You can create, manage, and delete approval rule templates. To associate or disassociate a template with one or more repositories in your AWS account, edit the template.","property":{"name":"Approval rule template","description":"Description"}},"deleteApprovalRuleTemplate":{"prompt":"Deleting an approval rule template cannot be undone. Deleting a template disassociates it from all repositories before it is deleted. It does not delete any rules created in associated repositories before deletion. Any pull requests created in associated repositories before the template is deleted will continue to have a rule applied to them based on this template.","success":"The approval rule template has been deleted."},"approvalRuleTemplateForm":{"createApprovalRuleTemplate":{"header":"Create approval rule template"},"editApprovalRuleTemplate":{"header":"Edit approval rule template"},"section":{"approvalRuleTemplate":"Approval rule template","associatedRepositories":"Associated repositories"},"approvalRuleTemplateName":{"label":"Approval rule template name"},"approvalRuleTemplateDescription":{"label":"Description"},"approvalsRequired":{"label":"Number of approvals needed"},"associatedRepositories":{"label":"Repositories"},"referenceFilters":{"label":"Branch filters","description":"Use branch filters to only apply this template to a pull request if the destination branch name matches a name in the filter list.","columnLabel":{"value":"Branch name"}},"edit":{"success":"The approval rule template has been saved."},"create":{"success":"The approval rule template has been created."}},"pullRequestDigest":{"label":{"author":"Author:","approvals":"Approvals:"}},"pullRequestStatusIndicator":{"open":"Open","merged":"Merged","closed":"Closed"},"putFile":{"header":{"title":{"create":"Create a file","upload":"Upload a file","edit":"Edit a file"}}},"putFileForm":{"validation":{"fileName":{"required":"The file name cannot be empty. Type a name for the file.","maxLength":"File names can be a maximum of 255 valid characters.","characters":"The path is not valid. A path cannot be an empty string, and cannot contain any of the following combinations of characters: \\"/./\\", \\"/../\\", \\"//\\"."},"authorName":{"required":"The commit author cannot be empty. Type a name for the author."},"authorEmail":{"required":"The email address cannot be empty. Type a valid email address."},"commitMessage":{"maxLength":"The commit message is too long. Commit messages are limited to the following number of characters: 32,500."}}},"putFileCommitForm":{"options":{"sameBranch":"Commit change to the current branch.","createPullRequest":"Create a new branch with this change and start a pull request."},"actions":{"submit":"Commit changes"},"header":{"commitChangesTo":"Commit changes to {{branchName}}"},"description":{"newFilePathPreview":"File: {{filePathWithRepositoryName}}"},"field":{"fileName":{"label":"File name","description":"For example, file.txt"},"authorName":{"label":"Author name"},"emailAddress":{"label":"Email address"},"commitMessage":{"label":"Commit message","description":"A default commit message will be used if you do not provide one."}}},"referencePairSelector":{"field":{"destination":{"label":"Destination"},"source":{"label":"Source"}}},"repositorySettingsShell":{"tab":{"settings":"General","notifications":"Notifications","triggers":"Triggers","repositoryTags":"Repository tags","repositoryTagType":"Repository","guru":"Amazon CodeGuru Reviewer"}},"repositoryTriggers":{"services":{"sns":"Amazon SNS","lambda":"Lambda"},"events":{"updateReference":"Push to existing branch","deleteReference":"Delete branch or tag","createReference":"Create branch or tag","all":"All repository events"},"branches":{"all":"All branches"},"columnHeaders":{"name":"Name","events":"Events","branches":"Branches","service":"Service"},"header":"Triggers","reducedFunctionalityMessage":"Creating and editing triggers is not currently supported in this console. Either use the previous console experience or the AWS CLI.","create":"Create trigger","test":{"button":"Test trigger","success":"You can now check that the message was delivered or the AWS Lambda function was called."}},"repositoryTriggersForm":{"create":{"success":"Trigger created"},"edit":{"success":"Trigger saved"},"header":{"create":"Create trigger","edit":"Edit trigger"},"triggerSection":{"header":"Trigger details"},"triggerName":{"label":"Trigger name"},"events":{"label":"Events"},"branchNames":{"label":"Branch names","description":"You can specify up to 10 branches. If you do not choose any branches, this trigger will apply to all branches in the repository."},"serviceSection":{"header":"Service details"},"service":{"label":"Choose the service to use","sns":"Amazon SNS","lambda":"AWS Lambda"},"snsTopic":{"label":"SNS topic","description":"Choose a topic name from the list, or type the topic ARN"},"lambdaFunction":{"label":"Lambda function","description":"Choose a function name from the list, or type the function ARN"},"customData":{"label":"Custom data","description":"For example, a channel name or ID for your chat platform"},"testSection":{"header":"Test trigger"},"permissionsInfo":{"lambda":"AWS CodeCommit must have permission to invoke an AWS Lambda function from this trigger.","sns":"AWS CodeCommit must have permission to publish to Amazon SNS topics from this trigger."}},"resolveConflicts":{"buttonLink":"Resolve conflicts","submit":{"button":"Update pull request"},"actionStripe":{"button":{"acceptSource":"Use source content","acceptDestination":"Use destination content","resetFile":"Reset file","nextFile":"Next file","previousFile":"Previous file"},"title":{"editing":"Editing: {{ file }} ({{fileMode}})","editingNoMode":"Editing: {{ file }}"}},"submitSuccess":{"flash":"Successfully updated pull request: {{ currentPrId }}"},"pageHeader":"Resolve conflicts","explanationText":"Resolve conflicts in each of the files in the list. When you have resolved all conflicts, update the pull request and review the merge strategies available.","bypassGitConflictMarkers":"Allow the merge to proceed with Git conflict markers still present.","binaryFileConflict":"There are conflicts in this file that cannot be displayed. Choose either the source or the destination file to resolve this conflict.","binaryFileSelected":{"source":"Use the source file.","destination":"Use the destination file."},"objectTypeConflict":"There are conflicts that cannot be displayed. The source type conflict is: {{source}}. The destination type conflict is: {{destination}}. Choose either the source or the destination file to resolve this conflict.","resetFileModal":{"header":"Reset file","confirm":"Reset file","mainText":"This will reset the file to its conflicted state, including any file mode conflicts. Are you sure you want to reset {{ fileName }}?"},"acceptSourceModal":{"header":"Use source content","confirm":"Use source content","mainText":"Choosing the source content will discard any line changes and replace the file contents with the version from the source branch."},"acceptDestinationModal":{"header":"Use destination content","confirm":"Use destination content","mainText":"Choosing the destination content will discard any line changes and replace the file contents with the version from the destination branch."},"deleteFileModal":{"header":"Delete file","confirm":"Delete file","mainText":"Are you sure you want to delete this file? You can reset the file to restore its contents until you update the pull request."},"fileDeleted":"This file has been deleted.","commitMessage":"Conflicts resolved in the console.","fileModeConflictModal":{"header":"Resolve file mode conflict","mainText":"The file modes are different for this file in the source and desination branches. Choose the file mode you want to apply to this file to resolve the conflict.","confirm":"Apply file mode","label":{"destination":"Use destination {{destinationMode}}","source":"Use source {{sourceMode}}"}},"fileModeConflict":{"alert":{"notResolved":{"top":"This file has file mode conflicts","bottom":"You must resolve this conflict as well as any conflicts in the file.","button":"Resolve file mode conflicts"},"resolved":{"message":"File mode conflict resolved. {{fileMode}} selected."}},"fileModeInTitle":"Conflicting file modes detected"},"contentTooLarge":{"message":"The overall size of the merge conflicts is too large to be displayed in the CodeCommit console. You must resolve these conflicts locally before you can merge.","button":{"returnToPullRequest":"Return to pull request"}},"stillHasConflictsException":{"message":"You cannot update the pull request until all conflicts have been resolved."}},"resolveConflict":{"noTextConflictsDetected":"No text conflicts detected."},"setupRepository":{"flash":{"success":"Repository successfully created"},"actions":{"addFile":{"label":"Add file","createFile":"Create file","uploadFile":"Upload file"}},"th":{"name":"Name"},"tableContent":{"title":"Empty repository","content":"Your repository is currently empty. You can add files to it directly from the console or by cloning the repository to your local computer, creating commits, and pushing content to the remote repository in AWS CodeCommit."},"table":{"callToAction":"Create file"}},"sourceDestinationIndicator":{"source":"Source","destination":"Destination"},"submitPutFile":{"pullRequest":{"commitMessage":{"default":"You added the {{fileName}} file. The changes were made to the {{branchName}} branch."}},"flash":{"success":{"content":"{{fileName}} has been committed to {{branchName}}","button":"View commit: {{commitId}}"}}},"updateRepositoryDescription":{"flash":{"success":"The repository description has been updated"}},"updateRepositoryName":{"flash":{"success":"The repository name has been updated"}},"updateDefaultBranch":{"flash":{"success":"The default branch has been updated"}},"viewCommit":{"heading":"Commit {{commitId}}","actions":{"copyCommitId":"Copy commit ID","browseAtCommit":"Browse"},"alert":{"pullRequestContext":{"header":"Pull request {{pullRequestId}}","content":"You are viewing this commit in the context of pull request {{titleAsLink}}. Any comments you add in this context will be visible as part of the pull request activity."}},"dictionary":{"header":"Details","label":{"author":"Author","commitDate":"Commit date","parentCommit":"Parent commit","parentCommits":"Parent commits","commitMessage":"Commit message"}}},"viewPullRequest":{"heading":{"title":"{{pullRequestId}}: {{title}}"},"actions":{"close":"Close pull request","merge":"Merge","edit":"Edit details","deleteSourceBranch":"Delete source branch"},"pullRequestAuthor":"{{displayUser}} created this pull request.","mergeability":{"mergeable":"Mergeable","noConflicts":"No merge conflicts","resolveConflicts":"Resolve conflicts"},"tabs":{"details":"Details","activity":"Activity","changes":"Changes","commits":"Commits","approvals":"Approvals"},"details":{"noDescription":"This pull request does not have a description.","guru":{"canBeDissassociated":"You can disassociate Amazon CodeGuru Reviewer from this repository in Settings.","linkToRepositorySettings":"Go to repository settings","description":"Amazon CodeGuru Reviewer is associated with this repository. When you create a pull request, it will attempt to provide recommendations to help improve Java code. This process can take a considerable amount of time. You can view the progress of Amazon CodeGuru Reviewer\'s recommendation job in the Activity tab."},"guruWithPython":{"description":"Amazon CodeGuru Reviewer is associated with this repository. When you create a pull request, it will attempt to provide recommendations to help improve Java and Python code. This process can take a considerable amount of time. You can view the progress of Amazon CodeGuru Reviewer\'s recommendation job in the Activity tab."}},"activity":{"history":{"header":"Activity history"},"guru":{"review":{"status":{"header":"Amazon CodeGuru Reviewer job status","result":{"completed":"Completed","pending":"In progress","failed":"Failed","unknown":"Unknown","successDescription":"Amazon CodeGuru Reviewer has finished its review of the Java code in this pull request. Recommendations, if any, have been left as comments on lines of code.","unknownReason":"No status is available for Amazon CodeGuru Reviewer."}},"noReview":"Amazon CodeGuru Reviewer has not started reviewing this pull request."}},"guruWithPython":{"review":{"status":{"result":{"successDescription":"Amazon CodeGuru Reviewer has finished its review of the Java and Python code in this pull request. Recommendations, if any, have been left as comments on lines of code."}}}}},"deleteBranch":{"success":{"content":"Branch {{branchName}} has been deleted."},"error":{"content":"Unable to delete branch {{branchName}}."}},"mergePullRequest":{"success":{"content":"{{sourceBranchName}} has been merged into {{destinationBranchName}}."}},"closePullRequest":{"success":{"content":"Pull request {{pullRequestId}} has been closed."}},"closePullRequestModal":{"header":"Close pull request","actions":{"confirm":"Close pull request"},"prompt":"Are you sure you want to close pull request {{pullRequestId}}?","alert":{"content":"The code will not be merged when you close this pull request. If you want to merge the code, you must do so manually."}},"mergePullRequestModal":{"header":"Merge pull request","actions":{"confirm":"Merge pull request"},"prompt":"Are you sure you want to merge pull request {{pullRequestId}}?","alert":{"header":"Merge strategy","content":"Your changes will be merged using the fast forward merge strategy."},"resolveConflictsAlert":{"header":"Resolve conflicts","content":"There are conflicts between {{sourceBranchName}} and {{destinationBranchName}} that cannot be merged in the AWS CodeCommit console. Merge conflicts must be resolved locally before merging."},"option":{"deleteSourceBranch":"Delete source branch after merge"}}},"viewPullRequestDifferences":{"workInProgress":"Differences between the source branch and the destination branch cannot be displayed because they are still being processed. Wait a few minutes and then refresh this page.","isNoMergeBase":"Differences between the source branch and the destination branch cannot be displayed for this pull request. The branch specified as the destination branch includes all the changes in the branch specified as the source branch as well as additional changes. You might have mixed up which branch should be the source, and which branch should be the destination.","isMergeBaseUnknown":"This comparison might contain changes that are not part of the pull request. Use Git to forward integrate changes in the destination branch into the source branch, squash the source branch commits, or otherwise reduce the number of differences between the two branches."},"optout-flash":{"header":"Introducing the new console for AWS CodeCommit!","body1":"We\'ve updated the AWS CodeCommit console to make it easier for you to use."}}')},codedeploy:{...JSON.parse('{"breadcrumbs":{"home":"CodeDeploy","deployments":"Deployments","applications":"Applications","createApplication":"Create application","createDeploymentGroup":"Create deployment group","editDeploymentGroup":"Edit deployment group","createDeployment":"Create deployment","deploymentConfigurations":"Deployment configurations","createDeploymentConfigurations":"Create deployment configuration","instance":{"eventLogs":"Logs"},"onPremInstances":"On-premises instances","onPremInstancesTags":"Update tags"},"listDeploymentConfigs":{"title":"Deployment configurations","label":{"computePlatform":"Compute platform","minimumHealthyHosts":"Minimum healthy hosts value","configurationType":"Configuration type","step":"Step","interval":"Interval"},"trafficRoutingConfig":{"interval":"{{ interval }} minutes"},"submitText":"Create deployment configuration","preferences":{"title":"Preferences"},"table":{"title":"Deployment configurations per page"}},"deleteApplication":{"success":{"content":"Application {{applicationName}} successfully deleted"},"error":{"content":"The application could not be deleted"}},"deleteDeploymentGroup":{"success":{"content":"Deployment group {{deploymentGroupName}} successfully deleted in {{applicationName}}"},"error":{"content":"The deployment group could not be deleted"}},"deploymentDetails":{"heading":"Deployment details","label":{"application":"Application","deploymentId":"Deployment ID","deploymentStatus":"Status","deploymentConfig":"Deployment configuration","deploymentGroup":"Deployment group","initiatedBy":"Initiated by","deploymentDescription":"Deployment description","deploymentTarget":"Deployment target","minimumHealthyHosts":"Minimum healthy hosts"}},"deploymentTable":{"headingForApplication":"Application deployment history","headingForDeploymentGroup":"Deployment group deployment history","headingForDeployments":"Deployment history","properties":{"heading":"Deployment table properties"},"label":{"deploymentId":"Deployment Id","deploymentType":"Deployment type","computePlatform":"Compute platform","applicationName":"Application","deploymentGroup":"Deployment group","revisionLocation":"Revision location","creator":"Initiating event","deploymentStatus":"Status"},"states":{"createDeployment":"Create deployment","copyDeployment":"Copy deployment","deploymentsPerPage":"Deployments per page","stopDeployment":"Stop deployment","stopDeploymentAndRollback":"Stop and roll back deployment","deploymentActions":"Actions","deploymentWrapLines":"Wrap lines","deploymentSelectVisibleColumns":"Select visible columns"}},"lifecycleEventsTable":{"label":{"event":"Event","duration":"Duration","status":"Status","errorCode":"Error code"},"states":{"empty":{"default":"There is no instance activity to display","lambda":"There is no lambda activity to display","kubernetes":"There is no EKS activity to display"}}},"onPremInstanceRegistrationStatusIndicator":{"registered":"Registered","deRegistered":"Deregistered"},"revisionDetails":{"heading":"Revision details","label":{"location":"Revision location","created":"Revision created","description":"Revision description"}},"stopDeployment":{"saga":{"default":{"heading":"Unknown","content":"The {{deployment}} stoppage status is unknown."},"withRollback":{"pending":{"heading":"The deployment rollback is pending","content":"The deployment rollback is in the rollback queue"},"success":{"heading":"The deployment is rolling back","content":"The deployment rollback started"}},"withoutRollback":{"pending":{"heading":"The deployment stoppage is pending","content":"The deployment is in the stoppage queue"},"success":{"heading":"The deployment stopped","content":"The deployment successfully stopped"}},"error":{"content":"There was an issue stopping the deployment."}},"modal":{"withRollback":{"heading":"Stop and rollback deployment","confirm":{"label":"Stop and rollback"}},"withoutRollback":{"heading":"Stop deployment","confirm":{"label":"Stop now"}},"content":{"main":"The following deployment will be stopped in AWS CodeDeploy: {{deploymentId}}.","secondary":"You are currently deploying the application {{applicationName}} to the deployment group {{deploymentGroupName}}. Stopping now will result in an incomplete deployment. Rolling back will stop the deployment and redeploy the last successfully deployed revision."}}},"createApplication":{"saga":{"error":{"content":"An unexpected error occurred"},"withCodedeploy":{"header":"Application created","content":"In order to create a new deployment, you must first create a deployment group."},"withCodestar":{"header":"Welcome to CodeStar","content":"Adjust any project settings below before creating your CodeStar project and getting started with CodeDeploy."}},"tiles":{"withCodedeploy":{"heading":"Use CodeDeploy","content":"Create a new application using CodeDeploy"},"withCodestar":{"heading":"Use CodeStar","content":"Create a new application using a CodeStar project template"}},"alert":{"withCodestar":{"heading":"Using CodeStar to get started with CodeDeploy","content":"You will be redirected to AWS CodeStar to create your CodeDeploy application"}},"heading":"Application configuration","formSection":{"applicationType":{"label":"Application type","description":"You can use this console to create your application, or you can use a CodeStar project template."},"applicationName":{"label":"Application name","description":"Enter an application name","hintText":"100 character limit","validation":{"limit":"The application name exceeds the character limit","empty":"An application name is required"}},"computePlatform":{"label":"Compute platform","description":"Choose a compute platform","validation":{"empty":"A compute platform is required"}}},"formAction":{"withCodedeploy":{"submit":{"text":"Create application"}},"withCodestar":{"submit":{"text":"Next"}}}},"applicationSettingsShell":{"tab":{"notifications":"Notification rules","applicationTags":"Application tags"},"tabs":{"applicationTagType":"Application"}},"retryDeployment":{"success":{"flash":"Deployment retry started"},"prompt":"Retry deployment"},"createDeployment":{"saga":{"github":{"success":{"content":"Application {{applicationName}} successfully bound to {{tokenName}} GitHub token"}}},"form":{"success":{"content":"Deployment created"},"submitText":"Create deployment"},"formSection":{"deploymentSettings":{"heading":"Deployment settings","application":{"label":"Application"},"computePlatform":{"label":"Compute platform"},"traffic":{"rerouteImmediately":{"label":"Reroute traffic immediately"},"rerouteWait":{"label":"I will choose whether to reroute traffic"}},"terminate":{"terminate":{"label":"Terminate the original instances in the deployment group"},"keepAlive":{"label":"Keep the original instances in the deployment group running"}}},"greenFleet":{"heading":"Environment configuration"},"deploymentDescription":{"heading":"Deployment description","label":"Deployment description - optional","description":"Add a brief description about the deployment"},"deploymentGroupOverrides":{"heading":"Deployment group overrides","description":"Choose from a list of default and custom deployment configurations. A deployment configuration is a set of rules that determines how fast an application is deployed and the success or failure conditions for a deployment.","label":"Deployment configuration","button":"Create deployment configuration"},"additionalSettings":{"heading":"Additional deployment behavior settings","ignoreApplicationStopFailures":{"label":"ApplicationStop lifecycle event failure","description":"Type a deployment group name","checkbox":{"label":"Don\'t fail the deployment to an instance if this lifecycle event on the instance fails"}},"fileExistsBehavior":{"label":"Content options","description":"Choose what to do during a deployment when a file on a target instance has the same name as a file in the application revision","disallow":{"label":"Fail the deployment","description":"An error is reported and the deployment status is changed to Failed."},"overwrite":{"label":"Overwrite the content","description":"The file in the application revision is copied to the target location on the instance, replacing the previous file."},"retain":{"label":"Retain the content","description":"The file in the application revision is not copied to the instance. The existing file is kept at the target location and treated as part of the new deployment."}}},"rollbackSettings":{"heading":"Rollback configuration overrides","description":"You can override your deployment group rollback settings for this deployment only."},"appSpec":{"validation":{"empty":"An AppSpec file is required"},"saveText":"Save as text file"},"deploymentGroup":{"label":"Deployment group"},"deploymentType":{"label":"Deployment type"},"githubRepositoryName":{"label":"Repository name","validation":{"empty":"A repository name is required"}},"githubCommitId":{"label":"Commit ID","validation":{"empty":"A commit ID is required"}},"revisionType":{"label":"Revision type","s3":{"label":"My application is stored in Amazon S3"},"github":{"label":"My application is stored in GitHub"},"appSpec":{"label":"Use AppSpec editor"}},"revisionLocation":{"label":"Revision location","description":"Copy and paste the Amazon S3 bucket where your revision is stored","hintText":"s3://bucket-name/folder/object.[{{validExtensionTypesAsDescription}}]","validation":{"empty":"A revision is required","format":"Invalid revision format"},"empty":"No previous revisions"},"revisionFileType":{"label":"Revision file type","validation":{"empty":"A file type is required"}},"AppSpecLanguage":{"label":"AppSpec language"},"rollBackDeploymentFailure":{"label":"Roll back when a deployment fails"},"rollBackDeploymentStopOnAlarm":{"label":"Roll back when alarm thresholds are met"},"disableRollback":{"label":"Disable rollbacks"},"deploymentConfiguration":{"header":"Deployment configuration","label":"Deployment configuration"}}},"createDeploymentConfiguration":{"heading":"Create deployment configuration","form":{"success":{"content":"Deployment configuration created"},"submitText":"Create deployment configuration"},"formSection":{"nameAndPlatform":{"heading":"Name and platform"},"deploymentConfigurationComputeType":{"label":"Compute platform","validation":{"empty":"A compute platform is required"}},"minimumHealthyHosts":{"heading":"Minimum healthy hosts","description":"Specify the minimum number or percentage of healthy Amazon EC2 instances that must be available at any time during the deployment.","label":"Value"},"minimumHealthyHostsMetric":{"label":"Percentage","description":"Specify a percentage","hintText":"Integer from 1 to 99","validation":{"empty":"A value for Minimum Healthy Hosts is required","format":"Minimum healthy hosts must be a percentage from 1 to 99"}},"minimumHealthyHostsValue":{"label":"Number","description":"Enter a number","validation":{"empty":"A value for minimum healthy hosts is required"}},"configurationName":{"label":"Deployment configuration name","description":"Choose a deployment configuration name","validation":{"empty":"A deployment configuration name is required","limit":"The deployment configuration exceeds the character limit"}},"configurationType":{"label":"Type","description":"Choose a deployment configuration type","validation":{"empty":"A deployment configuration type is required"}},"configurationStep":{"label":"Step","description":"Enter a percentage of traffic to shift to your new deployment target.","validation":{"empty":"Step percentage must be an integer between 1 and 99","range":"Step percentage must be an integer between 1 and 99"}},"configurationInterval":{"label":"Interval","description":"Enter the number of minutes between traffic shifts.","validation":{"empty":"Traffic shifting intervals must be positive integers up to 2880 (2 days)","range":"Traffic shifting intervals must be positive integers up to 2880 (2 days)"}},"minimumEvaluationTime":{"label":"Minimum evaluation time","description":"Enter the minimum number of minutes the deployment will analyze traffic between traffic shifts."},"maximumEvaluationTime":{"label":"Maximum evaluation time","description":"Enter the maximum number of minutes the deployment will analyze traffic between traffic shifts."}}},"createDeploymentGroup":{"success":{"heading":"Success","content":"Deployment group created"},"heading":"Create deployment group","form":{"submitText":"Create deployment group"},"formSection":{"applicationInfo":{"applicationName":{"label":"Application"},"computeType":{"label":"Compute type"}},"serviceRole":{"heading":"Service role","label":"Enter a service role","description":"Enter a service role with CodeDeploy permissions that grants AWS CodeDeploy access to your target instances.","validation":{"empty":"Service role cannot be empty"}},"application":{"heading":"Application"},"deploymentGroupName":{"heading":"Deployment group name","label":"Enter a deployment group name","validation":{"empty":"Enter a deployment group name","maxLimit":"Enter a deployment group name with fewer than {{limit}} characters"}},"advanced":{"heading":"Advanced - optional"},"deploymentConfiguration":{"heading":"Deployment settings","dictionaryItem":"Deployment Configuration"},"environmentConfiguration":{"heading":"Environment configuration","type1":"Amazon EC2 Auto Scaling groups","type2":"Amazon EC2 instances","type3":"On-premises instances","matchedInstancesHeader":"Matching instances","matchedInstance":"{{instanceNumber}} unique matched instance.  {{link}}","matchedInstances":"{{instanceNumber}} unique matched instances. {{link}}","matchedInstanceLink":{"text":"Click here for details"},"matchedInstanceAlert":{"text":"There are more matching instances than can be displayed ({{maxInstances}})."},"ecsClusterName":{"label":"Choose an ECS cluster name","validation":{"empty":"An ECS Cluster name is required","noValue":"A cluster name is required"}},"ecsServiceName":{"label":"Choose an ECS service name","validation":{"empty":"An ECS service name is required"}},"productionListener":{"label":"Production listener port","validation":{"noValue":"A production listener is required"}},"testListener":{"label":"Test listener port","description":"A test listener is required if you want to test your replacement version before traffic reroutes to it"},"targetGroup1":{"label":"Target group 1 name","validation":{"noValue":"Two target groups are required"}},"targetGroup2":{"label":"Target group 2 name","validation":{"noValue":"Two target groups are required"}}},"deploymentType":{"heading":"Deployment type","label":"Choose how to deploy your application","inPlace":{"description":"Updates the instances in the deployment group with the latest application revisions. During a deployment, each instance will be briefly taken offline for its update"},"blueGreen":{"description":"Replaces the instances in the deployment group with new instances and deploys the latest application revision to them. After instances in the replacement environment are registered with a load balancer, instances from the original environment are deregistered and can be terminated."}},"loadBalancer":{"heading":"Load balancer","ecs":{"heading":"Load balancers"}},"trafficRerouting":{"label":"Traffic rerouting","description":"Choose whether traffic reroutes to the replacement environment immediately or waits for you to start the rerouting process","option1":{"label":"Reroute traffic immediately"},"option2":{"label":"Specify when to reroute traffic"}},"originalInstancesTermination":{"label":"Choose whether instances in the original environment are terminated after the deployment is succeeds, and how long to wait before termination."},"rollbacks":{"heading":"Rollbacks","description":"Enable deployment rollbacks for this deployment group"},"deploymentTriggerEvent":{"label":"Events","validation":{"empty":"At least one event must be selected"},"option":{"deploymentStart":"Deployment starts","deploymentSucceed":"Deployment succeeds","deploymentFail":"Deployment fails","deploymentStop":"Deployment stops","deploymentReady":"Deployment ready","deploymentRollback":"Deployment rollback","instanceStart":"Instance starts","instanceSucceed":"Instance succeeds","instanceFail":"Instance fails","instanceReady":"Instance ready"}},"instanceSelection":{"description":"Select any combination of Amazon EC2 Auto Scaling groups, Amazon EC2 instances, and on-premises instances to add to this deployment","descriptionNoOnPrem":"Select any combination of Amazon EC2 Auto Scaling groups, and Amazon EC2 instances to add to this deployment","validation":{"empty":"No Amazon EC2 Auto Scaling groups or instance tags have been specified."}},"CodeDeployAgentConfiguration":{"heading":"Agent configuration with AWS Systems Manager","description":"AWS Systems Manager will install the CodeDeploy Agent on all instances and update it based on the configured frequency.","info":{"header":"Complete the required prerequisites before AWS Systems Manager can install the CodeDeploy Agent.","body":"Make sure the AWS Systems Manager Agent is installed on all instances and attach the required IAM policies to them.","learnMore":"Learn more"},"warning":{"header":"We recommend configuring your CodeDeploy Agent install and updates with AWS Systems Manager.","body":"AWS Systems Manager provides more control over CodeDeploy Agent version updates and rollbacks than installing using other methods."},"radioGroup":{"label":"Install AWS CodeDeploy Agent","never":"Never","onlyOnce":"Only once","nowAndSchedule":"Now and schedule updates"},"SegmentedControl":{"basicScheduler":"Basic scheduler","cronExpression":"Cron expression"},"cronExpression":{"label":"Schedule with cron expression","description":"Type the schedule in the form of cron expression."},"input":{"validation":{"min":"Minimum interval for rate based association is 30 minutes","max":{"day":"Maximum interval for rate based association is 31 days","hour":"Maximum interval for rate based association is 31*24 hours","minute":"Maximum interval for rate based association is 31*24*60 minutes"},"rate":{"invalid":"Not a valid rate expression","error":{"singular":"Unit must be singular when value is equal to 1","plural":"Unit must be plural when value is greater than 1","nonPositive":"Time value should be a positive number"}}}},"flash":{"error":{"content":"There was a problem establishing AWS Systems Manager configuration: {{errorContent}} This is critical step to install CodeDeploy agent on your instances. Go to AWS System Manger to set up configuration.","button":"Configure in AWS Systems Manager"}}},"blueGreenConfiguration":{"paragraph":"Specify the Amazon EC2 Auto Scaling groups or Amazon EC2 instances where the current application revision is deployed."},"copyAutoScalingGroup":{"label":"Automatically copy Amazon EC2 Auto Scaling group","description":"Provision an Amazon EC2 Auto Scaling group and deploy the new application revision to it. AWS CodeDeploy will create the Auto Scaling group by copying the one you specify here."},"discoverExisting":{"label":"Manually provision instances","description":"I will specify here the instances where the current application revision is running. I will specify the instances for the replacement environment when I create a deployment."},"autoscalingGroupMulti":{"validation":{"maxLength":"Select up to {{maxLength}} Amazon EC2 Auto Scaling groups"},"label":"You can select up to 10 Amazon EC2 Auto Scaling groups to deploy your application revision to."},"autoscalingGroup":{"validation":{"empty":"Exactly one Amazon EC2 AutoScaling group must be specified when selecting copy auto scaling green fleet provisioning option."},"label":"Choose the Amazon EC2 Auto Scaling group where the current application revision is deployed.","warning":{"targetGroups":{"inPlace":"An Auto Scaling group you selected is associated with multiple target groups, but only one target group can be used in an AWS CodeDeploy deployment. Only the target group you choose will be used to manage traffic to the instances during the deployment.","blueGreen":"An Auto Scaling group you selected is associated with multiple target groups, but only one target group can be used in an AWS CodeDeploy blue/green deployment. The target group you choose will be used to reroute traffic to your replacement environment."},"loadBalancers":{"inPlace":"An Auto Scaling group you selected is associated with multiple load balancers, but only one load balancer can be used in an AWS CodeDeploy deployment. Only the load balancer you choose will be used to manage traffic to the instances during the deployment.","blueGreen":"An Auto Scaling group you selected is associated with multiple load balancers, but only one load balancer can be used in an AWS CodeDeploy blue/green deployment. The load balancer you choose will be used to reroute traffic to your replacement environment."}}},"loadbalancer":{"description":"Select a load balancer to manage incoming traffic during the deployment process. The load balancer blocks traffic from each instance while it’s being deployed to and allows traffic to it again after the deployment succeeds.","checkbox":{"label":"Enable load balancing"},"type1":"Application Load Balancer or Network Load Balancer","type2":"Classic Load Balancer","label":"Choose a load balancer"},"targetGroup":{"label":"Choose a target group"},"tags":{"header":"Deployment group tags"},"trafficTermination":{"label":"Original revision termination","description":"Specify how long CodeDeploy waits before it terminates the original task set. After termination starts, you cannot rollback manually or automatically"}},"tagGroupSummary":{"blurb":"You can add up to three groups of tags for EC2 instances to this deployment group.","oneTagGroup":{"heading":"One tag group:","content":"Any instance identified by the tag group will be deployed to."},"multiTagGroup":{"heading":"Multiple tag groups:","content":"Only instances identified by all the tag groups will be deployed to."}}},"editDeploymentGroup":{"success":{"heading":"Success","content":"Deployment group updated"},"heading":"Edit deployment group","form":{"submitText":"Save changes"}},"form":{"characterLimit":{"hintText":"{{limit}} character limit"}},"deploymentGroup":{"BlueGreen":"Blue/green","InPlace":"In-place"},"deployment":{"progress":{"created":"Created","queued":"Queued","inProgress":"In progress","baking":"Baking","succeeded":"Succeeded","failed":"Failed","stopped":"Stopped","ready":"Ready"},"instance":{"progress":{"pending":"Pending","inProgress":"In progress","succeeded":"Succeeded","failed":"Failed","skipped":"Skipped","unknown":"Unknown","ready":"Ready"}},"creator":{"cloudFormation":"CloudFormation stack update","autoscaling":"Autoscaling group action","autoscalingTermination":"Autoscaling termination","codeDeployRollback":"CodeDeploy rollback","cloudFormationRollback":"CloudFormation stack rollback","user":"User action","codeDeploy":"CodeDeploy","codeDeployAutoUpdateOutdatedInstances":"CodeDeploy update outdated instances"},"rollback":{"cloudFormationLink":"Use the CloudFormation console to stop or roll back this deployment"},"blue":{"label":"Original"},"green":{"label":"Replacement"}},"deploymentConfig":{"type":{"TimeBasedLinear":"Linear","TimeBasedCanary":"Canary","AllAtOnce":"All at once","Adaptive":"Adaptive"}},"alarms":{"header":"Alarms","empty":"No Amazon CloudWatch alarms have been created for this deployment group","columns":{"name":"Name"},"label":{"ignoreConfiguration":"Ignore alarm configuration","ignorePollAlarmFailure":"Continue deployment even if alarm status is unavailable"},"modal":{"heading":"Create deployment alarm","success":{"content":"Deployment alarm created"},"description":"Add alarms to automatically stop deployments in this deployment group. You can add up to ten alarms.","content":{"paragraph":{"first":"You must first create an alarm in Amazon CloudWatch. Specify a metric and its threshold, and then add the alarm to a deployment group.","second":"You must add the cloudwatch:DescribeAlarms permission to the service role."}}},"formSection":{"alarmName":{"label":"Amazon CloudWatch alarms","validation":{"empty":"Alarm must be selected"}},"alarmEnabled":{"description":"Skips the step of checking Amazon CloudWatch alarms during the deployment process"},"alarmIgnoreFailure":{"description":"Permits deployment to run when alarm data cannot be retrieved from Amazon Cloudwatch"}},"form":{"submitText":"Add alarm"},"actionStripe":{"heading":"Alarms","button":{"delete":"Delete alarm"}},"table":{"empty":"No Amazon CloudWatch alarms have been created for this deployment group","column":{"name":"Name"}}},"triggers":{"header":"Triggers","empty":"No triggers have been created for this deployment group.","columns":{"name":"Name","events":"Events","type":"Type"},"columnValue":{"type":"AWS SNS"},"modal":{"heading":"Create deployment trigger","success":{"content":"Deployment trigger created"},"description":"Create a trigger that subscribes to a topic in Amazon Simple Notification Service (SNS) to receive notifications about deployment and instance events in this deployment group. You can create up to 10 triggers.","content":{"paragraph":{"first":"Before you create a trigger, you must set up the Amazon SNS topic to which the trigger will point.","second":"AWS CodeDeploy must have permission to publish to the topic from this deployment group."}}},"formSection":{"triggerName":{"label":"Trigger name","validation":{"empty":"Deployment trigger must have a name"}},"triggerDescription":{"label":"Amazon SNS topics","validation":{"empty":"Topic must be selected"}}},"form":{"submitText":"Create trigger"},"formAction":{"delete":"Delete trigger"}},"environmentConfiguration":{"view":{"tagSetRenderer":{"columns":{"key":"Key","value":"Value"}},"autoscalingGroups":{"heading":"Environment configuration: Amazon EC2 Auto Scaling groups","columns":{"name":"Name"}},"ec2Instances":{"heading":"Environment configuration: Amazon EC2 instances"},"onPremises":{"heading":"Environment configuration: On-premises instances"}}},"application":{"computeLabels":{"server":"EC2/On-premises","ec2":"EC2","lambda":"AWS Lambda","ecs":"Amazon ECS","kubernetes":"Amazon EKS"}},"viewApplication":{"table":{"heading":"Applications","column":{"applicationName":"Application name","createdTime":"Created","computePlatform":"Compute platform"},"action":{"create":"Create application","deploy":"Deploy application"}},"deploymentGroup":{"table":{"create":"Create deployment group","details":"View details","column":{"deploymentGroupName":"Name","status":"Status"},"lastAttempted":"Last attempted deployment","lastSuccessful":"Last successful deployment","triggers":"Trigger count","title":"Deployment groups","preferences":{"title":"Deployment groups per page"},"empty":"No deployment groups","noApplications":{"empty":"Before you can deploy your application using CodeDeploy, you must create a deployment group."}}},"details":{"applicationName":{"label":"Name"},"computePlatform":{"label":"Compute platform"}},"revisions":{"table":{"heading":"Revisions","action":{"create":"Deploy application"},"preferences":{"title":"Revisions per page"},"empty":{"title":"No revisions","content":"Revisions are registered as part of a deployment"},"column":{"revisionLocation":"Revision location","firstDeployed":"First deployed","lastDeployed":"Last deployed","createdTime":"Created"}}},"tabs":{"deployments":"Deployments","deploymentGroups":"Deployment groups","revisions":"Revisions"},"delete":"Delete application"},"viewDeployment":{"header":{"actions":{"stopDeployment":"Stop deployment","stopDeploymentRollBack":"Stop and roll back deployment","continueDeployment":"Reroute traffic","terminate":"Terminate","ecs":{"terminate":"Terminate original task set"}}},"progressBar":{"label":{"Failed":"Failed","InProgress":"In progress","Succeeded":"Succeeded","Skipped":"Skipped","Stopped":"Stopped"}},"inPlaceDeployment":{"progress":{"description":"{{completed}} of {{count}} instances updated"},"step":{"description":"Installing application on your instances"}},"lambda":{"progress":{"description":{"success":"Completed","failed":"Failed","inProgress":"{{percentage}}% complete","notStarted":"Not started"}},"step":{"step1":{"label":"Step 1","description":"Pre-deployment validation"},"step2":{"label":"Step 2","description":"Traffic shifting"},"step3":{"label":"Step 3","description":"Post-deployment validation"}},"trafficShifting":{"description":"All traffic is shifted to the updated Lambda functions at once.","linear":{"description":"The deployment will shift {{percentage}}% of traffic from the current version to the replacement version every {{interval}} minute(s) until all of the traffic is routed to the new version."},"canary":{"description":"Next: The deployment will shift {{percentage}}% of traffic from the current version to the replacement version at approximately {{interval}} minute(s) after the deployment started."},"adaptive":{"description":"Next: The deployment will incrementally shift all of traffic from the current version to the replacement version if the deployment is healthy otherwise all traffic will rollback from the replacement version to the current version."},"current":{"label":"Original"},"new":{"label":"Replacement"},"trafficDescription":"{{percentage}}% of traffic"}},"kubernetes":{"progress":{"description":{"success":"Completed","failed":"Failed","inProgress":"{{percentage}}% complete","notStarted":"Not started"}},"step":{"step1":{"label":"Step 1","description":"BeforeUpdate AWS Lambda function execution","rollback":{"description":"Rollback deployment"}},"step2":{"label":"Step 2","description":"Deployment"},"step3":{"label":"Step 3","description":"AfterUpdate AWS Lambda function execution"},"bakeTime":{"label":"Observation time","description":{"inProgress":"Total time remaining: {{remainingTime}}"}}}},"trafficShifting":{"mainHeading":"Traffic shifting progress","heading":"Deployment results Info"},"bluegreen":{"trafficShifting":{"original":{"info":"Monitor the process of rerouting traffic behind your load balancers from one set of instances to another.","label":"Original","description":"{{counter}} of {{total}} original instances","error":"{{action}} original instances failed to deregister"},"replacement":{"label":"Replacement","description":"{{counter}} of {{total}} replacement instances","error":"{{action}} replacement instances failed to register"},"ecs":{"originalStatus":{"before":"Original task set serving traffic","after":"Original task set not serving traffic"},"replacementStatus":{"before":"Replacement task set serving traffic","after":"Replacement task set not serving traffic"}}},"deploymentStatus":{"heading":"Deployment status","step1":{"label":"Step 1","description":"Provisioning replacement instances"},"step2":{"label":"Step 2","description":"Installing application on replacement instances"},"step3":{"label":"Step 3","description":"Rerouting traffic to replacement instances"},"step4":{"label":"Step 4","description":"Terminating original instances"},"progressDescription":{"updateCount":"{{numerator}} of {{ denominator }} instances updated","provisionedCount":"{{numerator}} of {{ denominator }} replacement instances provisioned","provisionSkipped":"Instance provisioning skipped","trafficRerouted":"Traffic rerouting started","terminatedCount":"{{numerator}} of {{ denominator }} original instances terminated","terminatedSkipped":"Termination skipped","terminateSuccess":"Original instance termination has started","rerouting":"Rerouting traffic back to the original instances"}}},"lifecycleActivityEvents":{"heading":"Deployment lifecycle events","preferences":{"heading":"Instances per page"},"table":{"empty":"There is no instance activity to display","column":{"instanceId":"Instance ID","environment":"Environment","traffic":"Traffic","duration":"Duration","status":"Status","mostRecentEvent":"Most recent event","events":"Events","startTime":"Start time","endTime":"End time"}}},"forceComplete":{"header":"Force complete","button":"Force complete","modal":{"content":{"main":"The following deployment will be forced to complete in AWS CodeDeploy: {{deploymentId}}.","secondary":"You are currently deploying the application {{applicationName}} to the deployment group {{deploymentGroupName}}."}}},"progress":{"description":{"success":"Completed","pending":"Not started"},"DeployReplacementTaskSetProgress":{"stepDescription":"Deploying replacement task set"},"TrafficFlipProgress":{"forRollback":{"stepDescription":"Rerouting production traffic to original task set"},"forDeployment":{"stepDescription":"Rerouting production traffic to replacement task set"}},"TerminateOriginalTaskSetProgress":{"forDeployment":{"stepDescription":"Terminate original task set"},"forRollback":{"stepDescription":"Terminate replacement task set"}},"TestTrafficProgress":{"forDeployment":{"stepDescription":"Test traffic route setup","progressDescription":"{{percent}}% traffic shifted"}},"wait":{"label":{"withTime":"Wait {{time}}","withNoTime":"Wait","completed":"Wait completed"}},"waiting":{"label":"Waiting"}},"alertErrors":{"MANUAL_STOP":"Deployment was stopped manually"},"deploymentTargetActivityTable":{"heading":"Task set activity","taskSetId":{"label":"Task set ID"},"status":{"label":"Task set status"},"traffic":{"label":"Traffic"},"desiredCount":{"label":"Desired count"},"runningCount":{"label":"Running count"},"pendingCount":{"label":"Pending count"}},"childDeploymentsTable":{"heading":"Deployments triggered by this deployment"}},"forceComplete":{"flashes":{"success":"Successfully completed the deployment by force.","error":"Failed to complete the deployment by force."}},"viewDeploymentGroup":{"actions":{"createDeployment":"Create deployment"},"details":{"heading":"Deployment group details","label":{"deploymentGroupName":"Deployment group name","applicationName":"Application name","computePlatform":"Compute platform","deploymentType":"Deployment type","serviceRoleArn":"Service role ARN","bakeTime":"Observation time","deploymentConfig":"Deployment configuration","rollbackEnabled":"Rollback enabled","agentUpdateScheduler":"Agent update scheduler"},"link":{"agentUpdateScheduler":"Learn to schedule update in AWS Systems Manager"},"tags":{"type":"Deployment group"}},"environmentConfiguration":{"heading":"Environment configuration","ecs":{"clusterName":{"dictionaryItem":"ECS cluster name"},"serviceName":{"dictionaryItem":"ECS service name"}},"kubernetes":{"clusterName":{"dictionaryItem":"EKS cluster name"}}},"loadBalancer":{"targetGroup1":{"dictionaryItem":"Target group 1 name"},"targetGroup2":{"dictionaryItem":"Target group 2 name"},"productionListener":{"dictionaryItem":"Production listener ARN"},"testListener":{"dictionaryItem":"Test listener ARN"}}},"deleteDeploymentConfig":{"success":{"content":"Deployment configuration {{deploymentConfigName}} successfully deleted"},"error":{"content":"There was an issue deleting the deployment configuration."}},"onprem":{"form":{"success":{"content":"On-premises instance tags updated"}}},"listOnpremInstances":{"table":{"column":{"instanceName":"Instance name","iamArn":"IAM ARN","status":"Status"},"title":"On-premises instances","pageSizeSelector":"Instances per page","empty":"There are no instances to display"}},"viewOnPremInstances":{"heading":"On-premises instance details","detail":{"label":{"instanceName":"Instance name","iamUserArn":"IAM user ARN","registered":"Registered","status":"Status","instanceArn":"Instance ARN","deregistered":"Deregistered"}}},"viewRevision":{"deploymentGroupTable":{"heading":"Current deployment groups","table":{"pageSizeSelector":"Deployment groups per page","empty":{"heading":"No deployment groups","content":"The revision is not deployed to any deployment groups"},"column":{"deploymentGroupName":"Deployment group name","lastDeployed":"Last deployed"}}},"details":{"revisionLocation":"Revision location","created":"Created","lastDeployed":"Last deployed","firstDeployed":"First deployed","heading":"Revision details"},"actions":{"createDeployment":"Create deployment"},"appSpec":{"heading":"App spec"}},"github":{"connect":{"label":"GitHub token name","button":{"text":"Connect to GitHub"},"description":"Select the name of the token associated to an account you have already connected, or grant AWS CodeDeploy permission to access a different account. To connect to a GitHub account for the first time, type an alias for the account, and then choose Connect to GitHub"},"accountNames":{"empty":"No GitHub token name"},"tokenName":{"validation":{"empty":"Token name cannot be empty.","tooLong":"Token name cannot exceed 100 characters.","invalidCharacters":"Token name must only contain alphanumeric characters and + = , . @  - _ .","header":"Invalid GitHub token name"}}},"oauthLandingPage":{"text":{"processing":"Processing OAuth request","confirm":{"github":"Choose Confirm to connect CodeDeploy to your GitHub account"}},"button":{"confirm":{"text":"Confirm"},"cancel":{"text":"Cancel"}}},"viewDeploymentInstanceEvents":{"heading":"Event Logs","details":{"heading":"Event details","label":{"errorCode":"Error code","scriptName":"Script name","message":"Message"}},"logs":{"heading":"Logs"},"noEvents":"No failed events","link":{"text":"View more."}},"optout-flash":{"header":"Introducing the new AWS CodeDeploy console experience!","body1":"We have updated the AWS CodeDeploy console experience to make it easier to use."}}')},codepipeline:{...JSON.parse('{"breadcrumbs":{"codepipeline":"CodePipeline","createPipeline":"Create new pipeline","listPipelines":"Pipelines","editPipeline":"Edit {{pipelineName}}","pipelineHistory":"Execution history","settings":"Settings"},"label":{"succeeded":"Succeeded","failed":"Failed","inprogress":"In progress","superseded":"Superseded","notrun":"Didn\'t Run","pending":"Pending","stopped":"Stopped","stopping":"Stopping","cancelled":"Cancelled","region":"Region","comments":"Comments","abandoned":"Abandoned","alarms":"Alarms"},"createBuildProject":{"success":{"alert":"Successfully created {{projectName}} in CodeBuild."}},"createProject":{"button":{"create":"Create project","creating":"Creating project"}},"viewPipeline":{"polling":{"stoppedMessage":"As of {{time}}, CodePipeline has disabled polling in this pipeline because it hasn\'t run in the 30 days prior. Use the recommended event-based mechanism to start new pipeline executions.","pollingPipelineMessageMigrationLinkText":"migration guide","pollingPipelineMessage":{"single":"This pipeline has a source ({{sourceName}}) that is configured for polling. Migrate (update) your pipeline to the recommended event-based mechanism for change detection. For details, see the {{migrationGuideLink}}.","multiple":"This pipeline has multiple sources ({{sourceName}}) that are configured for polling. Migrate (update) your pipeline to the recommended event-based mechanism for change detection. For details, see the {{migrationGuideLink}}.","disappearingAlert":"Alert closing in {{alertTimeout}} seconds."}},"actions":{"releaseChange":"Release change","pipelineVariables":{"head":"Pipeline variables","description":"The following variables are required to start this pipeline execution."},"viewHistory":"View history","clonePipeline":"Clone pipeline","stopExecution":"Stop execution","edit":"Edit"},"tooManyVersions":{"header":"Too many versions","content":"This pipeline has been updated 10 or more times since its last execution. AWS CodePipeline only stores the latest 10 pipeline definitions; some information about the source revisions may be missing because it is no longer stored."}},"viewPipelineStageHeader":{"actions":{"retry":"Retry","retryFailedActions":"Retry failed actions","retryFailedStage":"Retry stage","viewCurrentRevisions":"View current revisions"}},"viewPipelineAction":{"arrow":{"runOrder":"Action group arrow"},"crossRegion":{"tooltip":"Cross-region action"}},"releaseChange":{"modal":{"confirmation":"Releasing a change will detect the most recent change in each location configured in your source action(s), and run that change through the pipeline. Do you want to continue?","heading":"Release change","label":"Release"}},"clonePipeline":{"modal":{"heading":"Clone pipeline configuration","alert":{"cloneDisabled":{"header":"Cannot clone the current pipeline","text":"Clone is disabled for pipelines with actions that use authorization tokens."}},"submit":"Clone"}},"stopExecution":{"modal":{"heading":"Stop execution","executionId":{"label":{"select":"Select execution","selected":"Selected execution"},"description":"Choose the pipeline execution you want to stop."},"abandon":{"label":"Choose a stop mode for the execution","description":"If you choose to stop and wait, and you change your mind while your execution is still in a stopping state, you can choose to abandon.","tile":{"stopWait":{"label":"Stop and wait","description":"Wait until all in-progress actions are complete."},"stopAbandon":{"label":"Stop and abandon","description":"Don’t wait until the in-progress actions are complete.","warning":"Warning: This option can lead to failed actions."}}},"reason":{"label":"Stop execution comments"},"submit":"Stop","success":"Stop execution {{ executionId }} successfully","executionOption":{"stage":"Stage: {{ stageName }}","duration":"Duration: {{ duration }}"}}},"currentRevision":{"modal":{"heading":"\\"{{stageName}}\\" current revisions","executionHeading":"Execution revisions","artifactChanges":"These are the source artifact changes that started the current pipeline execution."}},"entityUrl":{"alt":{"externalLink":"External link"},"text":{"details":"Details","executionUrl":"View in {{ provider }}"}},"executionId":{"pipelineExecution":{"heading":"Pipeline execution ID"},"actionExecution":{"heading":"Action execution ID"},"InboundPipelineExecution":{"heading":"Inbound execution ID"}},"pendingExecutionContainer":{"modal":{"heading":"Inbound execution summary: {{ executionId }}"},"button":{"text":"View summary"}},"viewConfiguration":{"modal":{"heading":"Configuration","cancel":"Done","outputArtifact":"Output artifact","inputArtifact":"Input artifact","namespace":"Variable namespace"}},"errorDetails":{"modal":{"heading":"Action execution failed","cancel":"Done","link":"Link to execution details"}},"startExecution":{"flash":{"content":"The most recent change will re-run through the pipeline. It might take a few moments for the status of the run to show in the pipeline view."}},"actionExecution":{"entityUrl":{"noExecutions":"No executions yet"},"codebuild":{"labels":{"buildProject":"Build project","buildId":"Build ID","currentPhase":"Current phase name","currentPhaseStatus":"Current phase status"}},"execution":"Execution","configuration":"Configuration","artifacts":"Artifacts","executionDetails":"Execution details","output":{"variables":"Output variables"}},"manualApproval":{"status":{"succeeded":"Approved","failed":"Rejected","inprogress":"Waiting for approval","abandoned":"Abandoned","approved":{"lower":"approved"},"rejected":{"lower":"rejected"}},"details":{"text":"View details","review":"Review","reviewSummary":"Review summary","done":"Done","actionName":"Action name","status":"Status","reviewerArn":"Reviewer ARN","configuredComments":"Comments about this action","approve":"Approve","reject":"Reject","exceedsSummaryCharLimit":"No more than 512 characters","emptySummary":"No comments"},"submit":{"success":{"message":"Action {{actionName}} was {{status}}"}}},"serviceRoleProvider":{"label":{"serviceRoleName":"Role name"},"description":{"serviceRoleDescription":"AWS CodePipeline uses an IAM service role to create resources for your pipeline. You can use a new or existing service role. Depending on when your existing service role was created, you might need to update it by adding permissions for any recently added AWS resources.","permission":"Allow AWS CodePipeline to create a service role so it can be used with this new pipeline"},"button":{"createServiceRole":"Create role"},"validation":{"serviceRoleRequired":"You must select a service role","permissionRequired":"Please allow AWS CodePipeline to create a service role"}},"s3Provider":{"heading":"Amazon S3","description":"Specify your Amazon S3 location.","error":{"noBucketSelected":"Please select a bucket","invalidBucket":"Please enter a valid bucket name","noObjectKey":"Please input an object key"},"hint":{"objectKey":"Enter the object key. You can include a file path without the delimiter character (/) at the beginning. Include the file extension. Example: SampleApp.zip"}},"s3DeployProvider":{"s3ObjectKey":{"label":"Deployment path"},"extract":{"label":"Extract file before deploy","description":"The deployed artifact will be unzipped before deployment."},"kms":{"label":"KMS encryption key ARN","description":"Encrypt your object using a KMS encryption key. If no key is provided, objects remain un-encrypted.","hint":"arn:aws:kms:<region-ID>:<account-ID>:key/<key-ID> OR arn:aws:kms:<region-ID>:<account-ID>:alias/<alias-name>"},"cannedACL":{"label":"Canned ACL","description":"Specify an Amazon S3 canned access control list (ACL) for your bucket."},"cacheControl":{"label":"Cache control","description":"Set cache control for objects requested from your Amazon S3 bucket."}},"manualApprovalProvider":{"heading":{"providerName":"Manual approval configuration"},"description":{"provider":"Configure the approval request.","url":"Type the URL you want to provide to the reviewer as part of the approval request. The URL must begin with \'http://\' or \'https://\'.","comments":"Comments you type here display for the reviewer in email notifications or the console."},"label":{"snsTopic":"SNS topic ARN","url":"URL for review","comments":"Comments"},"validation":{"urlFormat":"Invalid URL format. The URL must begin with \'http://\' or \'https://\'."}},"lambdaProvider":{"heading":{"providerName":"AWS Lambda"},"label":{"functionSelection":"Function name","functionParameters":"User parameters"},"empty":{"functionSelection":"No options"},"description":{"functionSelection":"Choose a function that you have already created in the AWS Lambda console. Or create a function in the AWS Lambda console and then return to this task.","hintText":"Function name contains only letters, numbers, hyphens, or underscores with no spaces. This does not include the function alias or function ARN.","functionParameters":"This string will be used in the event data parameter passed to the handler in AWS Lambda."},"validation":{"noFunctionSelected":"You must select a function name"},"placeholder":{"functionParameters":"Type a value if required by the function"}},"elasticBeanstalkProvider":{"heading":{"providerName":"AWS Elastic Beanstalk"},"label":{"applicationName":"Application name","environmentName":"Environment name"},"description":{"applicationName":"Choose an application that you have already created in the AWS Elastic Beanstalk console. Or create an application in the AWS Elastic Beanstalk console and then return to this task.","environmentName":"Choose an environment that you have already created in the AWS Elastic Beanstalk console. Or create an environment in the AWS Elastic Beanstalk console and then return to this task."},"empty":{"applicationName":"No options","environmentName":"No options"},"validation":{"noApplicationSelected":"You must select an application","noEnvironmentSelected":"You must select an environment"}},"ecsProvider":{"heading":{"providerName":"Amazon ECS"},"label":{"clusterName":"Cluster name","serviceName":"Service name","imageFilename":"Image definitions file","deploymentTimeout":"Deployment timeout"},"description":{"deploymentTimeout":"Enter the timeout in minutes for the deployment action.","imageFilename":"Enter the JSON file that describes your service\'s container name and the image and tag.","clusterName":"Choose a cluster that you have already created in the Amazon ECS console. Or create a cluster in the Amazon ECS console and then return to this task.","serviceName":"Choose a service that you have already created in the Amazon ECS console for your cluster. Or create a new service in the Amazon ECS console and then return to this task."},"placeholder":{"imageFilename":"MyFilename.json"},"empty":{"clusterName":"No options","serviceName":"No options"},"validation":{"noClusterName":"You must select a cluster","noServiceName":"You must select a service","invalidImageFilename":"Invalid filename","invalidTimeout":"Invalid timeout. Enter a whole number between 0 and 2880."}},"serviceCatalogProvider":{"heading":{"providerName":"AWS Service Catalog"},"label":{"productId":"Product ID","enterConfiguration":"Enter your AWS Service Catalog deploy configuration","consoleInput":"Enter deployment configuration","configurationFileInput":"Configuration file","templateFilePath":"Template file path","productType":"Product type","productVersionName":"Product version name","productVersionDescription":"Product version description","configurationFilePath":"Configuration file path"},"description":{"productId":"Unique identifier for your product. You must have already created the product in AWS Service Catalog.","templateFilePath":"Relative path in the repository for the CloudFormation template for the AWS CloudFormation template","productType":"Type of product","productVersionName":"Version name in AWS Service Catalog where you want to publish your provisioning artifact","productVersionDescription":"Description for the version in AWS Service Catalog where you want to publish your provisioning artifact","configurationFilePath":"Relative path in the repository for the configuration file","consoleInput":"Use the console to specify configuration details for your deployment to AWS Service Catalog","configurationFileInput":"Use a configuration file to specify configuration details for your deployment to AWS Service Catalog"},"validation":{"noTemplateFilePath":"You must enter a valid template file path","noProductId":"You must enter a valid product ID","noProductType":"You must enter a valid product type","noProductVersionName":"You must enter a valid product version name","noConfigurationFilePath":"You must enter a valid configuration file path"},"productType":{"cloudFormationTemplate":"AWS CloudFormation template","awsMarketplaceAMI":"AWS Marketplace AMI","awsMarketplaceCAR":"AWS Marketplace CAR"}},"codeDeployProvider":{"heading":{"providerName":"AWS CodeDeploy"},"label":{"applicationName":"Application name","deploymentGroupName":"Deployment group"},"empty":{"applicationName":"No options","deploymentGroupName":"No options"},"description":{"applicationName":"Choose an application that you have already created in the AWS CodeDeploy console. Or create an application in the AWS CodeDeploy console and then return to this task.","deploymentGroupName":"Choose a deployment group that you have already created in the AWS CodeDeploy console. Or create a deployment group in the AWS CodeDeploy console and then return to this task."},"validation":{"noApplicationName":"You must select an application","noDeploymentGroupName":"You must select a deployment group"}},"codeDeployToECSProvider":{"heading":{"providerName":"Amazon ECS (Blue/Green)"},"label":{"applicationName":"AWS CodeDeploy application name","deploymentGroupName":"AWS CodeDeploy deployment group","taskDefinition":"Amazon ECS task definition","appSpec":"AWS CodeDeploy AppSpec file","containerImage":"Container image"},"description":{"applicationName":"Choose one of your existing applications, or create a new one in AWS CodeDeploy.","deploymentGroupName":"Choose one of your existing deployment groups, or create a new one in AWS CodeDeploy.","taskDefinition":"Choose the input artifact where your Amazon ECS task definition file is stored. If other than the default file path, specify the path and filename of your task definition file.","appSpec":"Choose the input artifact where your AWS CodeDeploy AppSpec file is stored. If other than the default file path, specify the path and filename of your AppSpec file.","containerImage":"Update the container image that you want the Amazon ECS task definition to use. You must have uploaded this file to your source repository."},"button":{"createApplication":"Create application"},"hintText":{"taskDefinition":"The default path is taskdef.json."},"select":{"placeholder":{"taskDefinition":"Select input artifact"}},"input":{"placeholder":{"taskDefinition":"taskdef.json","appSpec":"appspec.yaml"}},"validation":{"artifact":"You must select an input artifact","noImageName":"Image name is required"},"imageSection":{"description":"You can provide an input artifact and a placeholder name for the container definition image that will be used to dynamically update a task definition. You can specify multiple input artifacts and placeholders.","label":{"toggle":"Dynamically update task definition image","inputArtifact":"Input artifact with image details","placeholder":"Placeholder text in the task definition"},"placeholder":{"taskDefinition":"IMAGE"}}},"codeCommitProvider":{"heading":{"providerName":"AWS CodeCommit"},"label":{"repositoryName":"Repository name","branchName":"Branch name"},"description":{"repositoryName":"Choose a repository that you have already created where you have pushed your source code.","branchName":"Choose a branch of the repository"},"empty":{"repositoryName":"No options","branchName":"No options"},"validation":{"noRepositoryName":"You must select a repository","noBranchName":"You must select a branch"}},"codeBuildProvider":{"heading":{"providerName":"AWS CodeBuild"},"label":{"projectName":"Project name","primarySource":"Primary source","combineArtifacts":"Combine artifacts"},"empty":{"projectName":"No options"},"description":{"projectName":"Choose a build project that you have already created in the AWS CodeBuild console. Or create a build project in the AWS CodeBuild console and then return to this task.","combineArtifacts":"For batch builds, you can combine individual build artifacts into a single location."},"validation":{"noProjectName":"You must select a project","noPrimarySource":"You must select a primary source"},"environmentVariables":{"description":"Choose the key, value, and type for your CodeBuild environment variables. In the value field, you can reference variables generated by CodePipeline."},"buildType":{"label":"Build type","singleBuild":{"label":"Single build","description":"Triggers a single build."},"buildBatch":{"label":"Batch build","description":"Triggers multiple builds as a single execution."}},"checkbox":{"combineArtifacts":"Combine all artifacts from batch into a single location"}},"customProvider":{"heading":"{{ providerName }} Action Configuration","description":"Specify the action configuration properties.","empty":"Required"},"crossRegionProvider":{"heading":"{{ providerName }} Action Configuration","pipelineRegion":{"default":"(pipeline region)"}},"crossRegion":{"regions":{"disabledGroup":"Action type not available in these regions"}},"jenkinsProvider":{"heading":{"addJenkins":"Add Jenkins","providerName":"Provider name","serverUrl":"Server URL","projectName":"Project name","version":"Version"},"description":{"content":"Use the template below to connect a Jenkins instance as a build provider for pipelines in your AWS account. Before you connect your Jenkins instance, you should set up the AWS CodePipeline Plugin for Jenkins and configure it for your project.","learnMore":"Learn more","providerName":"Enter the provider name you configured in the Jenkins plugin","serverUrl":"Enter the URL for your Jenkins server","projectName":"Enter the name of the project you created in the Jenkins plugin","version":"Enter the version identifier of the Jenkins action."},"hint":{"providerName":"This name must match the name configured in the plugin."},"validation":{"noProviderName":"You must enter a provider name","existProviderName":"The provider name is already in use","noServerUrl":"You must enter a server URL","invalidServerUrl":"Invalid format. You must enter a valid server URL.","noProjectName":"You must enter a project name","invalidVersionNumber":"You must enter a valid version number"}},"thirdPartyProvider":{"button":{"reconnect":"Reconnect","connect":"Connect to {{ providerName }}"},"connectMessage":{"connected":"Connected!","success":"You have successfully configured the action with the provider.","failed":"Unable to connect to the provider. Wait a few minutes and then try again.","errorMessage":"Third party integration failed"},"actionConfiguration":{"heading":"Action configuration"},"solanoCI":{"title":"Solano CI","description":"Grant AWS CodePipeline access to your Solano CI account. This allows AWS CodePipeline to use Solano CI as your build provider."},"blazeMeter":{"title":"BlazeMeter"},"nouvola":{"title":"Nouvola"},"runscope":{"title":"Runscope API Monitoring"},"ghost":{"title":"Ghost Inspector UI Testing"},"hpStormRunner":{"title":"MF StormRunner Load"},"mfStormRunner":{"title":"Micro Focus StormRunner Load"},"test":{"description":"Add {{ providerName }} tests to your pipeline. Choose Connect to log into your {{ providerName }} account and configure access for AWS CodePipeline."}},"cloudFormationProvider":{"actionMode":{"label":{"createUpdate":"Create or update a stack","deleteOnly":"Delete a stack","replaceOnFailure":"Replace a failed stack","changeSetReplace":"Create or replace a change set","changeSetExecute":"Execute a change set"}},"heading":"AWS CloudFormation","label":{"actionMode":"Action mode","stackName":"Stack name","changeSet":"Change set name","roleName":"Role name","template":{"header":"Template","artifact":"Artifact name","fileName":"File name","path":"Template file path"},"templateConfig":{"header":"Template configuration","toggle":"Use configuration file","artifact":"Artifact name","fileName":"File name","path":"Template configuration file path"},"capabilities":"Capabilities","filename":"Output file name","parameterOverrides":"Parameter overrides","advanced":"Advanced","deploymentPreferences":"Deployment options"},"description":{"actionMode":"When you update an existing stack, the update is permanent. When you use a change set, the result provides a diff of the updated stack and the original stack before you choose to execute the change.","stackName":"If you are updating an existing stack, choose the stack name.","changeSet":"If you are updating an existing change set, choose the change set name.","template":"Specify the template you uploaded to your source location.","templateConfig":"Specify the configuration file you uploaded to your source location.","capabilities":"Specify whether you want to allow AWS CloudFormation to create IAM resources on your behalf."},"noOptions":"No options","hint":{"filename":"File generated by this action","parameterOverrides":"{ \\"parameterName\\": \\"value\\" }"},"capability":{"label":{"CapabilityIAM":"CAPABILITY_IAM","CapabilityNamedIAM":"CAPABILITY_NAMED_IAM","CapabilityAutoExpand":"CAPABILITY_AUTO_EXPAND"}},"validation":{"noActionMode":"You must select an action mode","noStackName":"You must enter a stack","noChangeSet":"You must enter a change set","noTemplatePath":"You must enter a template path","invalidTemplatePath":"The template path is invalid. Specify both an artifact name and a template file name.","invalidTemplateConfig":"The template configuration is invalid. Specify both an artifact name and a template configuration file name.","noRoleArn":"You must select a service role"}},"githubProvider":{"header":{"connectToGitHub":"Connect to GitHub"},"label":{"connectToGitHub":"Grant AWS CodePipeline access to your GitHub repository. This allows AWS CodePipeline to upload commits from GitHub to your pipeline."},"selector":{"label":{"repo":"Repository","branch":"Branch"},"noOption":"No options"},"connectMessage":{"errorMessage":"GitHub integration failed","mismatchError":"Mismatch CSRF token","insufficientPermission":"AWS CodePipeline does not have sufficient permissions to GitHub."},"validation":{"noRepositoryName":"You must select an repository","noBranchName":"You must select a branch","invalidRepo":"Choose or type a valid repository"},"sourceTrigger":{"label":"GitHub webhooks (recommended)","description":"Use webhooks in GitHub to automatically start my pipeline when a change occurs"},"deprecationAlert":{"header":"The GitHub (Version 1) action is not recommended","description":"The selected action uses OAuth apps to access your GitHub repository. This is no longer the recommended method. Instead, choose the GitHub (Version 2) action to access your repository by creating a connection. Connections use GitHub Apps to manage authentication and can be shared with other resources."},"newActionAlert":{"header":"New GitHub version 2 (app-based) action","description":"To add a GitHub version 2 action in CodePipeline, you create a connection, which uses GitHub Apps to access your repository. Use the options below to choose an existing connection or create a new one."}},"github":{"error":{"reposFailedLoading":{"code":"Repositories failed loading","message":"Unable to load your repositories from GitHub. The request to GitHub did not complete."},"branchedFailedLoading":{"code":"Branches failed loading","message":"Unable to load the branches from the specified GitHub repository."},"GitHub":{"dashboard":{"message":"Check your network connectivity, and then check to see if there are any issues with GitHub service at the <a href=\\"https://www.githubstatus.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GitHub Status Dashboard</a>."}}}},"opsWorksProvider":{"header":{"opsWorksProvider":"AWS OpsWorks Stacks"},"label":{"deployType":"Deployment type","stack":"Stack","layer":"Layer","app":"App"},"tile":{"description":{"app":"Update and deploy an app to all running instances","custom":"Update and deploy custom Chef cookbooks to the cookbook cache"},"label":{"custom":"Custom cookbooks"}},"description":{"stack":"Choose one of your existing stacks.","layer":"Choose the layer that your target instances belong to or type in layer\'s id.","app":"Choose the app that you want to update and deploy, which you have already created in AWS OpsWorks Stacks. Or create a new app in AWS OpsWorks Stacks and then return to this task."},"alert":{"learnMore":"Learn more","deployApp":"The application source that you specified for \'{{ selectedAppName }}\' in AWS OpsWorks Stacks will use a new Amazon S3 archive, and the repository URL will point to the version of the artifact that you are deploying.","customCookbook":"The custom Chef cookbook source that you specified for \'{{ selectedStackName }}\' in AWS OpsWorks Stacks will use a new Amazon S3 archive, and the repository URL will point to the version of the artifact that you are deploying."},"validation":{"noStack":"You must select a stack","noApp":"You must select an app"}},"ecrProvider":{"heading":{"providerName":"Amazon ECR"},"label":{"repositoryName":"Repository name","imageTag":"Image tag"},"description":{"repositoryName":"Choose an Amazon ECR repository as the source location.","imageTag":"Choose the image tag that triggers your pipeline when a change occurs in the image repository."},"button":{"createECRRepo":"Create ECR repo","createRepo":"Create repository"},"hint":{"imageTag":"If an image tag is not selected, defaults to latest"},"empty":{"repositoryName":"No options"},"validation":{"noRepositoryName":"You must select a repository"}},"alexaSkillsKitProvider":{"heading":{"providerName":"Alexa Skills Kit"},"label":{"skillId":"Alexa skill ID","clientId":"Client ID","clientSecret":"Client secret","refreshToken":"Refresh token"},"description":{"skillId":"The unique identifier of the skill.","clientId":"The client ID of the application registered for LWA (Login With Amazon). Look for this on the Alexa Skills Kit developer portal LWA page.","clientSecret":"The client secret of the application registered for LWA (Login With Amazon). Look for this on the Alexa Skills Kit developer portal LWA page.","refreshToken":"The refresh token used to request new access tokens."},"validation":{"noSkillId":"You must enter a skill ID","noClientId":"You must enter a client ID","noClientSecret":"You must enter a client secret","noRefreshToken":"You must enter a refresh token"}},"cloudFormationStackSet":{"stackSetName":{"label":"Stack set name","description":"The name of the stack set."},"description":{"label":"Stack set description","description":"A description of the stack set."},"templatePath":{"label":"Template path","description":"The file name and file path of the template used to define the resources in the stack set. You must have uploaded the template to your source location.","hint":"Format:  MyArtifact::path/to/file"},"parameters":{"label":"Parameters","description":"A list of template parameters."},"capabilities":{"label":"Capabilities","description":"Specify whether you want to allow AWS CloudFormation to create IAM resources on your behalf."},"permissionModel":{"label":"Permission model","description":"Determines how IAM roles are created and managed. This defaults to SELF_MANAGED if no selection is made."},"administrationRoleArn":{"label":"Administration role ARN","description":"The ARN of the IAM role used to perform stack set operations in the administrator account. With service-managed permissions, you don\'t have to create the necessary IAM roles."},"executionRoleName":{"label":"Execution role name","description":"The IAM role used to perform stack set operations in the target accounts. With service-managed permissions, you don\'t have to create the necessary IAM roles."},"organizationsAutoDeployment":{"label":"Organizations auto deployment","description":"When enabled, stack instances are automatically created or deleted for AWS Organizations accounts that are added or removed. When enabled along with retaining stack instances, stack instances are not automatically deleted."},"deploymentTargets":{"label":"Deployment targets","description":"A comma-separated list of targets or the location of the file containing an array of targets. For a self-managed model, targets can only be AWS accounts. For a service-managed model, targets can be be either AWS organizational units or AWS accounts but not both.","hint":"Format for literal input: target1, target2, target3. Format for file path: MyArtifact::path/to/file"},"regions":{"label":"Deployment target AWS Regions","description":"AWS Regions in which to update associated stack instances. The order of Regions listed here determines the Region order for deployment."},"failureTolerancePercentage":{"label":"Failure tolerance percentage","description":"The percentage of accounts, per region, that can fail before AWS CloudFormation stops the operation in that Region."},"maxConcurrentPercentage":{"label":"Max concurrent percentage","description":"The maximum percentage of accounts in which to perform this operation at one time."},"regionConcurrencyType":{"label":"Region concurrency type","description":"The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time."},"validation":{"noStackSetName":"You must enter a stack set name.","noTemplateFilePath":"You must enter a valid file path where you have uploaded your template.","invalidTemplateFilePath":"Use the following format:  MyArtifact::path/to/file","invalidIamRole":"Use the format arn:aws:iam::<account-ID>:role/<role-name> or arn:aws-us-gov:iam::<account-ID>:role/<role-name>.","invalidPercentage":"Enter a whole number between {{ min }} and 100.","noRegionWithDeploymentTargets":"You must select at least one AWS Region when deployment targets are provided.","noDeploymentTargetsWithRegions":"You must enter deployment targets when AWS Regions are selected."},"regionCurrencyTypeOptions":{"label":{"Empty":"-","Sequential":"Sequential","Parallel":"Parallel"}}},"cloudformationStackSet":{"organizationsAutoDeployment":{"hint":"Format: Enabled","label":{"Disabled":"Disabled","Enabled":"Enabled","EnabledWithStackRetention":"Enabled with stack retention"}},"inline":{"parameters":{"input":{"hint":"Format: ParameterKey"}},"account":{"input":{"hint":"Format: AccountID1, AccountID2"}},"organizationalUnitId":{"input":{"hint":"Format: ou-examplerootid111-exampleouid111, ou-examplerootid222-exampleouid222"}}},"filePath":{"input":{"hint":"Format:  MyArtifact::path/to/file"}},"permissionModel":{"label":{"ServiceManaged":"SERVICE_MANAGED","SelfManaged":"SELF_MANAGED"}}},"cloudFormationStackInstances":{"stackSetName":{"label":"Stack set name","description":"The name of the AWS CloudFormation stack set you want to associate the stack instance with."},"parameterOverrides":{"label":"Parameter overrides","description":"A list of parameter overrides or the location of a file containing an array of parameter overrides. Parameter overrides are custom values that update parameters when you create or update a stack set.","hint":"Format: ParameterKey"},"deploymentTargets":{"label":"Deployment targets","description":"A comma-separated list of targets or the location of the file containing an array of targets. For a self-managed model, targets can only be AWS accounts. For a service-managed model, targets can be be either AWS organizational units or AWS accounts but not both.","hint":"Format for literal input: target1, target2, target3. Format for file path: MyArtifact::path/to/file"},"regions":{"label":"Deployment target AWS Regions","description":"AWS Regions in which to update associated stack instances. The order of Regions listed here determines the Region order for deployment."},"failureTolerancePercentage":{"label":"Failure tolerance percentage","description":"The percentage of accounts, per region, that can fail before AWS CloudFormation stops the operation in that AWS Region."},"maxConcurrentPercentage":{"label":"Max concurrent percentage","description":"The maximum percentage of accounts in which to perform this operation at one time."},"percentage":{"hint":"Enter a whole number between {{ min }} and 100."},"info":{"content":"For the service-managed permissions model, you can provide either accounts or organization unit IDs. For the self-managed permissions model, you can only provide account IDs. Based on your permissions model, enter your literal IDs directly or provide the file path in the deployment targets field."},"validation":{"noStackSetName":"You must enter a stack set name.","stackSetNameTooLong":"No more than 128 characters.","invalidStackSetName":"Stack set name is not valid. Valid characters are [A-Za-z0-9\\\\-]","noRegion":"Select at least one AWS Region.","noDeploymentTargets":"You must provide deployment targets.","invalidPercentage":"Enter a whole number between {{ min }} and 100."}},"sourceTrigger":{"label":"Change detection options","description":"Choose a detection mode to automatically start your pipeline when a change occurs in the source code.","customTile":{"label":{"cwe":"Amazon CloudWatch Events (recommended)","pipeline":"AWS CodePipeline"},"description":{"cwe":"Use Amazon CloudWatch Events to automatically start my pipeline when a change occurs","pipeline":"Use AWS CodePipeline to check periodically for changes"}},"cweService":{"rule":{"definition":{"codecommit":"Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs in the AWS CodeCommit source repository and branch. Deleting this may prevent changes from being detected in that pipeline. Read more: http://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html","s3":"Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs in the Amazon S3 object key or S3 folder. Deleting this may prevent changes from being detected in that pipeline. Read more: http://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html","ecr":"Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs in the Amazon ECR image tag. Deleting this may prevent changes from being detected in that pipeline. Read more: http://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html"}},"iamInput":{"description":"Allows Amazon CloudWatch Events to automatically start a new execution in the {{ pipelineName }} pipeline when a change occurs"},"createServiceRole":{"error":"Could not create service role: {{ roleName }}. The following message contains details on the exception: {{ message }}"},"createPolicyForServiceRole":{"error":"Could not create policy: {{ policyName }} for service role: {{ roleName }}. The following message contains details on the exception: {{ message }}"},"updateServiceRolePolicy":{"error":"Could not update the service role policy. The following message contains details on the exception: {{ message }}"},"operations":{"error":"Failed on the following Amazon CloudWatch Events operation: {{ cweOperation }}. The following message contains details on the exception: {{ message }}"},"putRule":{"error":"Could not create Amazon CloudWatch Events rule {{ cweRule }}."}},"webhookService":{"operations":{"error":"Failed on the following operation: {{ webhookOperation }}. The following message contains details on the exception: {{ message }}"},"putWebhook":{"error":"Could not create webhook {{ webhook }}."},"registerWebhook":{"error":"Could not register webhook {{ webhook }}. The webhook was created, and your pipeline was updated, but the webhook could not be registered with GitHub. Wait a few minutes and then try again. If the problem continues, contact your AWS administrator or AWS Support."},"deregisterWebhook":{"error":"Could not deregister webhook {{ webhook }} with GitHub. Wait a few minutes and then try again. If the problem continues, contact your AWS administrator or AWS Support."},"deleteWebhook":{"error":"Could not delete webhook {%webhook%}."}},"cloudTrailService":{"createTrail":{"error":"Could not create a new trail in AWS CloudTrail."},"describeTrails":{"error":"Could not get list of available trails in AWS CloudTrail."},"getEventSelectors":{"error":"Could not get event selectors in {{ trailName }} trail."},"putEventSelectors":{"error":"Could not put event selectors in {{ trailName }} trail."},"error":{"operation":"Failed on the following AWS CloudTrail operation: {{ cloudTrailOperation }}. The following message contains details on the exception: {{ message }}"}}},"sourceTriggerAlert":{"header":"Source action changed","content":"We will update the following resources to detect changes for your updated pipeline.","skipUpdate":"No resource updates needed for this source action change","deletePipeline":{"header":"Deleting change detection resources","content":"The following resources were used to detect source changes and will be removed."},"table":{"header":{"changeType":"Change type","details":"Details"}},"add":"Add","remove":"Remove","description":{"codecommit":"Pipeline {{ pipelineName }} as a target to Amazon CloudWatch Events rule - {{ cweRule }}","ecr":"Pipeline {{ pipelineName }} as a target to Amazon CloudWatch Events rule - {{ cweRule }}","s3":"Amazon CloudWatch Events rule and AWS CloudTrail data event for pipeline {{ pipelineName }}: {{ cweRule }}, {{ cloudtrailEvent }} (Data event will not be changed if in use for other pipelines.)","github":"Webhook {{ webhookId }} for pipeline {{ pipelineName }}"}},"actionProviderSelect":{"noMatch":"No actions found"},"actionConfigForm":{"label":{"actionProvider":{"label":"Action provider","validation":{"noProvider":"Please select a provider","noRegion":"Please select a region"},"error":{"noProvider":"No selected provider"}}},"provider":{"error":{"importFailed":"Provider import failed."}}},"pipelineHistory":{"empty":{"title":"No executions","message":"Start an execution by making a change to your source action or releasing a change manually"},"th":{"executionId":"Execution ID","sourceRevisions":"Source revisions","status":"Status","duration":"Duration","completed":"Completed","trigger":"Trigger","stopTrigger":"Stop reason","started":"Started","message":"Message"},"heading":{"history":"Execution history"}},"pendingExecutionSummaryModal":{"dictionaryItem":{"heading":{"executionTrigger":"Execution Trigger","nextStage":"Next stage"},"status":{"inbound":"(Inbound next stage)"}}},"sourceRevisionSummaryCell":{"showAll":"Show all"},"listPipelines":{"heading":"Pipelines","th":{"name":"Name","latestExecution":"Most recent execution","latestExecutionTime":"Last executed","sourceRevision":"Latest source revisions","created":"Created","updated":"Last modified"},"actions":{"releasePipeline":"Release pipeline","viewHistory":"View history","createPipeline":"Create pipeline","deletePipeline":"Delete pipeline"},"empty":{"title":"No pipelines","message":"Create a pipeline to get started"},"info":{"ariaLabel":"More info about pipelines"}},"deletePipeline":{"error":{"header":"An error occurred."}},"deleteStageModal":{"modal":{"action":"Delete","header":"Delete stage","description":"Delete the {{stageName}} stage permanently? Once you save your changes to the pipeline, this cannot be reversed."}},"deleteVariablesModal":{"modal":{"header":"Delete variables","description":"Delete the pipeline variables permanently? Once you save your changes to the pipeline, this cannot be reversed."}},"revertStageModal":{"modal":{"action":"Revert","header":"Revert changes","description":"By choosing Revert, you will lose any changes made to this stage. Are you sure you want to undo your changes?"}},"revertVariablesModal":{"modal":{"description":"By choosing Revert, you will lose any changes made to the pipeline variables. Are you sure you want to undo your changes?"}},"editPipeline":{"validation":{"pipelineDoesNotExist":"Pipeline must exist to be edited!"},"button":{"edit":"Edit","editStage":"Edit stage","editVariables":"Edit variables","cancel":"Cancel","delete":"Delete","done":"Done","addParallelAction":"Add action","addSerialAction":"Add action group","save":"Save"},"flash":{"delete":{"header":{"success":"Successfully deleted"},"message":{"success":"Pipeline: {{name}} has been deleted."}}},"success":{"content":"Pipeline was saved successfully."},"actionName":{"reconnectAlert":{"header":"Reconnection required","content":"Changing the action name requires a reconnection from AWS CodePipeline to {{providerName}}. Use the connect button to update the access token for this action."}}},"codestarsourceconnectionWithUpdate":{"update":{"button":"Update connection"}},"updatePipelineModal":{"modal":{"save":"Save","heading":"Save pipeline changes","description":"Saving your changes cannot be undone. If the pipeline is running when you save your changes, that execution will not complete."}},"cancelChangesModal":{"modal":{"heading":"Discard unsaved changes","description":"Are you sure you want to discard your changes?","save":"Discard"}},"editPipelineActionForm":{"button":{"save":"Save"},"heading":{"editAction":"Edit action"},"validation":{"duplicateActionName":"This stage already has an action with this name","outputArtifactsMinimum":"Unable to save the changes. Check the minimum number of output artifacts for this action provider.","outputArtifactsMaximum":"Unable to save the changes. Check the maximum number of output artifacts for this action provider.","inputArtifactsMinimum":"Unable to save the changes. Check the minimum number of input artifacts for this action provider.","inputArtifactsMaximum":"Unable to save the changes. Check the maximum number of input artifacts for this action provider."},"variableNamespace":{"label":"Variable namespace","description":"Choose a namespace for the output variables from this action. You must choose a namespace if you want to use the variables this action produces in your configuration."},"save":{"success":"Updated {{ newActionName }} action successfully."},"newAction":"new","reducedFunctionality":"Editing cross-region actions in the console is not currently supported. You must use the CLI or AWS CloudFormation to add or edit a cross-region action. {{link}}"},"editPipelineActionName":{"label":{"actionName":"Action name"},"description":{"actionName":"Choose a name for your action"},"hint":{"actionName":"No more than 100 characters"},"validation":{"noActionName":"Name is required","actionNameTooLong":"No more than 100 characters","invalidActionName":"Action name is invalid. Valid characters are [A-Za-z0-9.@\\\\-_]"}},"inputArtifacts":{"label":{"inputArtifacts":"Input artifacts"},"description":{"inputArtifacts":"Choose an input artifact for this action."}},"outputArtifacts":{"label":{"outputArtifacts":"Output artifacts"},"description":{"outputArtifacts":"Choose a name for the output of this action."}},"actionArtifacts":{"hint":{"artifactName":"No more than 100 characters"},"validation":{"artifactNameTooLong":"No more than 100 characters"},"inputArtifactOption":{"description":"Defined by: {{actionName}}","notFound":"This artifact is selected as an input to the action, but is no longer defined as an output of a preceding action"},"button":{"add":"Add","remove":"Remove"},"outputArtifact":{"validationError":"Artifact name is invalid. Valid characters are [A-Za-z0-9_\\\\-]"},"description":{"notSelected":"This option is not configured as an input artifact for this action"}},"addStageModal":{"heading":{"addStage":"Add stage"},"label":{"stageName":"Stage name"},"hint":{"stageName":"No more than 100 characters"},"invalid":{"length":"No more than 100 characters","characters":"Stage name is invalid. Valid characters are [A-Za-z0-9.@\\\\_-]"},"inUsed":{"name":"This pipeline already has an stage with this name"}},"addStage":{"button":{"addStage":"Add stage"}},"createPipeline":{"button":{"next":"Next","skip":"Skip","noBuild":"Skip build stage","noDeploy":"Skip deploy stage","previous":"Previous","createPipeline":"Create pipeline"},"wizardStep":{"settings":"Choose pipeline settings","source":"Add source stage","build":"Add build stage","deploy":"Add deploy stage","review":"Review","artifactLocationDetail":"A new Amazon S3 bucket will be created as the default artifact store for your pipeline"},"success":{"content":"Congratulations! The pipeline {{ pipelineName }} has been created."},"serviceRole":{"createRole":{"error":"Could not create role {{ roleName }}"},"failed":{"error":"Role {{roleName}} was not created."}},"encryptionKey":{"customTile":{"label":"Encryption key"},"default":{"label":"Default AWS Managed Key","description":"Use the AWS managed customer master key for CodePipeline in your account to encrypt the data in the artifact store."},"custom":{"label":"Customer Managed Key","description":"To encrypt the data in the artifact store under an AWS KMS customer managed key, specify the key ID, key ARN, or alias ARN.","hint":"To specify a KMS customer master key in a different AWS account, enter the full key ARN.","title":"KMS customer master key"}}},"skipStepModal":{"modal":{"header":"Skip {{ stageName }} stage","description":"Your pipeline will not include a {{ stageName }} stage. Are you sure you want to skip this stage?"},"build":"build","deployment":"deployment"},"sourceStep":{"heading":{"stepName":"Source"},"label":{"sourceProvider":"Source provider"},"description":{"sourceProvider":"This is where you stored your input artifacts for your pipeline. Choose the provider and then provide the connection details."}},"settingsStep":{"heading":{"stepName":"Pipeline settings","advanced":"Advanced settings"},"label":{"name":"Pipeline name","serviceRole":"AWS service role"},"hint":{"name":"No more than 100 characters"}},"deployStep":{"heading":{"stepName":"Deploy"},"label":{"deployProvider":"Deploy provider"},"description":{"deployProvider":"Choose how you deploy to instances. Choose the provider, and then provide the configuration details for that provider."},"noSkipAlert":{"header":"You cannot skip this stage","content":"Pipelines must have at least two stages. Your second stage must be either a build or deployment stage. Choose a provider for either the build stage or deployment stage."}},"cancelCreationButton":{"heading":{"stepName":"Cancel pipeline wizard"},"description":"Are you sure you want to exit this wizard before creating the pipeline? Your choices will not be saved.","button":{"confirmation":"OK"}},"buildStep":{"heading":{"stepName":"Build"},"label":{"buildProvider":"Build provider"},"description":{"buildProvider":"This is the tool of your build project. Provide build artifact details like operating system, build spec file, and output file names."}},"reviewStep":{"heading":{"pipelineSettings":"Pipeline settings","sourceActionProvider":"Source action provider","buildActionProvider":"Build action provider","deployActionProvider":"Deploy action provider"},"label":{"pipelineName":"Pipeline name","artifactLocation":"Artifact location","encryptionKey":"Custom KMS key","serviceRole":"Service role name"},"sourceStage":"Source stage","noSourceProvider":"No source","buildStage":"Build stage","noBuildProvider":"No build","deployStage":"Deployment stage","noDeployProvider":"No deploy","stage":"{{name}} stage","actionProvider":"{{name}} action provider","button":{"edit":"Edit"}},"pipelineName":{"label":{"name":"Pipeline name"},"description":{"name":"Enter the pipeline name. You cannot edit the pipeline name after it is created."},"hint":{"name":"No more than {{ characterLimit }} characters"},"validation":{"noPipelineName":"Enter a pipeline name","invalidPipelineName":"Pipeline name is invalid. Valid characters are [A-Za-z0-9.@-_]","pipelineNameTooLong":"Enter a pipeline name under {{ characterLimit }} characters","pipelineAlreadyExists":"This name is already in use"}},"artifactStoreSelector":{"label":{"artifactLocation":"Artifact store","customLocation":"Custom location","defaultLocation":"Default location"},"description":{"customLocation":"Choose an existing S3 location from your account in the same region and account as your pipeline","defaultLocation":{"defaultBucket":"Use the default artifact store (Amazon S3 {{ bucketName }}) designated in the same region and account as your pipeline","newBucket":"Create a default S3 bucket in your account."}},"validation":{"noBucketSelected":"You must select a bucket"}},"transitionModal":{"heading":{"enable":"Enable transition","disable":"Disable transition","reason":"Disabling reason","time":"Disabling time"},"button":{"enable":"Enable","disable":"Disable"},"label":{"reason":"Disabling reason"},"description":{"reason":"Explain why you are disabling the transition."},"disablingTransition":"You are about to disable the transition between \\"{{previousStageName}}\\" and \\"{{stageName}}\\".","enablingTransition":"You are about to enable the transition between \\"{{previousStageName}}\\" and \\"{{stageName}}\\".","disable":{"error":{"empty":"Provide a message explaining the disabled transition","exceedsReasonCharLimit":"No more than 300 characters","disablingReason":"Message contains invalid characters. Valid characters are [a-zA-Z0-9!@ \\\\(\\\\)\\\\.\\\\*\\\\?\\\\-]+"}}},"stageTransition":{"alt":{"enabled":"Transition enabled","disabled":"Transition disabled"},"alert":{"enabled":"Transition was enabled successfully","disabled":"Transition was disabled successfully"}},"tagType":"Pipeline","action":{"type":{"category":{"Source":"Source","Build":"Build","Test":"Test","Deploy":"Deploy","Invoke":"Invoke","Approval":"Approval"},"Source":{"AWS":{"CodeCommit":"AWS CodeCommit","S3":"Amazon S3","ECR":"Amazon ECR","Bitbucket":"Bitbucket"},"ThirdParty":{"GitHub":"GitHub (Version 1)","SauceLabs":"SauceLabs"},"CodeStarConnection":{"Bitbucket":"Bitbucket","GitHub":"GitHub (Version 2)","GitHubEnterpriseServer":"GitHub Enterprise Server","GitLab":"GitLab","connectbutton":"Connect to {{providerLabel}}","connectingText":"Connecting","connectedText":"Connected","successText":"Successfully connected to {{providerLabel}}","updateConnection":{"button":{"text":"Complete connection"}}}},"Bitbucket":{"connectText":"Connect to Bitbucket","connectingText":"Connecting","connectedText":"Connected","successText":"Successfully connected to Bitbucket","updateConnection":{"button":{"text":"Complete connection"}}},"GitHubEnterpriseServer":{"connectText":"Connect to GitHub Enterprise Server"},"Build":{"AWS":{"CodePipeline":"AWS Build","CodeBuild":"AWS CodeBuild"},"ThirdParty":{"SolanoCI":"Solano CI","SolanoCIPrivate":"Solano CI (Test realm)"},"AddJenkins":"Add Jenkins","Custom":"Custom {{provider}} (Version: {{version}})"},"Deploy":{"AWS":{"CloudFormation":"AWS CloudFormation","CodeDeploy":"AWS CodeDeploy","CodeDeployToECS":"Amazon ECS (Blue/Green)","CodeDeployToEKS":"Amazon EKS","ElasticBeanstalk":"AWS Elastic Beanstalk","ECS":"Amazon ECS","OpsWorks":"AWS OpsWorks Stacks","OpsWorksPrivate":"AWS OpsWorks Stacks (Test realm)","S3":"Amazon S3","ServiceCatalog":"AWS Service Catalog","CloudFormationStackSet":"AWS CloudFormation Stack Set","CloudFormationStackInstances":"AWS CloudFormation Stack Instances"},"ThirdParty":{"ThirdPartyDeployProvider":"ThirdPartyDeployProvider","AlexaSkillsKit":"Alexa Skills Kit"}},"Test":{"AWS":{"CodePipeline":"AWS Test","CodeBuild":"AWS CodeBuild","DeviceFarm":"AWS Device Farm"},"ThirdParty":{"BlazeMeter":"BlazeMeter","BlazeMeterPrivate":"BlazeMeter (Test realm)","Apica":"Apica Loadtest","Runscope":"Runscope API Monitoring","RunscopePrivate":"Runscope API Monitoring (Test realm)","GhostInspector":"Ghost Inspector UI Testing","GhostInspectorPrivate":"Ghost Inspector UI Testing (Test realm)","HPStormRunner":"MF StormRunner Load","HPStormRunnerPrivate":"MF StormRunner Load Private","HPStormRunnerQA":"MF StormRunner Load QA","HPStormRunnerPrivateQA2":"MF StormRunner Load Private QA2","HPStormRunnerPrivateStaging":"MF StormRunner Load Private Staging","HPStormRunnerPrivateSecurity":"MF StormRunner Load Private Security","MFStormRunner":"Micro Focus StormRunner Load","MFStormRunnerQA":"Micro Focus StormRunner Load QA","MFStormRunnerQA2":"Micro Focus StormRunner Load Private QA2","MFStormRunnerStaging":"Micro Focus StormRunner Load Private Staging","MFStormRunnerSecurity":"Micro Focus StormRunner Load Private Security","NouvolaDiveCloud":"Nouvola","Snyk":"Snyk"}},"Invoke":{"AWS":{"Lambda":"AWS Lambda","StepFunctions":"AWS Step Functions"},"ThirdParty":{"Snyk":"Snyk"}},"Approval":{"AWS":{"Manual":"Manual approval"}}}},"optout-flash":{"header":"Introducing the new AWS CodePipeline console experience!","body1":"We have updated the AWS CodePipeline console experience to make it easier to use."},"error":{"code":{"ConfigurationError":"Invalid action configuration","InternalError":"Internal error","JobFailed":"Action execution failed","PermissionError":"Insufficient permissions","RequestCancelled":"Request cancelled","unspecific":"Error"}},"bitbucketConnectionForm":{"submitText":"Connect","header":"Connect to Bitbucket","section":{"header":"Bitbucket connection settings"},"connectionName":{"label":"Connection name"},"installationId":{"label":"Bitbucket apps","description":"Bitbucket apps create a link for your connection with Bitbucket. To start, install a new app and save this connection."},"installAppText":"Install a new app","installingAppText":"Installing","installedAppText":"Installed","tokenError":{"message":"Could not retrieve token. Close the window and try again."},"connectionNotPendingCannotBeUpdated":{"message":"This connection is not in a PENDING state, and cannot be updated from the console."},"CodePipelineBitbucketActionGitClone":{"importantInfo":"The full clone option requires that your CodeBuild execution role has permissions to perform a clone via the Bitbucket connection chosen in your pipeline.","info":"In accordance with the principle of least privilege, these permissions are not included in your CodeBuild policy by default.","moreInfo":"For more information on adding the required permissions to your CodeBuild project."}},"connectionForm":{"CodePipelineActionGitClone":{"importantInfo":"The full clone option requires that your CodeBuild execution role has permissions to perform a clone via the {{providerName}} connection chosen in your pipeline.","info":"In accordance with the principle of least privilege, these permissions are not included in your {{providerName}} policy by default.","moreInfo":"For more information on adding the required permissions to your CodeBuild project."},"CodeCommitActionGitClone":{"importantInfo":"The full clone option requires that your CodeBuild execution role has permissions to perform GitPull of CodeCommit repository chosen in your pipeline.","info":"In accordance with the principle of least privilege, these permissions are not included in your {{providerName}} policy by default.","moreInfo":"For more information on adding the required permissions to your CodeBuild project."}},"viewExecution":{"header":"Pipeline execution: {{executionId}}","summary":{"header":"Execution summary"},"actionExecutions":{"message":"Message","errorMessage":"Error message","header":"Actions","action":"Action name","stage":"Stage name","status":"Status","provider":"Action provider","started":"Started","completed":"Completed","summary":"Execution summary"},"pipelineExecutions":{"message":"Latest action execution message"},"prevExecution":"Previous execution","nextExecution":"Next execution","executionFailed":{"header":"Execution failed"},"noDetails":{"header":"No execution details","description":"Details are not available for this pipeline execution."},"undefinedVersion":{"header":"Cannot display visualization","description":"One or more pipeline versions from this execution are no longer stored. AWS CodePipeline only stores the ten latest versions of a pipeline. The following version(s) are no longer stored:","descriptionDetail":"Version {{version}}"},"tabs":{"timeline":"Timeline","visualization":"Visualization"},"copyButton":"Copy pipeline execution ID","buttons":{"viewExecutionDetails":"View execution details","viewRevisions":"View revisions"}},"viewActionExecution":{"buttons":{"viewPipelineExecution":"View pipeline execution","prevExecution":"Previous action","nextExecution":"Next action","detailedSummary":"View in {{provider}}"},"actionDetails":{"header":"Action details"},"actionConfiguration":{"header":"Action configuration","show":{"variable":{"values":"Show resolved configuration"}}},"labels":{"actionName":"Action name","stageName":"Stage name","provider":"Action provider","region":"Region","output":{"variables":"Output variables"},"namespace":"Namespace"},"artifactsTable":{"header":"Artifacts","artifactName":"Artifact name","artifactType":"Artifact type","artifactProvider":"Artifact provider","input":"Input","output":"Output"},"copyButton":"Copy action execution ID","noConfiguration":{"header":"No action configuration","message":"This action does not have any configuration."},"header":"{{actionName}}: {{actionExecutionId}}","pipelineVariablesTable":{"key":"Key","value":"Value"}},"generalSettings":{"pipelneName":"Pipeline name","pipelineArn":"Pipeline ARN","serviceRoleArn":"Service role ARN","version":"Version","artifactStore":"Artifact store","artifactLocation":"Location","artifactType":"Type","artifactRegion":"Region"},"provider":{"Source":{"AWS":{"CodeCommit":{"RepositoryName":{"label":"Repository name","description":"Choose a repository that you have already created where you have pushed your source code."},"BranchName":{"label":"Branch name","description":"Choose a branch of the repository"},"OutputArtifactFormat":{"label":"Output artifact format","description":"Choose the output artifact format.","zip":{"label":"CodePipeline default","description":"AWS CodePipeline uses the default zip format for artifacts in the pipeline. Does not include Git metadata about the repository."},"codebuild":{"label":"Full clone","description":"AWS CodePipeline passes metadata about the repository that allows subsequent actions to do a full Git clone. Only supported for AWS CodeBuild actions."}},"PollForSourceChanges":{"label":"Change detection options","description":"Choose a detection mode to automatically start your pipeline when a change occurs in the source code."}},"ECR":{"RepositoryName":{"label":"Repository name","description":"Choose an Amazon ECR repository as the source location."},"ImageTag":{"label":"Image tag","description":"Choose the image tag that triggers your pipeline when a change occurs in the image repository.","hint":"If an image tag is not selected, defaults to latest"}},"CodeStarSourceConnection":{"ConnectionArn":{"label":"Connection","description":"Choose an existing connection or create a new one. After creating a connection, return to this page to complete setup."},"FullRepositoryId":{"label":"Repository name","description":"Choose a repository in your Bitbucket account."},"BranchName":{"label":"Branch name","description":"Choose a branch of the repository."},"OutputArtifactFormat":{"label":"Output artifact format","description":"Choose the output artifact format. The full clone option requires that your CodeBuild execution role has permissions to perform a clone via the Bitbucket connection chosen in your pipeline.","zip":{"label":"CodePipeline default","description":"AWS CodePipeline uses the default zip format for artifacts in the pipeline. Does not include Git metadata about the repository."},"codebuild":{"label":"Full clone","description":"AWS CodePipeline passes metadata about the repository that allows subsequent actions to do a full Git clone. Only supported for AWS CodeBuild actions."}}},"Bitbucket":{"ConnectionArn":{"label":"Connection","description":"Choose an existing connection that you have already configured, or create a new one and then return to this task."},"FullRepositoryId":{"label":"Repository name","description":"Choose a repository in your Bitbucket account."},"BranchName":{"label":"Branch name","description":"Choose a branch of the repository."},"OutputArtifactFormat":{"label":"Output artifact format","description":"Choose the output artifact format.","zip":{"label":"CodePipeline default","description":"AWS CodePipeline uses the default zip format for artifacts in the pipeline. Does not include git metadata about the repository."},"codebuild":{"label":"Full clone","description":"AWS CodePipeline passes metadata about the repository that allows subsequent actions to do a full git clone. Only supported for AWS CodeBuild actions."}}}},"CodeStarConnection":{"FullRepositoryId":{"hintText":"<account>/<repository-name>"},"Triggers":{"label":"Pipeline trigger","description":"Source action can either use change detection (branch and commit) or a pipeline trigger configuration, such as Git tags, but not both. Note: Choosing a trigger that is not the branch option will not enable automated change detection for the pipeline.","none":{"description":"Your pipeline only runs if you start it manually or on a schedule."},"option":{"none":"None","branch":"Push in a branch","tags":"Git tags"},"error":"Please select a trigger.","tags":{"label":"Tags","description":"Use comma to separate multiple entries.","include":"Include","exclude":"Exclude","invalidPattern":"Tag pattern must contain 1 ~ 255 characters, and the number of pattern entries must be between 1 ~ 8.","invalidIncludePattern":"Tag include pattern must contain 1 ~ 255 characters, and the number of pattern entries must be between 1 ~ 8.","invalidExcludePattern":"Tag exclude pattern must contain 1 ~ 255 characters, and the number of pattern entries must be between 1 ~ 8."}},"Bitbucket":{"ConnectionArn":{"label":"Connection","description":"Choose an existing connection that you have already configured, or create a new one and then return to this task."},"FullRepositoryId":{"label":"Repository name","description":"Choose a repository in your Bitbucket account."},"BranchName":{"label":"Branch name","description":"Choose a branch of the repository."},"DefaultBranchName":{"label":"Default branch","description":"Default branch will be used only when pipeline execution starts from a different source or manually started."},"OutputArtifactFormat":{"label":"Output artifact format","description":"Choose the output artifact format.","zip":{"label":"CodePipeline default","description":"AWS CodePipeline uses the default zip format for artifacts in the pipeline. Does not include Git metadata about the repository."},"codebuild":{"label":"Full clone","description":"AWS CodePipeline passes metadata about the repository that allows subsequent actions to do a full Git clone. Only supported for AWS CodeBuild actions."}}},"GitLab":{"ConnectionArn":{"label":"Connection","description":"Choose an existing connection that you have already configured, or create a new one and then return to this task."},"FullRepositoryId":{"label":"Repository name","description":"Choose a repository in your GitLab account."},"BranchName":{"label":"Branch name","description":"Choose a branch of the repository."},"DefaultBranchName":{"label":"Default branch","description":"Default branch will be used only when pipeline execution starts from a different source or manually started."},"OutputArtifactFormat":{"label":"Output artifact format","description":"Choose the output artifact format.","zip":{"label":"CodePipeline default","description":"AWS CodePipeline uses the default zip format for artifacts in the pipeline. Does not include Git metadata about the repository."},"codebuild":{"label":"Full clone","description":"AWS CodePipeline passes metadata about the repository that allows subsequent actions to do a full Git clone. Only supported for AWS CodeBuild actions."}}},"GitHubEnterpriseServer":{"ConnectionArn":{"label":"Connection","description":"Choose an existing connection or create a new one. After creating a connection, return to this page to complete setup."},"FullRepositoryId":{"label":"Repository name","description":"Choose a repository in your GitHub Enterprise account."},"BranchName":{"label":"Branch name","description":"Choose a branch of the repository."},"DefaultBranchName":{"label":"Default branch","description":"Default branch will be used only when pipeline execution starts from a different source or manually started."},"OutputArtifactFormat":{"label":"Output artifact format","description":"Choose the output artifact format.","zip":{"label":"CodePipeline default","description":"AWS CodePipeline uses the default zip format for artifacts in the pipeline. Does not include Git metadata about the repository."},"codebuild":{"label":"Full clone","description":"AWS CodePipeline passes metadata about the repository that allows subsequent actions to do a full Git clone. Only supported for AWS CodeBuild actions."}}},"GitHub":{"ConnectionArn":{"label":"Connection","description":"Choose an existing connection that you have already configured, or create a new one and then return to this task."},"FullRepositoryId":{"label":"Repository name","description":"Choose a repository in your GitHub account."},"BranchName":{"label":"Branch name","description":"Choose a branch of the repository."},"DefaultBranchName":{"label":"Default branch","description":"Default branch will be used only when pipeline execution starts from a different source or manually started."},"OutputArtifactFormat":{"label":"Output artifact format","description":"Choose the output artifact format.","zip":{"label":"CodePipeline default","description":"AWS CodePipeline uses the default zip format for artifacts in the pipeline. Does not include Git metadata about the repository."},"codebuild":{"label":"Full clone","description":"AWS CodePipeline passes metadata about the repository that allows subsequent actions to do a full Git clone. Only supported for AWS CodeBuild actions."}}}}},"Review":{"Trigger":{"header":"Trigger configuration","description":"You can add additional pipeline triggers after the pipeline is created."}},"Deploy":{"ThirdParty":{"AlexaSkillsKit":{"SkillId":{"label":"Alexa skill ID","description":"The unique identifier of the skill."},"ClientId":{"label":"Client ID","description":"The client ID of the application registered for LWA (Login With Amazon). Look for this on the Alexa Skills Kit developer portal LWA page."},"ClientSecret":{"label":"Client secret","description":"The client secret of the application registered for LWA (Login With Amazon). Look for this on the Alexa Skills Kit developer portal LWA page."},"RefreshToken":{"label":"Refresh token","description":"The refresh token used to request new access tokens."}}},"AWS":{"ECS":{"ClusterName":{"label":"Cluster name","description":"Choose a cluster that you have already created in the Amazon ECS console. Or create a cluster in the Amazon ECS console and then return to this task."},"ServiceName":{"label":"Service name","description":"Choose a service that you have already created in the Amazon ECS console for your cluster. Or create a new service in the Amazon ECS console and then return to this task."},"FileName":{"label":"Image definitions file","description":"Enter the JSON file that describes your service\'s container name and the image and tag."},"DeploymentTimeout":{"label":"Deployment timeout","description":"Enter the timeout in minutes for the deployment action."}},"AppConfig":{"Application":{"label":"Application","description":"Choose an application that you have already created in the AWS AppConfig console. Or create an application in the AWS AppConfig console and then return to this task."},"Environment":{"label":"Environment","description":"Choose an environment that you have already created in the AWS AppConfig console. Or create an environment in the AWS AppConfig console and then retrun to this task."},"ConfigurationProfile":{"label":"Configuration profile","description":"Choose a configuration profile of the AWS CodePipeline type that you have already created in the AWS AppConfig console. Or create a configuration profile in the AWS AppConfig console and then return to this task."},"DeploymentStrategy":{"label":"Deployment strategy","description":"Choose a deployment strategy that you have already created in the AWS AppConfig console. Or create a deployment strategy in the AWS AppConfig console and then return to this task."},"InputArtifactConfigurationPath":{"label":"Input artifact configuration path","description":"This file path allows CodePipeline to find your configuration data provided in the input artifact."}},"CodeDeploy":{"ApplicationName":{"label":"Application name","description":"Choose an application that you have already created in the AWS CodeDeploy console. Or create an application in the AWS CodeDeploy console and then return to this task."},"DeploymentGroupName":{"label":"Deployment group","description":"Choose a deployment group that you have already created in the AWS CodeDeploy console. Or create a deployment group in the AWS CodeDeploy console and then return to this task."}},"ElasticBeanstalk":{"ApplicationName":{"label":"Application name","description":"Choose an application that you have already created in the AWS Elastic Beanstalk console. Or create an application in the AWS Elastic Beanstalk console and then return to this task."},"EnvironmentName":{"label":"Environment name","description":"Choose an environment that you have already created in the AWS Elastic Beanstalk console. Or create an environment in the AWS Elastic Beanstalk console and then return to this task."}},"CodeDeployToEKS":{"ClusterName":{"label":"Cluster name","description":"Choose an existing EKS cluster. Or create an EKS cluster and then return to this task."},"CodeDeployServiceRoleArn":{"label":"CodeDeploy role ARN","description":"Choose a CodeDeploy IAM role that has permissions to manage your EKS cluster."},"RollbackOnFailure":{"label":"Roll back on failure","description":"Choose this option to turn on automatic rollbacks for failed deployments."},"RollbackOnStop":{"label":"Roll back on stop","description":"Choose this option to turn on automatic rollbacks for stopped deployments."},"BakeTimeMinutes":{"label":"Bake time","description":"The time in minutes the action waits after a cluster update."},"BeforeUpdate":{"label":"BeforeUpdate function","description":"The name of an AWS Lambda function to invoke before an update."},"AfterUpdate":{"label":"AfterUpdate function","description":"The name of an AWS Lambda function to invoke after an update."},"CloudWatchAlarms":{"label":"CloudWatch alarms","description":"A list of CloudWatch alarms to monitor during an update. You can choose up to 10 alarms."}}}},"Invoke":{"AWS":{"Lambda":{"FunctionName":{"label":"Function name","description":"Choose a function that you have already created in the AWS Lambda console. Or create a function in the AWS Lambda console and then return to this task."},"UserParameters":{"label":"User parameters","description":"This string will be used in the event data parameter passed to the handler in AWS Lambda."}},"StepFunctions":{"StateMachineArn":{"label":"State machine ARN","description":"Choose a state machine that you have already created in the AWS Step Functions console. Or create a state machine in the AWS Step Functions console and then return to this task."},"ExecutionNamePrefix":{"label":"Execution name prefix","description":"This string is used as the prefix of the execution name when you start state machine execution."},"InputType":{"label":"Input type","description":"The type of input used to start the state machine execution.","literal":{"id":"Literal","description":"Directly use the JSON that you provide in the Input field."},"filePath":{"id":"File path","description":"Use the JSON contained in a file in your input artifact. Provide the file path in the Input field."}},"Input":{"label":"Input","description":"The input you want to provide for your state machine execution based on the input type."}}}},"Test":{"Template":{"NewJenkins":{"ProviderName":{"label":"Provider name","description":"Enter the provider name you configured in the Jenkins plugin","hint":"This name must match the name configured in the plugin."},"ServerUrl":{"label":"Server URL","description":"Enter the URL for your Jenkins server"},"ProjectName":{"label":"Project name","description":"Enter the name of the project you created in the Jenkins plugin"}}}}},"appconfigProvider":{"heading":{"providerName":"AWS AppConfig"},"empty":{"application":"You must select an application","environment":"You must select an environment","configurationProfile":"You must select a configuration profile","deploymentStrategy":"You must select a deployment strategy","invalidInputArtifactConfigurationPath":"You must specify an input artifact configuration path"},"invalid":{"invalidInputArtifactConfigurationPath":"Input artifact configuration path must be between 1 and 2048 characters"},"placeholder":{"inputArtifactConfigurationPath":"path/to/my/config.json"}},"codeDeployToEKSProvider":{"validation":{"noClusterName":"You must select a cluster","noRoleName":"You must select a role","invalidBakeTime":"The provided bake time is not valid. Enter a whole number between 0 and 2880.","tooManyCloudWatchAlarms":"You can only choose up to 10 alarms."}},"detectChanges":{"field":{"label":"Start the pipeline on source code change","description":"Automatically starts your pipeline when a change occurs in the source code. If turned off, your pipeline only runs if you start it manually or on a schedule."},"section":{"label":"Change detection options"}},"stackEventsTable":{"header":"CloudFormation events","resource":"stack events","empty":{"subtitle":"No stack events to display."},"columnDefinitions":{"timestamp":"Timestamp","logicalId":"Logical ID","status":"Status","statusReason":"Status reason"}},"variables":{"header":"Variables","headerDescription":"You can add variables at the pipeline level. You can choose to assign the value when you start the pipeline.","name":{"hint":"Enter variable name"},"defaultValue":{"view":{"label":"Default value"},"input":{"label":"Default value - optional"},"hint":"Enter default value"},"description":{"view":{"label":"Description"},"input":{"label":"Description - optional"},"hint":"Enter description"},"add":{"button":{"label":"Add variable","hint":"You can add up to {{number}} variables."}},"validations":{"nameRequired":"Name required","nameNotUnique":"Name must be unique"},"noPipelineVariables":"No variables defined at the pipeline level in this pipeline.","noVariables":"No variables","firstExecution":{"alert":"The first pipeline execution will fail if variables have no default values."}}}')},codestar:{...JSON.parse('{"addTeamMember":{"header":"Team member details","button":"Add team member","user":{"label":"User","description":"An existing team member from other AWS CodeStar projects or an IAM user."},"projectRole":{"label":"Project role"},"remoteAccess":{"label":"Remote access","description":"Allow SSH access to project instances."},"sshPublicKey":{"label":"SSH Public key"},"details":{"header":"Team member details"},"existing":{"label":"Existing user","description":"Add an existing team member from another AWS CodeStar project or an IAM user."},"new":{"label":"New user","description":"Create a new IAM user to add to this project.","create":"Create new IAM user"},"displayName":{"label":"Display name"},"iamUserName":{"label":"IAM user name"},"validations":{"user":{"blank":"A user must be selected."},"displayName":{"blank":"Display name is required.","format":"Display name cannot start or end with a space."},"iamUserName":{"blank":"IAM user name is required.","format":"100 characters maximum. Only alphanumeric characters and the following special characters: _+= ,.@-"},"emailAddress":{"blank":"Email address is required.","format":"The email address format is not valid."},"projectRole":{"blank":"A project role must be selected."}},"successFlash":{"content":"{{displayName}} has been added as a {{projectId}} team member."},"optionGroup":{"iamUsers":"IAM users","codestarUsers":"Existing AWS CodeStar users"}},"createUserProfile":{"userOnboarding":{"header":"Create user profile","description":"It looks like this is your first time here. Set up your AWS CodeStar user settings, and you can then choose to be added as a team member on this project.","button":"Create user profile"},"successFlash":{"content":"AWS CodeStar user profile for {{displayName}} has been created. You can now be added to a CodeStar project team."}},"breadcrumbs":{"codestar":"CodeStar","projects":"Projects","createProject":"Create project","ide":"IDE","repository":"Repository","pipeline":"Pipeline","monitoring":"Monitoring","issues":"Issues","settings":"Settings","editTags":"Edit tags","createEnvironment":"Create environment","team":"Team","addTeamMember":"Add team member","editTeamMember":"Edit team member","connectCLI":"Connect command line","connectEclipse":"Connect Eclipse","connectVisualStudio":"Connect Visual Studio","connectGithub":"Connect to GitHub","connectJira":"Connect to Jira"},"editTeamMember":{"details":{"header":"Team member details"},"button":"Edit team member","successFlash":{"content":"{{displayName}} has been updated."}},"createEnvironment":{"validations":{"environmentName":{"blank":"Environment name is required."}},"create":"Create environment","header":"Create AWS Cloud9 environment","description":"The AWS Cloud9 IDE is fully integrated into AWS developer tools. Edit your project code with a cloud-based IDE that includes a command line interface.","environmentName":{"description":"The name needs to be unique per user. You can update it at any time in your environment settings.","label":"Environment name"},"environmentDescription":{"description":"This will appear on your environment\'s card in the environments list. You can update it at any time in the AWS Cloud9 console.","label":"Environment description"},"vpc":{"description":"Choose an existing Amazon Virtual Private Cloud (VPC) where AWS Cloud9 can set up your instance."},"subnets":{"description":"Choose a range of IP addresses in your VPC to isolate instance resources from each other."},"shutDownTime":{"description":"Choose how long after no activity before your AWS Cloud9 environment instance shuts down and stops any further charges.","label":"Cost-saving settings","halfHour":{"label":"After 30 minutes"},"oneHour":{"label":"After 1 hour"},"fourHours":{"label":"After 4 hours"},"oneDay":{"label":"After a day"},"oneWeek":{"label":"After a week"},"never":{"label":"Never"}},"environmentDetails":{"label":"Environment details"},"instanceType":{"label":"Instance type"},"defaults":{"description":"Created by AWS CodeStar"},"success":{"header":"Create in progress","message":"Environment {{environmentName}} is being created. See CloudFormation for more details."}},"createProject":{"projectTemplate":{"clearFilters":"Clear filters","step":{"header":"Choose a project template"}},"setupProject":{"step":{"header":"Set up your project"}},"review":{"step":{"header":"Review"}},"preferences":{"templatesPerPage":{"header":"Templates per page","option":"{{perPage}} templates"}},"computeType":{"label":"AWS service"},"category":{"label":"Application type"},"language":{"label":"Programming language"},"templateFilter":{"header":"Templates","description":"Filter by AWS service, application type, and programming language."},"validations":{"projectTemplate":"A project template must be selected.","projectName":{"blank":"Project name is required.","format":"Project name cannot start or end with a space."},"projectId":{"hint":"Project ID must be within 2-15 characters, start with a letter, and can only contain lowercase letters, numbers, and dashes.","blank":"Project ID is required.","minLength":"Project ID must contain at least 2 valid characters.","maxLength":"Project ID cannot exceed 15 characters.","format":"Project ID must start with a letter and can only contain lowercase letters, numbers, and dashes.","reserved":"Project ID cannot contain \\"-lambda-\\"."},"sourceProvider":{"blank":"Choose a source provider."},"repositoryName":{"blank":"Repository name is required.","hint":"Repository name can only contain letters, numbers, dashes, underscores, and periods. It cannot end with \\".git\\".","format":"Repository name can only contain letters, numbers, dashes, underscores, and periods.","git":{"format":"Repository name cannot end with \\".git\\"."}},"keyPair":{"blank":"Choose a key pair."},"privateKeyAccess":{"unchecked":"Private key file access must be acknowledged."},"alexaVendor":{"blank":"Choose a vendor."},"amazonDeveloperAccount":{"blank":"Connection to Amazon developer account is required."},"gitHub":{"blank":"Connection to GitHub account is required."}},"button":"Create project","repositoryName":{"description":"The name of the new repository."},"repositoryDescription":{"description":"An optional description of the new repository."},"repositoryOwner":{"label":"Repository owner","description":"The owner of the new repository. This can be a personal GitHub account or a GitHub organization."},"repositoryPrivacy":{"public":{"label":"Public","description":"Anyone can see this repository. You choose who can commit to this repository."},"private":{"label":"Private","description":"You choose who can see and commit to this repository."}},"defaultRepositoryDescription":"Repository created by AWS CodeStar.","alexa":{"vendor":{"roles":{"administrator":"Administrator","developer":"Developer","marketer":"Marketer","analyst":"Analyst"},"id":{"label":"ID"},"role":{"label":"Role"},"label":"Vendor account","description":"Amazon developer accounts are associated with multiple vendor accounts. Choose a vendor account to use for this skill."},"amazonDeveloper":{"header":"Amazon developer account","label":"Connect an Amazon developer account","button":"Connect Amazon developer account"},"vendorId":{"label":"Vendor ID"},"vendorRole":{"label":"Vendor role"}},"templateName":{"helloWordSkill":"Hello World Skill","colorSkill":"Color Skill","factSkill":"Fact Skill","howToSkill":"How To Skill"},"templates":{"eb":{"description":"Runs in a managed application environment"},"ec2":{"description":"Runs on virtual servers that you manage"},"lambda":{"description":"Runs serverless"},"webApplication":"Web application","webService":"Web service","alexaSkill":"Alexa skill","staticWebsite":"Static website","awsConfigRule":"AWS Config rule"}},"deleteEnvironment":{"flash":{"header":"Delete in progress","message":"Environment {{environmentName}} is being deleted. See CloudFormation for more details."}},"deleteProject":{"button":"Delete project","resources":{"label":"Delete resources","description":"Allow AWS CodeStar to delete project resources for you, including EC2 instances, CodeCommit repositories, and other resources.","associated":{"label":"Delete associated resources"}},"success":{"heading":"Delete in progress","description":"AWS CodeStar is deleting your project: {{projectArn}}."},"error":{"heading":"Failed to delete project"}},"editTags":{"description":"A tag is a label that you assign to an AWS resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your AWS costs. The tag limit varies with the resource, but most resources can have up to 50 tags. Keys cannot begin with \\"AWS:\\"."},"listIssues":{"createIssue":{"jira":{"button":"Create Jira issue"},"github":{"button":"Create GitHub issue"}},"status":{"open":{"label":"Open"},"closed":{"label":"Closed"}},"filter":{"all":"All issues","open":"Open issues","closed":"Closed issues"},"header":{"issue":"Issue","assignee":"Assignee","lastActivity":"Last activity","status":"Status"},"preferences":{"issuesPerPage":"Issues per page"},"tableHeader":{"github":"GitHub Issues","jira":"Jira Issues"},"providers":{"header":"External issue tracking","description":{"github":"You can add external issue tracking to your AWS CodeStar project. You must have a GitHub or Atlassian account.","jira":"You can add external issue tracking to your AWS CodeStar project. You must already have an Atlassian account.","remove":"Remove external issue tracking from your AWS CodeStar project."},"github":{"header":"GitHub","description":"Issue tracking from your GitHub repository."},"jira":{"header":"Jira","description":"Issue tracking and project management tool."},"addToProject":"Add to project","removeFromProject":"Remove from project"},"pageSize":{"label":"{{numberOfIssues}} issues"},"error":{"loadingError":"An unexpected error occured while loading this project\'s issues."}},"connectJira":{"accountDetails":{"header":"Jira account details"},"applicationUrl":{"label":"Jira URL","validations":{"blank":"Jira URL is required."},"description":"The URL of your Jira account. Example: https://example.atlassian.net","step":"Configure Jira account"},"createApplicationLink":{"header":"Create application link in Jira","description":"In Jira, go to the \\"Application link\\" section in the management console. Create an application link using the values generated below.","link":"Go to Jira URL","alert":"You must check the checkbox labeled \\"Create incoming link\\"."},"awsCodeStarUrl":{"label":"Application URL"},"applicationName":{"label":"Application name"},"applicationType":{"label":"Application type"},"genericApplication":{"value":"Generic Application"},"configureIncomingAuthentication":{"header":"Configure incoming authentication in Jira","description":"Next, configure the incoming authentication in Jira using the values generated below.","alert":"After using the values above, your new application link should show up in the Application Links list in Jira."},"consumerKey":{"label":"Consumer key"},"consumerName":{"label":"Consumer name"},"publicKey":{"label":"Public key"},"connectCodeStar":{"header":"Connect AWS CodeStar project to Jira","alert":"Connect your AWS CodeStar project to Jira by clicking the button below. When prompted, choose \\"Allow\\". Once completed, Jira issues will appear within your project."},"connectButton":{"text":"Connect to Jira"},"applicationLink":{"step":"Create application link"},"submit":{"button":"Connect to Jira"},"error":{"message":"Jira configuration was unsuccessful. To fix this, you must delete the unsuccessful application link and then restart the configuration process. Restart the steps once you have deleted the link. Application link to delete in Jira: {{applicationName}}."}},"gettingStarted":{"header":"Next steps","cloud9":{"header":"Develop with AWS Cloud9","description":"The AWS Cloud9 cloud-based IDE is fully integrated into AWS developer tools and ready to use in seconds.","button":"Set up AWS Cloud9"},"otherIDEs":{"header":"Develop with other IDEs","description":"We also have integrations with Visual Studio, Eclipse, and the command line interface.","button":"Set up other IDEs"},"issues":{"header":"Track issues","description":"Add issue tracking to your development workflow.","button":"Set up issue tracking"},"IDEs":{"header":"Develop with an IDE","description":"We have integrations with Visual Studio, Eclipse, and the command line interface.","button":"Set up IDE"},"team":{"header":"Add people to your project","description":"Add team members to this project with IAM users.","button":"Add team members"}},"projectCode":{"container":{"header":"Access your project code","description":"Connect your project to an integrated development environment (IDE) to modify, test, and push source code changes. ","link":"Open documentation"},"browserTools":{"header":"Tools you can use in your browser"},"localTools":{"header":"Tools you can use locally"},"cloud9":{"header":"AWS Cloud9","description":"Use AWS Cloud9 to write, run and edit your source code in a fully AWS-integrated development environment that AWS CodeStar creates for you.","button":"Create environment"},"github":{"header":"GitHub","description":"Use GitHub to quickly write and edit your source code in a simple text-editor.","button":"Edit in GitHub"},"codeCommit":{"header":"AWS CodeCommit","description":"Use CodeCommit to edit and upload your source code directly in the console without needing to clone your source code or manage credentials.","button":"Edit in AWS CodeCommit"},"tools":{"link":"View instructions"},"cli":{"header":"Command line interface"},"cliGitHub":{"description":"Use the command line to edit your source code directly to your project\'s GitHub repository."},"cliCodeCommit":{"description":"Use the command line to edit your source code directly from your project\'s Git repository."},"eclipse":{"header":"Eclipse","description":"Use the AWS Toolkit for Eclipse to edit your source code in Eclipse."},"visualStudio":{"header":"Visual Studio for Windows","description":"Use the AWS Toolkit for Visual Studio to edit your source code in Microsoft Visual Studio 2015 and later."}},"listEnvironments":{"filters":{"my":"My environments","shared":"Shared environments","account":"Account environments"},"header":"Cloud9 environments","permission":{"owner":{"label":"Owner"},"readWrite":{"label":"Shared"},"readOnly":{"label":"Account"},"none":{"label":"None"}},"preferences":{"environmentsPerPage":{"header":"Environments per page","option":"{{perPage}} environments"}}},"listProjects":{"header":"Projects","preferences":{"projectsPerPage":{"header":"Projects per page","option":"{{perPage}} projects"}},"sectionHeaders":{"quickLinks":"Quick Links","created":"Created"}},"listTeamMembers":{"th":{"name":"Name","email":"Email","role":"Role","remoteAccess":"Remote access"},"preferences":{"header":"Preferences","save":"Save","cancel":"Cancel","membersPerPage":{"header":"Team members per page","option":"{{perPage}} team members"}},"header":"Team members","roles":{"owner":"Owner","contributor":"Contributor","viewer":"Viewer"}},"pipeline":{"heading":{"pipeline":"Pipeline details"},"label":{"pipeline":"Pipeline","lastAction":"Most recent action","status":"Status"},"text":{"lastExecutedAction":"{{stageName}}: {{actionName}} using {{providerName}}"},"actions":{"edit":"Edit","history":"View history","releaseChange":"Release change"},"error":{"loadingError":"An unexpected error occured while loading this project\'s pipeline.","noPipeline":"Unable to load pipeline"}},"projectDetailsTable":{"header":"Project details","headers":{"stackName":"Stack name","arn":"ARN"}},"projectResourcesTable":{"header":"Project resources","description":"Find all resources associated with your project. Search by entering the service type or resource name.","headers":{"type":"Type","name":"Name","arn":"ARN"},"filters":{"developerTools":"Developer tools","all":"All"},"provisioning":{"message":"Waiting for project to provision"}},"removeTeamMember":{"successFlash":{"header":"Successfully removed team member","content":"{{displayName}} has been removed as a {{projectId}} team member."}},"repository":{"details":{"header":"Repository details"},"name":{"label":"Repository name"},"provider":{"label":"Provider"},"lastModified":{"label":"Last modified"},"clone":{"label":"Clone repository"},"viewCommits":{"button":"View commits"},"author":{"label":"Author"},"commitId":{"label":"Commit ID"},"parentCommit":{"label":"Parent commit"},"commitMessage":{"label":"Commit message"},"pullRequestTable":{"header":"Pull requests"},"tableHeader":{"pullRequest":"Pull request","author":"Author","destination":"Destination","lastActivity":"Last activity","status":"Status"},"pullRequestStatus":{"open":"Open","closed":"Closed","merged":"Merged","filter":{"all":"All pull requests","open":"Open pull requests","closed":"Closed pull requests"}},"pullRequests":{"create":{"button":"Create pull request"}},"error":{"loadingError":"An unexpected error occured while loading this project\'s repository."},"cloneUrl":{"https":"HTTPS","ssh":"SSH","success":"Copied repository"}},"viewProjectPage":{"tab":{"overview":"Overview","ide":"IDE","repository":"Repository","pipeline":"Pipeline","monitoring":"Monitoring","issues":"Issues","settings":"Settings"},"button":{"viewApplication":"View application"}},"monitoring":{"metrics":{"header":"{{serviceLabel}} metrics","empty":{"title":"Instance metrics not available","description":"The application may not have been fully deployed yet. Please check the status of your pipeline and try again later."}}},"projectActivity":{"heading":{"projectActivity":"Project activity"},"text":{"provisioning":"Waiting for project to provision"},"graph":{"error":"The CloudWatch dashboard JSON config is invalid. Please check if the format of the config is valid."},"editModal":{"header":"Edit project activity","preset":{"header":"Preset configuration","copyJSON":{"button":"Copy JSON"}},"presetService":{"label":"AWS service"},"presetResource":{"label":"Resource identifier"},"presetMetric":{"label":"Amazon CloudWatch metric","description":"Select the CloudWatch metrics to be displayed in the project activity graph."},"custom":{"header":"Custom configuration","label":"JSON graph configuration","description":"Enter the CloudWatch dashboard JSON definition for the project activity graph.","validations":{"noWidget":"The configuration must contain a widget definition.","oneWidget":"The configuration can only contain one widget definition. Try removing some widgets."}}}},"projectDetails":{"heading":{"projectDetails":"Project details"},"label":{"projectName":"Project name","projectId":"Project ID"},"description":{"projectId":"This ID will be appended to names generated for resource ARNs and other AWS resources."}},"projectRepository":{"heading":{"projectRepository":"Project repository"},"label":{"sourceProvider":"Repository provider","repositoryName":"Repository name","repositoryDescription":"Repository description","selectProvider":"Select a repository provider","connectToGitHub":"Connect to GitHub","connectToCodeStarConnections":"Connection","codeCommit":"CodeCommit","gitHub":"GitHub","codestarConnections":"CodeStar Connections"},"description":{"connectToGitHub":"Connect to GitHub first to allow AWS CodeStar to create and manage your repository.","connectToCodeStarConnections":"Choose an existing connection or create a new one and then return to this task.","codeCommit":"Use a new AWS CodeCommit repository for your project.","gitHub":"Use a new GitHub source repository for your project (requires an existing GitHub account).","codestarConnections":"Use a new GitHub source repository via CodeStar Connections."},"button":{"connectToGitHub":"Connect to GitHub"},"codestarConnections":{"successText":"Successfully connected to GitHub."},"newActionAlert":{"header":"The GitHub repository provider now uses CodeStar Connections","description":"To use a GitHub repository in CodeStar, create a connection. The connection will use GitHub Apps to access your repository. Use the following options to choose an existing connection or create a new one."}},"projectEc2Configuration":{"heading":{"projectEc2Configuration":"EC2 Configuration"},"label":{"instanceType":"Instance type","vpc":"VPC","subnet":"Subnet","keypair":"Key pair","keyPairAccess":"I acknowledge that I have access to the private key file"},"select":{"empty":"No options found.","link":"Learn how to create a key pair"},"description":{"keypair":"Use a key pair to securely connect to your instance.","vpc":"Choose the Amazon Virtual Private Cloud (VPC) for your instance to run in a private network with direct access to the Internet.","subnet":"Choose the IP subnet for your private network."},"instanceType":{"stats":"({{memory}} RAM + {{compute}} vCPU)"}},"projectReadMe":{"viewRendered":"View rendered","viewSource":"View source","edit":{"button":"Edit in {{sourceProvider}}"},"view":{"button":"View in GitHub"}},"projectWiki":{"header":{"default":"Team wiki"},"section":{"description":"The project wiki is now read-only and cannot be updated. If you wish to update the information in the wiki, you can copy it into the README file that was created with your project. New projects will not contain a project wiki."}},"projectTemplateSetup":{"title":{"chooseProjectTemplate":"Choose a project template"},"heading":{"projectTemplateSetup":"Project template"},"label":{"framework":"Application framework","category":"Application type","service":"AWS service"}},"projectStatus":{"status":{"createComplete":{"header":"Project provisioned"},"createInProgress":{"header":"Project provisioning","message":"AWS CodeStar is setting up your project\'s resources. This may take a few minutes."},"createFailed":{"header":"Project creation failed","message":"A resource failed to create. Check the AWS CloudFormation stack for more details."},"deleteFailed":{"header":"Project deletion failed","message":"The project failed to delete. Check the AWS CloudFormation stack for more details."},"deleteInProgress":{"header":"Deleting project","message":"AWS CodeStar is deleting your project. This may take a few minutes."}},"viewCloudFormationStack":"View AWS CloudFormation stack"},"setupProjectStep":{"title":{"setupProjectStep":"Set up your project"}},"verifyServiceRole":{"alert":{"header":"Create service role","message":"AWS CodeStar uses an IAM service role to manage resources on your behalf. You must create a service role in order to create and delete projects."},"create":{"success":{"message":"You have successfully created {{serviceRoleName}}. Allow a few moments for the changes to take effect."}}},"optout-flash":{"header":"Introducing the new AWS CodeStar console experience!","body1":"We have updated the AWS CodeStar console experience to make it easier to use."},"instructions":{"cli":{"headertitle":"Connect Command Line tools","containertitle":"Connection steps"},"eclipse":{"headertitle":"Connect Eclipse","containertitle":"Connection steps","title1":"Step 1: Prerequisites","body1":"You will need IAM access keys (access key and secret access key).","cta1":"Learn how to generate IAM access keys","bodytwo1":"Git credentials- to use Git with your root account you will need to configure the AWS credential helper, which is included with the AWS CLI.","ctatwo1":"Learn how to configure AWS credential helper","title2":"Step 2: AWS Toolkit for Eclipse","cta2":"Download and install the AWS Toolkit for Eclipse","title3":"Step 3: Import your AWS CodeStar project","body3":"Open Eclipse, click the AWS toolbar button, and select Import AWS CodeStar Project. Follow the wizard to import your project.","title4":"Step 4: Start coding in Eclipse","body4":"In Package Explorer, expand the tree to find your project and its files. Start working on your project.","title5":"Step 5: Commit and push changes","body5":"Open Git Staging, move files to Staged Changes, type a commit message, and choose Commit and Push."},"vs":{"headertitle":"Connect Visual Studio","containertitle":"Connection steps","title1":"Step 1: Get the AWS Toolkit for Visual Studio","cta1":"Download and install the AWS Toolkit for Visual Studio","title2":"Step 2: Add your AWS profile","body2":"If you have not yet done so, generate new AWS credentials to connect Visual Studio to CodeStar.","cta2":"Generate credentials in IAM console","bodytwo2":"Open Visual Studio. On the Getting Started page, configure your AWS credentials. (You can also do this from Team Explorer).","title3":"Step 3: Connect Team Explorer to your AWS CodeStar project","body3":"1) In Team Explorer, in the list of Hosted Service Providers, choose AWS CodeCommit.","bodytwo3":"2) Choose your AWS profile from the list.","bodythree3":"3) In Connect, choose Clone, and then choose your project\'s repository from the list. Choose where to create your local repo, and then choose OK.","bodyfour3":"4) If you haven\'t already done so, create and download Git credentials for your IAM when prompted and store them in a safe place.","cta3":"Generate Git Credentials","title4":"Step 4: Start coding in Visual Studio","body4":"In Project Explorer, expand the tree to find your project and its files.","bodytwo4":"If the project you selected has a Visual Studio Solution file (*.sln) in its source, double click this file to open the Visual Studio and project natively within the IDE.","bodythree4":"Start working on your project.","title5":"Step 5: Commit and push changes","body5":"In Team Explorer, open Changes, and stage the files you want to commit. Change your view to Synchronization, and choose Push."},"github":{"headertitle":"Connect to GitHub","containertitle":"Connection steps","title1":"Connect to and clone your GitHub repository","body1":"To start working on your project source code connect and clone your GitHub repository using the  GitHub clone URL.","httpsfield":"HTTPS clone repository URL","sshfield":"SSH clone repository URL","title2":"Git Clients","body2":"Alternatively, you can use any of the GitHub Git clients to connect and clone your repository. If you don\'t have one, you can install one of the following:","cta1":"GitHub Desktop app","cta2":"GitHub Extension for Visual Studio","cta3":"EGit for Eclipse"}},"updateTags":{"success":{"message":"You have successfully updated the project tags."}}}')},common:{...JSON.parse('{"tablePageSizeSelector":{"title":"Page size","standard":"Standard"},"table":{"preferences":{"title":"Preferences","columns":{"content":"Select visible content","list":"Main properties"}},"actions":{"confirm":"Confirm","cancel":"Cancel"},"layout":{"label":"Layout","table":"Table"},"selection":{"group":"group label","length":"{{length}} item selected","item":{"selected":"{{id}} is selected","notSelected":"{{id}} is not selected"}}},"selected":"Selected","clearConfiguration":"Clear configuration","markdown":{"preview":"Preview markdown","viewImage":"View image","invalidImage":{"error":"The image cannot be displayed because the specified location is not valid. Provide the full path to the image file, including the URL and protocol. If this image is hosted in a CodeCommit repository, use the codecommit+img:// syntax. Examples:","example":{"external":"![](https://www.example.com/image.png)","codecommit":"![](codecommit+img://RepositoryName/--/path/FileName)"}}},"modalContainer":{"button":{"cancel":"Cancel","close":"Close"},"readmore":"Read more"},"deleteModal":{"description":"To confirm deletion, type {{delete}} in the field."},"cancelButton":{"modal":{"text":"Are you sure you want to discard your changes?","warningIcon":{"ariaLabel":"Warning"},"header":"Discard changes?"}},"createResourceAlert":{"abort":{"message":"You closed the popup window prior to creating the resource. Please try again."}},"formFieldLabel":{"optional":"optional"},"form":{"success":{"content":"Form submitted successfully"}},"notFound":{"alert":{"header":"The requested content was not found.","content":"The content may no longer exist in this location, or a resource may have been deleted, renamed, or configured with permissions your user could not access."},"route":{"alert":{"header":"Page not found","content":"The page you are looking for does not exist. Check the spelling of the URL or use the navigation pane to find a resource."}},"resource":{"help":{"header":"Resource not available","blurb":"The resource you are trying to view either does not exist in this AWS Region, or you are signed in without the permissions required to view it.","frequentIssues":{"one":"Make sure you are viewing resources in the AWS Region where that resource was created. Use the Region selector to change Regions.","two":{"noGoToResource":"Make sure you spelled the resource name correctly.","searchGoToResource":"Make sure you spelled the resource name correctly. Try searching for the resource by name."},"three":"Make sure your session has not expired. Try signing in again and then searching for the resource.","four":"Make sure that you are signed in with a user or role that has permissions to view resources for this service."}}}},"notInRegion":{"alert":{"header":"Region unsupported","content":"The selected service is not available in the current AWS Region. Please select another Region."},"main":{"header":"Region unsupported","content":{"part1":"{{serviceName}} is not available in this AWS Region. {{otherRegions}}","part2":"Please select another Region."}},"supportedRegions":{"header":"Supported Regions"}},"select":{"empty":"No options","noValue":"No value","all":"Select all","none":"Select none","item":"Item selection","deselectAriaLabel":"Remove {{label}}"},"serviceRole":{"select":{"noOptions":"Enter a service role ARN"}},"noValue":"No value","tagGroup":{"heading":"Tag group {{headingNumber}}","add":"Add tag group","remove":"Remove tag group"},"tags":{"label":"Tags","create":{"heading":"Create tags"},"update":{"heading":"Edit {{tagType}} tags"},"view":{"heading":"{{tagType}} tags"},"empty":{"content":"No tags have been created."},"validation":{"key":{"empty":"Tag key cannot be empty","awsPrefix":"Tag key cannot start with \\"AWS:\\"","tooLong":"Tag key cannot be longer than 128 characters"},"value":{"tooLong":"Tag value cannot be longer than 256 characters"}},"success":{"content":"Tags successfully updated"},"description":"A tag is a label that you assign to an AWS resource. Each tag consists of a key and an optional value. You can use tags to help manage and secure your resources or to help track costs."},"tag":{"key":"Key","value":"Value","add":"Add tag","remove":"Remove tag"},"tabs":{"ariaLabel":"Tabs"},"breadcrumbs":{"ariaLabel":"Breadcrumbs","expandAriaLabel":"Show path","settings":"Settings","tags":"Edit tags","codestarconnections":"Connections","codestarconnectionsCreateConnection":"Create connection","codestarconnectionsHosts":"Hosts","codestarconnectionsCreateHost":"Create host","codestarconnectionsEditConnection":"Edit connection","codestarconnectionsEditHost":"Edit host","codestarconnectionsEditTags":"Edit tags","notificationRules":"Notification rules","createNotificationRule":"Create notification rule","editNotificationRule":"Edit notification rule","viewNotificationRule":"View notification rule"},"truncate":{"ariaLabel":{"fullContent":"Toggle full content"}},"topicSelector":{"noTopic":"No topic"},"yes":"Yes","no":"No","true":"True","false":"False","copy":"Copy","copied":"Copied","clone":"Clone","save":"Save","edit":"Edit","delete":"Delete","add":"Add","remove":"Remove","confirm":"Confirm","cancel":"Cancel","close":"Close","discard":"Discard","preferences":"Preferences","repository":"Repository","pipeline":"Pipeline","buildProject":"Build project","application":"Application","team":"Team","create":"Create","created":"Created","name":"Name","size":"Size","type":"Type","actions":"Actions","permissions":"Permissions","description":"Description","emailAddress":"Email address","enabled":"Enabled","disabled":"Disabled","step":"Step {{index}}:","viewDetails":"View details","details":"Details","value":"Value","status":"Status","duration":"Duration","startTime":"Start time","endTime":"End time","none":"None","s3":"Amazon S3","bucket":"Bucket","success":{"header":"Success"},"error":{"header":"Error","expand":"Show additional errors","collapse":"Hide additional errors","generalError":"An unspecified error occurred. Check your network connectivity, and then check to see if there are any issues with the service at the <a href=\\"https://status.aws.amazon.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Service Health Dashboard</a>.","apiPermissionError":"Manage your permissions","sessionExpirationError":{"content":"Session expired, please <a href={{href}}>reload the page</a> and reauthenticate."},"fallbackErrorMessage":{"content":"An unspecified error occurred."},"localStorageFullOrDisabled":"This feature requires LocalStorage, a browser component that manages website storage. Verify that LocalStorage is enabled and contains adequate free space, and try again."},"learnMore":"Learn more","noResults":"No results","noResultsDescription":"There are no results to display.","done":"Done","feedback":"Feedback","retryRequest":"(Click here to retry)","show":"Show","hide":"Hide","refresh":"Refresh","loading":"Loading","loadMore":"Load more","dismiss":"Dismiss","previous":"Previous","active":"Active","pending":"Pending","unreachable":"Unreachable","inactive":"Inactive","share":"Share","betaBadge":"BETA","columns":"Columns","default":"Default","contentRefreshed":"Content refreshed","removeItem":"Remove item","itemRemoved":"Item removed","warning":"Warning","oauth":{"connect":{"connecting":{"text":"Connecting"},"connected":{"text":"Connected"},"success":{"text":"You have successfully authenticated your account."},"failure":{"text":"You have failed to authenticate your account."},"abort":{"text":"You closed the popup window prior to connecting. Please try again."}},"popup":{"text":{"processing":"Processing OAuth request","confirm":{"generic":"Choose Confirm to complete the connection"}},"button":{"confirm":{"text":"Confirm"},"cancel":{"text":"Cancel"}}}},"autosuggestAdapter":{"useEnteredValue":"Use entered value: {{value}}","clearAriaLabel":"Clear field"},"filtering":{"field":{"ariaLabel":"Filter results","clearAriaLabel":"Clear filters"},"noMatch":{"header":"Not found","content":"No results found for the following search:","contentNoText":"No results found.","scan":"Additional pages are available to search."},"scanDepthReached":"No more results found. Additional pages are available to search.","findMore":"Continue search","match":{"singular":"match","plural":"matches"}},"fileUpload":{"uploadFile":"Upload file","chooseAFile":"Choose a file to upload."},"keyboardShortcut":{"ariaLabel":"Keyboard shortcut: {{shortcut}}"},"additionalConfigurationFooter":{"label":"Additional configuration"},"cloudWatchDashboards":{"labels":{"cpu":"CPU Utilization","invocationsErrors":"Invocations/Errors","invocations":"Invocations","errors":"Errors","duration":"Duration","throttles":"Throttles","networkIn":"NetworkIn","networkOut":"NetworkOut","diskWriteOps":"DiskWriteOps","diskReadOps":"DiskReadOps","diskWriteBytes":"DiskWriteBytes","diskReadBytes":"DiskReadBytes"}},"highlighter":{"selectionSummary":{"none":"No lines are selected.","lines":"Selected lines: {{start}} to {{end}}"}},"infoLink":{"label":"Info"},"externalLinkIconLabel":"Opens in a new tab","externalLink":{"ariaLabel":"External link (Opens in a new tab)"},"navigation":{"gettingStarted":"Getting started","goToResource":{"title":"Go to resource","description":"Find top-level resources in Developer Tools in {{region}}"},"developerTools":{"serviceName":"Developer Tools"},"codestar":{"serviceName":"CodeStar","commonName":"Projects","projects":"Projects","project":"Project","team":"Team","settings":"Settings"},"codecommit":{"serviceName":"CodeCommit","commonName":"Source","repositories":"Repositories","browse":"Code","pullRequests":"Pull requests","commits":"Commits","branches":"Branches","tags":"Git tags","settings":"Settings","approvalRuleTemplates":"Approval rule templates"},"codebuild":{"serviceName":"CodeBuild","commonName":"Build","projects":"Build projects","project":"Build project","notificationRules":"Notifications","history":"Build history","reportGroups":"Report groups","reportGroup":"Report group","reportHistory":"Report history","tags":"Build project tags","metrics":"Account metrics","fleet":"Compute fleets","settings":"Settings","relatedIntegrations":"Related integrations","jenkins":"Jenkins","githubActions":"GitHub Actions"},"codedeploy":{"serviceName":"CodeDeploy","commonName":"Deploy","deployments":"Deployments","deployment":"Deployment","applications":"Applications","application":"Application","settings":"Settings","onPrem":"On-premises instances","onPremInstance":"Instance","deploymentConfigurations":"Deployment configurations"},"codepipeline":{"serviceName":"CodePipeline","commonName":"Pipeline","pipelines":"Pipelines","pipeline":"Pipeline","history":"History","settings":"Settings","tags":"Pipeline tags","notificationRules":"Notifications","general":"General"},"codeartifact":{"serviceName":"CodeArtifact","commonName":"Artifacts","repositories":"Repositories","domains":"Domains"},"settings":{"serviceName":"Settings","notificationRules":"Notification rules","codestarconnections":"Connections","connection":"Connection","host":"Host"}},"pagination":{"table":"Table pagination","previous":"Previous","next":"Next","paginationLabel":"Table pagination","pageLabel":"Page {{pageNumber}} of all pages","nextPageLabel":"Next page","previousPageLabel":"Previous page"},"time":{"now":"Just now","days":"Days","hours":"Hours","minutes":"Minutes","seconds":"Seconds","day":"Day","hour":"Hour","minute":"Minute","second":"Second","ago":{"second":"{{ val }} second ago","seconds":"{{ val }} seconds ago","minute":"{{ val }} minute ago","minutes":"{{ val }} minutes ago","hour":"{{ val }} hour ago","hours":"{{ val }} hours ago","day":"{{ val }} day ago","days":"{{ val }} days ago","month":"{{ val }} month ago","months":"{{ val }} months ago","year":"{{ val }} year ago","years":"{{ val }} years ago"},"fromNow":{"second":"{{ val }} second from now","seconds":"{{ val }} seconds from now","minute":"{{ val }} minute from now","minutes":"{{ val }} minutes from now","hour":"{{ val }} hour from now","hours":"{{ val }} hours from now","day":"{{ val }} day from now","days":"{{ val }} days from now","month":"{{ val }} month from now","months":"{{ val }} months from now","year":"{{ val }} year from now","years":"{{ val }} years from now"},"duration":{"millisecond":"{{ val }} millisecond","milliseconds":"{{ val }} milliseconds","lessThanOneSecond":"less than one second","second":"{{ val }} second","seconds":"{{ val }} seconds","minute":"{{ val }} minute","minutes":"{{ val }} minutes","hour":"{{ val }} hour","hours":"{{ val }} hours","day":"{{ val }} day","days":"{{ val }} days","month":"{{ val }} month","months":"{{ val }} months","year":"{{ val }} year","years":"{{ val }} years"},"date":{"am":"AM","pm":"PM","month":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"}},"screenReader":{"utcToRelative":"Change {{ monthName }} {{ date }}, {{ year }} {{ hours }}:{{ minutes }} {{ ampm }} (UTC) to relative time format","localToUTC":"Change {{ monthName }} {{ date }}, {{ year }} {{ hours }}:{{ minutes }} {{ ampm }} (UTC{{offset}}) to UTC time format","relativeToLocal":"Change {{ relative }} to UTC{{offset}} time format"}},"validation":{"array":{"arrayMaxLength":"{{maxLength}} maximum","arrayMinLength":"{{minLength}} minimum"},"entity":{"email":"The email address format is not valid","tlsCertificate":"The certificate is not valid","url":"The URL format is not valid. The URL must begin with \'http://\' or \'https://\'.","ipAddress":"The value is not valid IPv4 or IPv6 address","protocols":"The URL format is not valid. The URL must begin with one of the following {{protocols}}.","protocol":"The URL format is not valid. The URL must begin with {{protocols}}.","arn":{"format":"The ARN format is not valid","service":"The ARN service type is not valid. The service must be \'{{service}}\'.","resourceType":"The ARN resource type is not valid. The resource type must be \'{{resourceType}}\'."}},"generic":{"required":"Required"},"specific":{"required":"{{fieldName}} is required"},"number":{"integer":"The value must be a whole number","maxValue":"The value must be less than or equal to {{maxValue}}","minValue":"The value must be greater than or equal to {{minValue}}","minutes":"Time must be between {{minMinutes}} and {{maxMinutes}} minutes"},"string":{"maxLength":"{{maxLength}} characters maximum","minLength":"{{minLength}} characters minimum","pattern":"The format is not valid. The value must match following format: {{pattern}}","startsWith":"The value must start with \'{{str}}\'","endsWith":"The value must end with \'{{str}}\'","contains":"The value must contain \'{{str}}\'","validRegex":"The value must be valid regular expression"},"object":{"duplicateItem":{"exists":"Duplicate value"}}},"convertTime":{"error":"Timeout must be a number"},"displayUser":{"deleted":"Deleted IAM user","badge":{"bot":"Bot"}},"optionOrOption":{"or":"or"},"regions":{"us_east_1":"US East - (N. Virginia)","us_east_2":"US East - (Ohio)","us_west_1":"US West - (N. California)","us_west_2":"US West - (Oregon)","ap_east_1":"Asia Pacific (Hong Kong)","ap_south_1":"Asia Pacific (Mumbai)","ap_northeast_3":"Asia Pacific (Osaka-Local)","ap_northeast_2":"Asia Pacific (Seoul)","ap_northeast_1":"Asia Pacific (Tokyo)","ap_southeast_1":"Asia Pacific (Singapore)","ap_southeast_2":"Asia Pacific (Sydney)","ca_central_1":"Canada (Central)","eu_central_1":"EU (Frankfurt)","eu_north_1":"EU (Stockholm)","eu_west_1":"EU (Ireland)","eu_west_2":"EU (London)","eu_west_3":"EU (Paris)","sa_east_1":"South America (São Paulo)","us-gov-west-1":"AWS GovCloud (US-Gov-West)","us-gov-east-1":"AWS GovCloud (US-Gov-East)"},"itemsCount":{"count":"{{count}} item found","count_plural":"{{count}} items found","noItems":"No items found"},"icon":{"alt":"icon {{iconName}}","external":"external"},"codestarconnections":{"errors":{"NoHostArnForEditHost":"No host arn provided for editing this host","InvalidProviderType":"Invalid provider"},"list":{"labels":{"connections":"Connections","hosts":"Hosts"}},"listConnections":{"table":{"header":"Connections","column":{"name":"Connection name","provider":"Provider","status":"Status","owningAccount":"Owning Account","arn":"ARN"}}},"listHosts":{"table":{"header":"Hosts","empty":"No hosts configured","column":{"name":"Name","providerType":"Provider type","providerEndpoint":"Provider endpoint","status":"Status","statusMessage":"Status message"}}},"connection":{"status":{"available":"Available","error":"Error","pending":"Pending","unknown":"Unknown"}},"deleteConnection":{"success":"Connection deleted successfully","prompt":"Are you sure you want to delete the connection with the ARN: {{connectionArn}}"},"updateConnection":{"flash":{"success":"Connection {{connectionName}} updated successfully"},"button":{"text":"Update pending connection"}},"createConnection":{"flash":{"success":"Connection {{connectionName}} created successfully","success_popup":"Connection {{connectionName}} created successfully. You can now close the pop-up window"},"button":{"text":"Create connection"},"submitText":"Connect","header":"Connect to Bitbucket","connectionName":{"label":"Connection name"},"installAppText":"Install a new app","installingAppText":"Installing","installedAppText":"Installed","tokenError":{"message":"Could not retrieve token. Close the window and try again."},"bitbucket":{"section":{"header":"Bitbucket connection settings"},"installationId":{"label":"Bitbucket apps","description":"Bitbucket apps create a link for your connection with Bitbucket. To start, install a new app and save this connection."}},"github":{"section":{"header":"GitHub connection settings"},"installationId":{"label":"GitHub Apps","description":"GitHub Apps create a link for your connection with GitHub. To start, install a new App and save this connection."}},"githubenterprise":{"section":{"header":"GitHub Enterprise Server connection settings"},"installationId":{"label":"GitHub Enterprise Server Apps","description":"GitHub Enterprise Server Apps create a link for your connection with your GitHub Enterprise Server. To start, install a new app and save this connection."}},"installationId":{"description":"Apps create a link for your connection with your provider. To start, install a new app and save this connection.","header":"Finish creating your connection"}},"redirectPage":{"branch":{"text":"Redirecting to your repository or project..."}},"connectionNotPendingCannotBeUpdated":{"message":"This connection is not in a PENDING state, and cannot be updated from the console."},"providerLabels":{"generic":"Server","bitbucket":"Bitbucket","github":"GitHub","githubEnterprise":"GitHub Enterprise Server","gitlab":"GitLab"},"connectionStatusAlert":{"Pending":{"header":"Finish creating your connection","content":"Your connection status is Pending. Choose Update pending connection.","callToAction":"Update pending connection","modal":{"header":"Complete your connection with {{providerType}}","content":"Use the provided window to access your account and authorize setup of your connection resources."}},"VPCConfigError":{"header":"{{providerType}} information isn\'t valid","content":"Unable to create a host because the provided {{serverName}} endpoint or VPC information cannot be accessed.","callToAction":"Create host"},"VPCInitializing":{"header":"Configuring your {{providerType}} information","content":"Creating a host with your server information. Allow a few minutes while your host is configured."},"VPCDeleting":{"header":"Deleting VPC configuration","content":"The host that was created with your server information has a VPC configuration associated with it. Allow several minutes while the VPC configuration is deleted.","contentSubLine":"Your host will update with a Pending status."},"ConnectionAvailableHostAvailable":{"header":"Ready to connect","content":"The connection to your server is successfully set up and ready to use."},"HostError":{"header":"Host isn\'t in Available status","content":"The host that was created with your server information is no longer in Available status. To make its status Available, choose to edit the host.","callToAction":"Edit host"},"ConnectionError":{"header":"Connection isn\'t in Available status","content":"The connection is no longer in Available status."},"ConnectionErrorForHosts":{"header":"Connection isn\'t in Available status","content":"The connection that was created with your server information is no longer in Available status. To make its status Available, choose to edit the connection.","callToAction":"Edit connection"},"NoConnectionInformation":{"header":"Connection ARN isn\'t valid","content":"Choose the ARN for the connection you created with your provider information."},"LoadingInitialConnectionInformation":{"header":"Getting connection status","content":"Allow a few minutes to get your connection information."},"ConnectionPending":{"header":"Finish creating your connection"},"ConnectionAvailable":{"header":"Ready to connect","content":"Your {{providerType}} connection is ready for use."}},"tagging":{"resourceLabelConnection":"Connection","resourceLabelHost":"Host"}},"createConnection":{"tiles":{"bitbucket":{"label":"Bitbucket","description":"Choose Bitbucket"},"github":{"label":"GitHub","description":"Choose GitHub"},"githubenterprise":{"label":"GitHub Enterprise Server","description":"Choose GitHub Enterprise Server"},"gitlab":{"label":"GitLab","description":"Choose GitLab"}},"header":"Create a connection","pageProviderHeader":"Connect to {{providerType}}","container":{"choose":{"header":"Select a provider"},"bitbucket":{"header":"Create Bitbucket connection"},"github":{"header":"Create GitHub App connection"},"githubenterprise":{"header":"Connection Settings"},"gitlab":{"header":"Create GitLab connection"}},"popup":{"handshaking":"Handshaking...","github":{"header":"Connect to GitHub","form":{"header":"GitHub connection settings"},"installation":{"label":"GitHub Apps","description":"GitHub Apps create a link for your connection with GitHub. To start, install a new app and save this connection."}},"providerName":{"header":"Connect to {{providerName}}"},"githubenterprise":{"header":"Connect to GitHub Enterprise Server","form":{"header":"GitHub Enterprise Server connection settings"},"installation":{"label":"GitHub Enterprise Server Apps","description":"GitHub Enterprise Server Apps create a link for your connection with your GitHub Enterprise Server. To start, install a new app and save this connection."},"host":{"label":"Choose a host","description":"Hosts are used to correlate 3rd Party apps to enterprise instances. Before you create a connection, you need to set up a host.","selected":{"label":"Host for your GitHub Enterprise Server connection"},"noneAvailable":{"header":"You have no available hosts","create":"Create host","content":"Create and finalize set up of a host and then return to this task."},"createHostCallToAction":"Create host"},"alert":{"content":"Hosts are used to correlate 3rd Party apps to enterprise instances. Before you create a connection, you need to set up an available host."},"hostWithEndPointAlreadyExists":"This URL is assigned to resources that have already been created. To use this URL, choose the name of the host that was created with your server information."},"gitlab":{"header":"Connect to GitLab","form":{"header":"Gitlab connection settings"}}},"bitbucket":{"connectbutton":"Connect to Bitbucket"},"github":{"connectbutton":"Connect to GitHub"},"githubenterprise":{"connectbutton":"Connect to GitHub Enterprise Server","fields":{"connectionName":{"label":"Connection name","description":"Give your connection a name."}}},"gitlab":{"connectbutton":"Connect to GitLab"}},"editConnection":{"header":"Edit {{connectionName}}","saveButton":"Save","container":{"header":"Edit connection details"},"editNotAllowed":"This connection is in a state that does not allow it to be edited.  If different settings are required, create a new connection.","someEditsNotAllowed":"Certain settings cannot be updated after connection creation. If different settings are required, create a new connection."},"viewConnection":{"header":"Connection settings","dictionaryItem":{"connectionName":"Name","connectionArn":"Arn","providerType":"Provider","connectionStatus":"Status"}},"createHost":{"pageTitle":"Create host","formSection":"Host settings","submitButton":"Create host","flash":{"success":{"info":{"content":"After your host reaches Pending status, choose set up host.","WithVpContent":"Initializing your connection. VPC connections might take up to 5 minutes to initialize and reach a Pending status. After your host reaches Pending status, choose Set up host.","button":"Complete host set up"},"content":"Successfully created {{name}}"}},"fields":{"name":{"label":"Host name","description":"Type the name of the host you want to use for connections with your installed provider."},"endpoint":{"label":"URL","description":"The endpoint of the server to connect to."},"product":{"label":"Select a provider","description":"Choose the installed provider type you want to connect to your AWS resources."},"VpcSelection":{"label":"VPC configuration","description":"Choose to set up a network-connected host or a host with an Amazon VPC configuration.","use":{"label":"Use a VPC","description":"If the endpoint is accessible via a VPC you may configure this here.","withHost":{"label":"Use a VPC","description":"If your {{providerType}} is only accessible in a VPC, configure details here. Otherwise, skip this step.","descriptionByLine":"Complete these steps in the same AWS Region as your VPC."}},"noVpc":{"description":"If your {{providerType}} is only accessible in a VPC, configure details here. Otherwise, skip this step.","descriptionByLine":"Complete these steps in the same AWS Region as your VPC.","label":"No VPC"}},"VpcId":{"label":"VPC ID","description":"Choose the VPC for your configuration. Your VPC must be in the same AWS Region as your host.","descriptionWithProviderType":"Choose the VPC in which your {{providerType}} is configured."},"subnets":{"label":"Subnet IDs","description":"Choose the subnets for your VPC configuration.","descriptionWithProviderType":"Choose the subnet or subnets for the VPC in which your {{providerType}} is configured.","columnDefinition":{"label":"Subnet ID"}},"securityGroups":{"label":"Security group IDs","description":"Choose the security groups for your VPC configuration.","descriptionWithProviderType":"Choose the security group or groups for the VPC in which your {{providerType}} is configured.","columnDefinition":{"label":"Security group ID"}},"tlsCertificate":{"label":"TLS certificate","description":"If you have a private certificate authority behind a VPC or you are using a self-signed certificate paste the TLS certificate here."},"dnsSeverIp":{"label":"DNS server IP"}},"providerOptions":{"githubenterprise":"GitHub Enterprise Server"}},"editHost":{"flash":{"success":{"content":"Successfully updated"}},"pageTitle":"Edit {{hostName}}","submitButton":"Save","editNotAllowed":"This host is in a state that does not allow it to be edited.  If different settings are required, create a new host.","someEditsNotAllowed":"Certain settings cannot be updated after host creation. If different settings are required, create a new host."},"viewHost":{"header":"Host","item":{"name":"Host name","product":"Product","arn":"Arn","endpoint":"Endpoint","status":"Setup status","vpcId":"VPC Id","securityGroups":"Security groups","subnets":"Subnets","tlsCertificate":"TLS certificate","dnsServerIp":"DNS server ip"},"status":{"setup":{"progress":{"pending":"Pending","available":"Available","error":"Error","vpcInitializing":"Vpc configuration initializing","vpcInitializingFailed":"Vpc configuration initialization failed","vpcConfigAvailable":"Vpc configuration available","vpcConfigDeleting":"Deleting vpc configuration"}}}},"hostOauth":{"callToAction":{"setup":{"before":"Set up host","during":"Setting up host","after":"Host setup complete"},"flash":{"success":{"info":{"content":"Host successfully set up"}}}}},"deleteHost":{"success":"Successfully deleted host {{HostArn}}"},"registerHost":{"header":"Register host with GitHub","button":"Register"},"listHost":{"callToAction":{"create":"Create host","edit":"Edit host"}},"redirectWarning":{"startingHandshakeLoadingText":"Connecting to your GitHub Enterprise Server endpoint","pageHeader":"Set up {{name}}","sectionHeader":"Redirect to GitHub Enterprise Server","bodyLine1":"You are about to be redirected to a third-party site that is not controlled by AWS:","bodyLine2":"Choose Continue to finish setting up your GitHub Enterprise instance.","continue":"Continue","cancel":"Cancel"},"notifications":{"title":"Notification rules","form":{"create":{"heading":"Create notification rule","info":"Info about creating notification rules","success":{"heading":"Notification rule created","content":{"generic":"It can take up to 15 minutes for the system to start sending notifications","email":"The target {{emailTarget}} is attached to the notification rule. That email address will need to be confirmed for notifications to be sent.","emails":"The targets {{emailTargets}} are attached to the notification rule. Those email addresses will need to be confirmed for notifications to be sent."}}},"description":"Notification rules set up a subscription to events that happen with your resources. When these events occur, you will receive notifications sent to the targets you designate. You can manage your notification preferences in Settings.","updateEventTypes":{"success":{"heading":"Events updated"}},"update":{"eventTypes":{"heading":"Notification events","unsupportedEventTyeError":"Unsupported resource"}},"edit":{"heading":"Edit notification rule","success":{"heading":"Notification rule updated"}},"section":{"settings":{"heading":"Notification rule settings"},"eventTypes":{"heading":"Events that trigger notifications"},"targets":{"heading":"Targets"}},"name":{"label":"Notification name"},"detailType":{"label":"Detail type","description":"Choose the level of detail you want in notifications. <0></0>","learnMore":"Learn more about notifications and security","full":{"label":"Full","description":"Includes any supplemental information about events provided by the resource or the notifications feature."},"basic":{"label":"Basic","description":"Includes only information provided in resource events."}},"targets":{"add":"Add row","remove":"Remove row","key":"Choose target type","value":"Choose target","sns":"Amazon SNS topic ARN","resourceAvailable":"Configured targets","description":"Choose an SNS topic to use as the target for the notification rule. Users can subscribe to the notification topic to receive emails about events.","slackIntegration":{"description":"You can also configure integration between the SNS topic and AWS Chatbot, so that users receive notifications in Slack channels or Amazon Chime chatrooms. {{link}}"},"chatbotIntegration":{"description":"Create a target to use specifically for this notification rule. SNS topics created as targets have no subscribers but have all policies applied to act as a target for notifications. If you choose AWS Chatbot, you will be redirected to create a client in the AWS Chatbot console. <0></0>"}},"targetType":{"sns":{"label":"SNS topic"},"email":{"label":"Email"},"slack":{"label":"AWS Chatbot (Slack)"},"teams":{"label":"AWS Chatbot (Microsoft Teams)"}},"createTarget":{"button":"Create target","modal":{"header":"Create target","label":{"targetType":"Target type","topicName":"Topic name"},"targetType":{"description":"Create a target to use specifically for this notification rule. SNS topics created as targets have no subscribers but have all policies applied to act as a target for notifications. If you choose AWS Chatbot, you will be redirected to create a client in the AWS Chatbot console."},"target":{"noMatch":"No matching target found"},"description":"Maximum 256 characters. Can include alphanumeric characters, hyphens (-) and underscores (_).","chatbotConfig":{"slack":"To configure Slack integration with AWS Chatbot, you must create a client in the AWS Chatbot console. <0></0>","teams":"To configure Microsoft Teams integration with AWS Chatbot, you must create a client in the AWS Chatbot console. <0></0>"},"create":"Create","link":{"label":{"chatbot":"Configure in AWS Chatbot"}},"success":"SNS topic created successfully."}}},"callToAction":{"label":"Notify","createNotificationRule":"Create notification rule","manageNotificationRules":"Manage notification rules"},"statusToggle":{"label":{"on":"Sending notifications","off":"Notifications paused"}},"table":{"notificationRules":{"heading":"Notification rules","resource":{"description":"Notifications rules for {{resource}}"},"all":{"description":"View, edit, and delete notification rules configured for resources in your AWS account.","create":"Learn more about creating rules."},"th":{"resource":"Resource","resourceType":"Resource type","notificationRule":"Notification rule","status":"Sending notifications","events":"Notifying events","created":"Created"},"td":{"numberOfEvents":"{{number}} event","numberOfEventsPlural":"{{number}} events"}},"targets":{"heading":"Notification rule targets","all":{"description":"One or more notification rules sends messages to the targets listed below."},"th":{"protocol":"Protocol","address":"Address or endpoint","status":"Notification target status"},"button":{"resendEmail":"Resend Email","success":{"content":"Verification email resent"}},"modal":{"delete":{"all":{"description":"Deleting this target removes it from all notification rules","success":{"content":"{{targetAddress}} was successfully removed from all notification rules"}},"resource":{"description":"Deleting this target removes it from this specific notification rule. It is still available to receive notifications from other rules. To remove it from all rules, delete it from notification rules targets.","link":"Developer tools settings","success":{"content":"{{targetAddress}} was successfully removed from this notification rule"}},"success":{"header":"Target deleted"}}}}},"view":{"title":"{{notificationRule}} notification rule","buttons":{"viewAllNotificationRules":"View all notification rules"},"settings":{"title":"Notification rule settings","name":{"label":"Notification name"},"status":{"label":"Notification status"},"arn":{"label":"Notification ARN"},"resourceArn":{"label":"Resource ARN"}},"events":{"title":"Events that trigger notifications"},"modal":{"delete":{"success":{"header":"Notification rule deleted"}}}},"toggle":{"alert":{"backToLegacy":{"header":"You have notifications configured in CodeCommit instead of notification rules","content":"Consider using notification rules and disabling existing notifications.","callToAction":"Manage existing notifications"},"backToNew":{"header":"You are viewing notifications configured in CodeCommit instead of notification rules","content":"Notification rules provide additional event types. Consider disabling notifications and creating notification rules. {{link}}","callToAction":"Go to notification rules"}}},"flash":{"button":{"success":{"content":"Create a notification rule for this {{resourceType}}"}}}},"servicePage":{"pricingSectionHeader":"Pricing (US)","devtools":{"serviceCategory":"Developer Tools","serviceName":"AWS Developer Tools","oneSentenceSummary":"Host code and automatically build, test, and deploy your applications to AWS","shortServiceDescription":"The AWS Developer Tools is a set of services designed to enable developers and IT operations professionals practicing DevOps to rapidly and safely deliver software. Together, these services help you securely store and version control your application\'s source code and automatically build, test, and deploy your application to AWS or your on-premises environment.","quickLaunchHeader":"Create AWS CodeStar project","quickLaunchBody":"The best way to get started with AWS Developer Tools is by creating a AWS CodeStar Project. AWS CodeStar provides all the tools you need to quickly develop, build, and deploy applications on AWS.","quickLaunchButtonLabel":"Create project","howSectionHeader":"How it works","benefitsSectionHeader":"Benefits and features","benefitOneTitle":"Get started fast","benefitOneDescription":"Each service is fully managed in the cloud, meaning there is no need to host, maintain, or scale servers on your own. The AWS Developer Tools are each offered as a service so you can immediately begin developing and deploying applications on AWS.","benefitTwoTitle":"Extensible and standalone","benefitTwoDescription":"Every AWS Developer Tools has integrations with other AWS services or pre-built integrations with popular third-party developer tools, allowing you to form your own end-to-end software release solution. Additionally, every service can be programmatically accessed using our APIs.","benefitThreeTitle":"High availability","benefitThreeDescription":"The AWS Developer Tools are built on a highly scalable, redundant, and durable architecture, ensuring that your software development projects are accessible when you need them.","benefitFourTitle":"Pay as you go","benefitFourDescription":"With AWS CodeCommit, AWS CodePipeline, and AWS CodeBuild, you only pay for what you use. AWS CodeDeploy is offered at no additional charge for Amazon EC2 deployments. There are no setup fees or upfront commitments. Visit the pricing page of each service to learn more.","benefitFiveTitle":"Practice DevOps on AWS","benefitFiveDescription":"The AWS Developer Tools help you practice continuous integration and continuous delivery on AWS. These services help make your software release process fast, automated, and reliable.","benefitSixTitle":"Secure software delivery","benefitSixDescription":"The AWS Developer Tools are integrated with AWS Identity and Access Management (IAM), allowing you to assign user-specific permissions to help keep your software delivery tools secure.","relatedServicesSectionHeader":"Our services","relatedServiceOneTitle":"AWS CodeBuild","relatedServiceOneDescription":"AWS CodeBuild is a fully managed build service that compiles source code, runs tests, and produces software packages that are ready to deploy.","relatedServiceTwoTitle":"AWS CodePipeline","relatedServiceTwoDescription":"AWS CodePipeline is a continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. You can use CodePipeline to fully model and automate your software release processes.","relatedServiceThreeTitle":"AWS CodeCommit","relatedServiceThreeDescription":"AWS CodeCommit is a fully-managed source control service that makes it easy for companies to host secure and highly scalable private Git repositories.","relatedServiceFourTitle":"AWS CodeDeploy","relatedServiceFourDescription":"AWS CodeDeploy is a service that automates code deployments to any instance, including Amazon EC2 instances and servers running on-premises.","pricingSectionHeader":"Pricing (US)","pricingBody":"With AWS CodeCommit, AWS CodePipeline, and AWS CodeBuild, you only pay for what you use. AWS CodeDeploy is offered at no additional charge for Amazon EC2 deployments. There are no setup fees or upfront commitments. Visit the pricing page of each service to learn more.","gettingStartedSectionHeader":"Getting started","gettingStartedResourceOne":"Getting started with AWS Developer Tools","gettingStartedResourceTwo":"Practicing CI/CD on AWS","moreResourcesSectionHeader":"More resources","moreResourcesResourceOne":"Documentation","moreResourcesResourceTwo":"Developer Tools on AWS","moreResourcesResourceThree":"Contact us"},"codestar":{"deprecationMessage":"On July 31, 2024, AWS will discontinue support for AWS CodeStar projects, including creating and viewing projects. {{link}}","deprecationMessageLearnMore":"Learn more","serviceCategory":"Developer Tools","serviceName":"AWS CodeStar","oneSentenceSummary":"Quickly develop, build, and deploy applications on AWS","shortServiceDescription":"AWS CodeStar enables you to quickly develop, build, and deploy applications on AWS. AWS CodeStar provides a unified user interface, enabling you to easily manage your software development activities in one place. With AWS CodeStar, you can set up your entire continuous delivery toolchain in minutes, allowing you to start releasing code faster.","quickLaunchHeader":"Create AWS CodeStar project","quickLaunchBody":"Get started with AWS CodeStar by creating your first project from one of the provided project templates.","quickLaunchButtonLabel":"Create project","howSectionHeader":"How it works","benefitsSectionHeader":"Benefits and features","benefitOneTitle":"Start developing on AWS in minutes","benefitOneDescription":"AWS CodeStar makes it easy for you to set up your entire development and continuous delivery toolchain for coding, building, testing, and deploying your application code. To start a project, you can choose from a variety of AWS CodeStar templates for Amazon EC2, AWS Lambda, and AWS Elastic Beanstalk.","benefitTwoTitle":"Manage software delivery in one place","benefitTwoDescription":"AWS CodeStar provides an easy way to coordinate your day-to-day development activities through a unified user interface, reducing the need to switch between various service consoles. AWS CodeStar’s project dashboard lets you monitor application activity, and track progress across all stages of your software development process.","benefitThreeTitle":"Work across your team securely","benefitThreeDescription":"AWS CodeStar enables you to collaborate on projects across your team in a secure manner. You can easily manage access for project owners, contributors, and viewers without needing to manually configure your own policy for each service.","benefitFourTitle":"Choose from a variety of project templates","benefitFourDescription":"With AWS CodeStar project templates, you can easily develop a variety of applications such as websites, web applications, web services, and Alexa skills. AWS CodeStar project templates include the code for getting started on supported programming languages including Java, JavaScript, PHP, Ruby, C#, and Python.","relatedServicesSectionHeader":"Related services","relatedServiceOneTitle":"AWS CodeCommit","relatedServiceOneDescription":"AWS CodeCommit is a fully-managed source control service that makes it easy for companies to host secure and highly scalable private Git repositories. CodeCommit eliminates the need to operate your own source control system or worry about scaling its infrastructure.","relatedServiceTwoTitle":"AWS CodePipeline","relatedServiceTwoDescription":"AWS CodePipeline is a continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. You can use CodePipeline to fully model and automate your software release processes.","relatedServiceThreeTitle":"AWS Cloud9","relatedServiceThreeDescription":"AWS Cloud9 is a cloud-based integrated development environment (IDE) that lets you to write, run, and debug code from any machine with just a browser. The Cloud9 IDE provides the software and tooling needed for dynamic programming languages (JavaScript, Python, PHP, Ruby, Go, and C++).","pricingSectionHeader":"Pricing (US)","pricingBody":"There is no additional charge for AWS CodeStar. You only pay for AWS resources (e.g. Amazon EC2 instances, AWS Lambda executions, Amazon Elastic Block Store volumes, or Amazon S3 buckets) that you provision in your CodeStar projects. You only pay for what you use, as you use it. There are no minimum fees and no upfront commitments.","pricingCallToAction":"Learn more","gettingStartedSectionHeader":"Getting started","gettingStartedResourceOne":"What is AWS CodeStar?","gettingStartedResourceTwo":"Getting started with AWS CodeStar?","gettingStartedResourceThree":"Working with AWS CodeStar?","moreResourcesSectionHeader":"More resources","moreResourcesResourceOne":"Documentation","moreResourcesResourceTwo":"FAQ","moreResourcesResourceThree":"Forum","moreResourcesResourceFour":"Contact us"},"codecommit":{"serviceCategory":"Developer Tools","serviceName":"AWS CodeCommit","oneSentenceSummary":"Create secure repositories for sharing your code in the cloud","shortServiceDescription":"AWS CodeCommit is a fully-managed source control service that makes it easy for companies to host secure and highly scalable private Git repositories. CodeCommit eliminates the need to operate your own source control system or worry about scaling its infrastructure.","quickLaunchHeader":"Create AWS CodeCommit repo","quickLaunchBody":"Get started with AWS CodeCommit by creating a secure repository to store and share your code.","quickLaunchButtonLabel":"Create repository","howSectionHeader":"How it works","benefitsSectionHeader":"Benefits and features","benefitOneTitle":"Fully managed","benefitOneDescription":"AWS CodeCommit eliminates the need to host, maintain, back up, and scale your own source control servers. The service automatically scales to meet the growing needs of your project.","benefitTwoTitle":"Secure","benefitTwoDescription":"AWS CodeCommit automatically encrypts your files in transit and at rest. CodeCommit is integrated with AWS Identity and Access Management (IAM) allowing you to assign user-specific permissions to your repositories.","benefitThreeTitle":"High availability","benefitThreeDescription":"AWS CodeCommit has a highly scalable, redundant, and durable architecture. The service is designed to keep your repositories highly available and accessible.","benefitFourTitle":"Store Anything","benefitFourDescription":"AWS CodeCommit allows you to store any type of file, and there are no repository size limits. This allows you to store and version application assets, like images and libraries, along with your code.","relatedServicesSectionHeader":"Related services","relatedServiceOneTitle":"AWS CodeStar","relatedServiceOneDescription":"AWS CodeStar enables you to quickly develop, build, and deploy applications on AWS. AWS CodeStar provides a unified user interface, enabling you to easily manage your software development activities in one place.","relatedServiceTwoTitle":"AWS CodePipeline","relatedServiceTwoDescription":"AWS CodePipeline is a continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. You can use CodePipeline to fully model and automate your software release processes.","relatedServiceThreeTitle":"AWS Cloud9","relatedServiceThreeDescription":"AWS Cloud9 is a cloud-based integrated development environment (IDE) that lets you to write, run, and debug code from any machine with just a browser. The Cloud9 IDE provides the software and tooling needed for dynamic programming languages (JavaScript, Python, PHP, Ruby, Go, and C++).","pricingSectionHeader":"Pricing","pricingItemOneKey":"First 5 active users*","pricingItemOneValue":"Free","pricingItemTwoKey":"Each active user above the first 5*","pricingItemTwoValue":"$1/month","pricingCallToAction":"Learn more","gettingStartedSectionHeader":"Getting started","gettingStartedResourceOne":"What is AWS CodeCommit?","gettingStartedResourceTwo":"Getting started with AWS CodeCommit?","gettingStartedResourceThree":"Working with AWS CodeCommit?","moreResourcesSectionHeader":"More resources","moreResourcesResourceOne":"Documentation","moreResourcesResourceTwo":"FAQ","moreResourcesResourceThree":"Forum","moreResourcesResourceFour":"Contact us","pricing":{"learnMore":"Learn more about AWS CodeCommit pricing (Opens in a new tab)"}},"codepipeline":{"serviceCategory":"Developer Tools","serviceName":"AWS CodePipeline","oneSentenceSummary":"Visualize and automate the different stages of your software release process","shortServiceDescription":"AWS CodePipeline is a continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. CodePipeline builds, tests, and deploys your code every time there is a code change, based on the release process models you define..","quickLaunchHeader":"Create AWS CodePipeline pipeline","quickLaunchBody":"Get started with AWS CodePipeline by creating your first continuous delivery and continuous integration pipeline.","quickLaunchButtonLabel":"Create pipeline","howSectionHeader":"How it works","benefitsSectionHeader":"Benefits and features","benefitOneTitle":"Rapid delivery","benefitOneDescription":"AWS CodePipeline automates your software release process, allowing you to rapidly release new features to users. With CodePipeline, you can quickly iterate on feedback and get new features to customers faster.","benefitTwoTitle":"Improved quality","benefitTwoDescription":"Automating your build, test, and release process allows you to easily test each code change and catch bugs while they are small and simple to fix. You can assure the quality of your application or infrastructure code by running each change through your standardized release process.","benefitThreeTitle":"Configurable workflow","benefitThreeDescription":"AWS CodePipeline allows you to model the different stages of your software release process through a graphical user interface . You can specify the tests to run and the steps to deploy your application and its dependencies.","benefitFourTitle":"Fast setup","benefitFourDescription":"With AWS CodePipeline, you can immediately begin to model your software release process. There are no servers to provision or set up. CodePipeline is a fully managed continuous delivery service that connects to your existing tools and systems.","relatedServicesSectionHeader":"Related services","relatedServiceOneTitle":"AWS CodeStar","relatedServiceOneDescription":"AWS CodeStar enables you to quickly develop, build, and deploy applications on AWS. AWS CodeStar provides a unified user interface, enabling you to easily manage your software development activities in one place.","relatedServiceTwoTitle":"AWS CodeBuild","relatedServiceTwoDescription":"AWS CodeBuild is a fully managed build service that compiles source code, runs tests, and produces software packages that are ready to deploy.","relatedServiceThreeTitle":"AWS CodeCommit","relatedServiceThreeDescription":"AWS CodeCommit is a fully-managed source control service that makes it easy for companies to host secure and highly scalable private Git repositories. CodeCommit eliminates the need to operate your own source control system or worry about scaling its infrastructure.","pricingSectionHeader":"Pricing (US)","pricingItemOneKey":"Each active pipeline**","pricingItemOneValue":"$1/month*","pricingDisclaimer":"*All pipelines are free for the first 30 days.","pricingCallToAction":"**Learn more","pricingAriaLabel":"Learn more about AWS CodePipeline pricing (Opens in a new tab)","gettingStartedSectionHeader":"Getting started","gettingStartedResourceOne":"What is AWS CodePipeline?","gettingStartedResourceTwo":"Getting started with AWS CodePipeline?","gettingStartedResourceThree":"Working with AWS CodePipeline?","moreResourcesSectionHeader":"More resources","moreResourcesResourceOne":"Documentation","moreResourcesResourceTwo":"FAQ","moreResourcesResourceThree":"Forum","moreResourcesResourceFour":"Contact us","pricing":{"learnMore":"Learn more about AWS CodePipeline pricing (Opens in a new tab)"}},"codedeploy":{"serviceCategory":"Developer Tools","serviceName":"AWS CodeDeploy","oneSentenceSummary":"Automate code deployments to maintain application uptime","shortServiceDescription":"AWS CodeDeploy is a fully managed deployment service that automates software deployments to compute services such as Amazon EC2, AWS Lambda, and your on-premises servers. AWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications.","shortServiceDescriptionUnspecific":"AWS CodeDeploy is a fully managed deployment service that automates software deployments to compute services. AWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications.","quickLaunchHeader":"Create AWS CodeDeploy deployment","quickLaunchBody":"Get started with AWS CodeDeploy by creating your first deployment application.","quickLaunchButtonLabel":"Create application","howSectionHeader":"How it works","benefitsSectionHeader":"Benefits and features","benefitOneTitle":"Automated deployments","benefitOneDescription":"AWS CodeDeploy fully automates your software deployments, allowing you to deploy reliably and rapidly. You can consistently deploy your application across your development, test, and production environments whether deploying to Amazon EC2, AWS Lambda, or your on-premises servers.","benefitOneDescriptionUnspecific":"AWS CodeDeploy fully automates your software deployments, allowing you to deploy reliably and rapidly. You can consistently deploy your application across your development, test, and production environments.","benefitTwoTitle":"Minimize downtime","benefitTwoDescription":"AWS CodeDeploy helps maximize your application availability during the software deployment process. It introduces changes incrementally and tracks application health according to configurable rules. Software deployments can easily be stopped and rolled back if there are errors.","benefitThreeTitle":"Centralized control","benefitThreeDescription":"AWS CodeDeploy allows you to easily launch and track the status of your application deployments through the AWS Management Console or the AWS CLI. CodeDeploy gives you a detailed report allowing you to view when and to where each application revision was deployed. You can also create push notifications to receive live updates about your deployments.","benefitFourTitle":"Easy to adopt","benefitFourDescription":"AWS CodeDeploy is platform and language agnostic, works with any application, and provides the same experience whether you’re deploying to Amazon EC2 or AWS Lambda. You can easily reuse your existing setup code. CodeDeploy can also integrate with your existing software release process or continuous delivery toolchain.","relatedServicesSectionHeader":"Related services","relatedServiceOneTitle":"AWS CodeStar","relatedServiceOneDescription":"AWS CodeStar enables you to quickly develop, build, and deploy applications on AWS. AWS CodeStar provides a unified user interface, enabling you to easily manage your software development activities in one place.","relatedServiceTwoTitle":"AWS CodeBuild","relatedServiceTwoDescription":"AWS CodeBuild is a fully managed build service that compiles source code, runs tests, and produces software packages that are ready to deploy.","relatedServiceThreeTitle":"AWS CodePipeline","relatedServiceThreeDescription":"AWS CodePipeline is a continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. You can use CodePipeline to fully model and automate your software release processes.","pricingSectionHeader":"Pricing (US)","pricingItemOneKey":"For CodeDeploy on EC2/Lambda","pricingItemOneValue":"Free","pricingItemTwoKey":"For CodeDeploy On-Premises","pricingItemTwoValue":"$0.02 per instance update","pricingCallToAction":"Learn more","gettingStartedSectionHeader":"Getting started","gettingStartedResourceOne":"What is AWS CodeDeploy?","gettingStartedResourceTwo":"Getting started with AWS CodeDeploy?","moreResourcesSectionHeader":"More resources","moreResourcesResourceOne":"Documentation","moreResourcesResourceTwo":"FAQ","moreResourcesResourceThree":"Forum","moreResourcesResourceFour":"Contact us"},"codebuild":{"serviceCategory":"Developer Tools","serviceName":"AWS CodeBuild","oneSentenceSummary":"Build and test code with elastic scaling. Pay only for the build time you use.","shortServiceDescription":"AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy. With CodeBuild, you don’t need to provision, manage, and scale your own build servers. CodeBuild scales continuously and processes multiple builds concurrently, so your builds are not left waiting in a queue.","quickLaunchHeader":"Create AWS CodeBuild project","quickLaunchBody":"Get started with AWS CodeBuild by creating your first build project.","quickLaunchButtonLabel":"Create project","howSectionHeader":"How it works","benefitsSectionHeader":"Benefits and features","benefitOneTitle":"Fully managed build service","benefitOneDescription":"AWS CodeBuild scales up and down automatically to meet your build volume. It immediately processes each build you submit and can run separate builds concurrently, which means your builds are not left waiting in a queue.","benefitTwoTitle":"Elastic scaling","benefitTwoDescription":"With AWS CodeBuild, you are charged based on the number of minutes it takes to complete your build. This means you no longer have to worry about paying for idle build server capacity.","benefitThreeTitle":"Pay as you go","benefitThreeDescription":"You can bring your own build tools and programming runtimes to use with AWS CodeBuild by creating customized build environments in addition to the prepackaged build tools and runtimes supported by CodeBuild.","benefitFourTitle":"Extensible","benefitFourDescription":"AWS CodeBuild belongs to a family of AWS Code Services which you can use to create complete, automated software release workflows for continuous integration and delivery (CI/CD). You can also integrate CodeBuild into your existing CI/CD workflow.","relatedServicesSectionHeader":"Related services","relatedServiceOneTitle":"AWS CodePipeline","relatedServiceOneDescription":"AWS CodePipeline is a continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. You can use CodePipeline to fully model and automate your software release processes.","relatedServiceTwoTitle":"AWS CodeArtifact","relatedServiceTwoDescription":"AWS CodeArtifact is a fully managed artifact repository service that makes it easy for organizations of any size to securely store, publish, and share software packages used in their software development process.","relatedServiceThreeTitle":"Amazon CodeCatalyst","relatedServiceThreeDescription":"Amazon CodeCatalyst is a unified software development service that makes it easy for development teams to quickly build and deliver scalable applications on AWS, while adhering to organizational best practices.","pricingSectionHeader":"Pricing (US)","pricingBody":"AWS CodeBuild uses simple pay-as-you-go pricing. There are no upfront costs or minimum fees. You pay only for the resources you use. You are charged for compute resources based on the duration it takes for your build to execute. The per-minute rate depends on the selected compute type.","pricingCallToAction":"Learn more","gettingStartedSectionHeader":"Getting started","gettingStartedResourceOne":"What is AWS CodeBuild?","gettingStartedResourceTwo":"Getting started with AWS CodeBuild?","moreResourcesSectionHeader":"More resources","moreResourcesResourceOne":"Documentation","moreResourcesResourceTwo":"FAQ","moreResourcesResourceThree":"Forum","moreResourcesResourceFour":"Contact us","pricing":{"learnMore":"Learn more about AWS CodeBuild pricing (Opens in a new tab)"},"playground":{"footer":{"pageTwo":{"header":"Integrated experience","content":"Avoid having to set up, manage, or patch your own build servers."},"pageThree":{"header":"Auto scaling","content":"Scale capacity automatically so builds aren\'t waiting in queue to run."}},"header":{"previous":"Previous","pageOne":{"startBuild":"Start build","next":"Next: Integrated experience"},"pageTwo":{"next":"Next: Auto scaling"},"pageThree":{"next":"Next: Create project"}},"tabs":{"alert":{"header":"Welcome to AWS CodeBuild!","content":"Click \'Start build\' to trigger a simulated build process and explore CodeBuild\'s features at no cost. This is a risk-free environment for learning and experimenting with CodeBuild. Happy building!"},"source":{"tabHeader":"Source code"},"logs":{"tabHeader":"Logs"},"reports":{"tabHeader":"Reports"}}}}},"sharing":{"filter":{"label":{"currentAccount":"Your {{resourceType}}","allSharedAccounts":"Shared {{resourceType}}"}}},"connectInstructions":{"generic":{"connectionStepsHeader":"Connection steps","SSHLabel":"SSH","HTTPSLabel":"HTTPS","GitRemoteHttpsLabel":"HTTPS (GRC)","macOSLabel":"macOS","windowsLabel":"Windows","linuxLabel":"Linux","httpsStepOneTitle":"Step 1: Prerequisites","httpsStepOneInstruction":"You must use a Git client that supports Git version 1.7.9 or later to connect to an AWS CodeCommit repository. If you do not have a Git client, you can install one from Git downloads.","httpsStepOneCTA":"View Git downloads page","httpsStepOneInstruction2":"You must have an AWS CodeCommit managed policy attached to your IAM user, belong to a CodeStar project team, or have the equivalent permissions.","httpsStepOneCTA2":"Learn how to create and configure an IAM user for accessing AWS CodeCommit.","httpsStepOneCTA3":"Learn how to add team members to an AWS CodeStar Project.","httpsStepTwoTitle":"Step 2: Git credentials","httpsStepTwoInstruction":"Create Git credentials for your IAM user, if you do not already have them. Download the credentials and save them in a secure location.","httpsStepTwoCTA":"Generate Git Credentials","httpsStepThreeTitle":"Step 3: Clone the repository","httpsStepThreeInstruction":"Clone your repository to your local computer and start working on code. Run the following command:","stepAdditionalTitle":"Additional details","stepAdditionalBody":"You can find more detailed instructions in the documentation.","stepAdditionalCTA":"View documentation","sshStepOneTitle":"Step 1: Prerequisites","sshStepOneInstruction":"You must use a Git client that supports Git version 1.7.9 or later to connect to an AWS CodeCommit repository. If you do not have a Git client, you can install one from Git downloads.","sshStepOneCTA":"View Git downloads page","sshStepOneInstruction2":"You must have an AWS CodeCommit managed policy attached to your IAM user, belong to a CodeStar project team, or have the equivalent permissions.","sshStepOneCTA2":"Learn how to create and configure an IAM user for accessing AWS CodeCommit.","sshStepOneCTA3":"Learn how to add team members to an AWS CodeStar Project.","sshStepBashInstruction":"You must install a Bash emulator if you don’t have one already installed.","sshStepOneInstruction3":"You must have an SSH public-private key pair. Open the Bash emulator and create a public-private key pair using ssh-keygen.","sshStepOneCTA4":"Learn how to generate public-private key pair","sshStepTwoTitle":"Step 2: Register SSH Public Key","sshStepTwoInstruction":"Upload your SSH public key to your IAM user.","sshStepTwoCTA":"Learn how to upload your SSH public key","sshStepTwoInstruction2":"Once you have uploaded your SSH public key, copy the SSH Key ID. You will need it in the next step.","sshStepThreeTitle":"Step 3: Edit Local SSH Configuration","sshStepThreeInstruction":"Edit your SSH configuration file named config in your local ~/.ssh directory. Add the following lines to the file, where the value for User is the SSH Key ID you copied in Step 2.","sshStepThreeInstruction2":"Once you have saved the file, make sure it has the right permissions by running the following command in the ~/.ssh directory.","sshStepFourTitle":"Step 4: Clone the repository","sshStepFourInstruction":"Clone your repository to your local computer and start working on code. Run the following command:","GitRemoteHttpsIntro":"HTTPS (GRC) is the protocol to use with git-remote-codecommit (GRC). This utility provides a simple method for pushing and pulling code from CodeCommit repositories by extending Git. It is the recommended method for supporting connections made with federated access, identity providers, and temporary credentials.","GitRemoteHttpsStepOneTitle":"Step 1: Prerequisites","GitRemoteHttpsStepOneInstruction":"We recommend that you use the latest versions of Git and other prerequisite software. You can find information about minimum required versions of prerequisite software.","GitRemoteHttpsStepOneInstructionCallToAction":"Prerequisite software","GitRemoteHttpsStepOneInstructionPointOne":"You must install Python. To download and install the latest version of Python.","GitRemoteHttpsStepOneInstructionPointOneCallToAction":"View the Python website","GitRemoteHttpsStepOneInstructionPointTwo":"You must install and configure a Git client.","GitRemoteHttpsStepOneInstructionPointTwoCallToAction":"View Git downloads page","GitRemoteHttpsStepOneInstructionPointThree":"You must have permissions to the CodeCommit repository.","GitRemoteHttpsStepOneInstructionPointThreeCallToActionOne":"Learn how to create and configure an IAM user for accessing AWS CodeCommit","GitRemoteHttpsStepOneInstructionPointThreeCallToActionTwo":"Learn how to configure connections for users with rotating credentials","GitRemoteHttpsStepOneInstructionPointThreeCallToActionThree":"Learn how to add team members to an AWS CodeStar Project","GitRemoteHttpsStepOneInstructionPointFour":"You must install and configure the AWS CLI with a profile.","GitRemoteHttpsStepOneInstructionPointFourCallToActionOne":"IAM User","GitRemoteHttpsStepOneInstructionPointFourCallToActionTwo":"Assuming a role","GitRemoteHttpsStepOneInstructionPointFourCallToActionThree":"Web identity federation","GitRemoteHttpsStepTwoTitle":"Step 2: Install git-remote-codecommit","GitRemoteHttpsStepTwoInstruction":"At a terminal or command line, run the following command to install git-remote-codecommit:","GitRemoteHttpsStepThreeTitle":"Step 3: Clone the repository","GitRemoteHttpsStepThreeInstruction":"Clone your repository to your local computer and start working on code. Run the following command:","GitRemoteHttpsStepFourTitle":"Additional details","GitRemoteHttpsStepFourInstruction":"You can find more detailed instructions in the documentation.","GitRemoteHttpsStepFourInstructionCallToAction":"View documentation","GitRemoteHttps":{"isFederatedUser":"You are signed in using federated access or temporary credentials. The recommended connection method for these sign-in types is to use git-remote-codecommit, as documented below. To configure a connection using SSH or Git credentials over HTTPS, sign in as an IAM user."},"isFederatedUser":"You are signed in using federated access or temporary credentials. The only supported connection method for these sign-in types is to use the credential manager included with the AWS CLI, as documented below. To configure a connection using SSH or Git credentials over HTTPS, sign in as an IAM user.","isRootUser":"You are signed in using a root account. You cannot configure SSH connections for a root account, and HTTPS connections for a root account are not recommended. Consider signing in as an IAM user and then setting up your connection."},"rootOrFederated":{"credentialHelper":{"title":"Step 2: Set up the AWS CLI Credential Helper","content":"Set up your connection to AWS CodeCommit repositories using the credential helper included in the AWS CLI. This is the only connection method for AWS CodeCommit repositories that does not require an IAM user, so it is the only method that supports root access, federated access, and temporary credentials."}}},"optout-flash":{"header":"Introducing to the new AWS Developer tools experience!","body2":{"or":"{{link1}} or {{link2}}.","link1":"Return to the old experience","link2":"permanently dismiss this message"}},"logViewer":{"noLogs":"No logs available"},"helpPanel":{"content":{"unavailable":"Content unavailable","failed":"Error: Content could not be loaded.","notFound":"Error: No content found."}},"poller":{"controls":{"refresh":"Refresh","loading":"Loading"}},"collectionPreferences":{"title":"Preferences","confirmLabel":"Confirm","cancelLabel":"Cancel","wrapLinesPreference":{"label":"Wrap lines","description":"Wrap lines within cells"},"visibleContentPreference":{"title":"Select visible content","options":{"columns":"Columns"}},"options":{"columns":"Columns"},"pageSizePreference":{"title":"Select page size"}},"emptyState":{"empty":{"title":"No {{resource}}","subtitle":"No {{resources}} to display."},"noMatch":{"title":"No matches,","subtitle":"We can\'t find a match.","action":"Clear filter"}},"cloudFormationStatusIndicator":{"CREATE_IN_PROGRESS":"Create in progress","CREATE_FAILED":"Create failed","CREATE_COMPLETE":"Create complete","ROLLBACK_IN_PROGRESS":"Rollback in progress","ROLLBACK_FAILED":"Rollback failed","ROLLBACK_COMPLETE":"Rollback complete","DELETE_IN_PROGRESS":"Delete in progress","DELETE_FAILED":"Delete failed","DELETE_COMPLETE":"Delete complete","UPDATE_IN_PROGRESS":"Update in progress","UPDATE_COMPLETE_CLEANUP_IN_PROGRESS":"Update complete (cleanup in progress)","UPDATE_COMPLETE":"Update complete","UPDATE_FAILED":"Update failed","UPDATE_ROLLBACK_IN_PROGRESS":"Update rollback in progress","UPDATE_ROLLBACK_FAILED":"Update rollback failed","UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS":"Update rollback complete (cleanup in progress)","UPDATE_ROLLBACK_COMPLETE":"Update rollback complete","REVIEW_IN_PROGRESS":"Review in progress","IMPORT_IN_PROGRESS":"Import in progress","IMPORT_COMPLETE":"Import complete","IMPORT_ROLLBACK_IN_PROGRESS":"Import rollback in progress","IMPORT_ROLLBACK_FAILED":"Import rollback failed","IMPORT_ROLLBACK_COMPLETE":"Import rollback complete"},"textEditor":{"loadingState":"Loading code editor","errorState":"An error occurred when loading the code editor. We can\'t display the code","editorGroupAriaLabel":"Text editor","statusBarGroupAriaLabel":"Status bar","errorsTab":"Errors","warningsTab":"Warnings","preferencesModalWrapLines":"Wrap lines","preferencesModalTheme":"Theme","preferencesModalLightThemes":"Light themes","preferencesModalDarkThemes":"Dark themes"},"appLayout":{"notifications":"Notifications","navigation":"Secondary","navigationToggle":"Open navigation","navigationClose":"Close navigation","toolsToggle":"Open information panel","toolsClose":"Close information panel","tools":"Help panel"},"clipboard":{"copyButtonAriaLabel":"Copy ARN","copyErrorText":"ARN failed to copy","copySuccessText":"ARN copied","nonArn":{"copyButtonAriaLabel":"Copy Content","copyErrorText":"Content failed to copy","copySuccessText":"Content copied"}}}')}}},48171:(e,t,o)=>{var i={"./de/index":[26186,6186],"./en/index":[10870],"./es/index":[61187,1187],"./fr/index":[66379,6379],"./id/index":[94595,6976],"./it/index":[23616,3616],"./ja/index":[34868,4868],"./ko/index":[1425,1425],"./pt_BR/index":[75372,5372],"./zh_CN/index":[70913,913],"./zh_TW/index":[10817,817]};function a(e){if(!o.o(i,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=i[e],a=t[0];return Promise.all(t.slice(1).map(o.e)).then((()=>o(a)))}a.keys=()=>Object.keys(i),a.id=48171,e.exports=a},11976:()=>{}},c={};function l(e){var t=c[e];if(void 0!==t)return t.exports;var o=c[e]={id:e,loaded:!1,exports:{}};return s[e].call(o.exports,o,o.exports,l),o.loaded=!0,o.exports}l.m=s,l.amdD=function(){throw new Error("define cannot be used indirect")},e=[],l.O=(t,o,i,a)=>{if(!o){var n=1/0;for(d=0;d<e.length;d++){for(var[o,i,a]=e[d],r=!0,s=0;s<o.length;s++)(!1&a||n>=a)&&Object.keys(l.O).every((e=>l.O[e](o[s])))?o.splice(s--,1):(r=!1,a<n&&(n=a));if(r){e.splice(d--,1);var c=i();void 0!==c&&(t=c)}}return t}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[o,i,a]},l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},o=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,l.t=function(e,i){if(1&i&&(e=this(e)),8&i)return e;if("object"==typeof e&&e){if(4&i&&e.__esModule)return e;if(16&i&&"function"==typeof e.then)return e}var a=Object.create(null);l.r(a);var n={};t=t||[null,o({}),o([]),o(o)];for(var r=2&i&&e;"object"==typeof r&&!~t.indexOf(r);r=o(r))Object.getOwnPropertyNames(r).forEach((t=>n[t]=()=>e[t]));return n.default=()=>e,l.d(a,n),a},l.d=(e,t)=>{for(var o in t)l.o(t,o)&&!l.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},l.f={},l.e=e=>Promise.all(Object.keys(l.f).reduce(((t,o)=>(l.f[o](e,t),t)),[])),l.u=e=>(4433===e?"codecommit.Differences":e)+".js",l.miniCssF=e=>(({3827:"vendors.awsui",4433:"codecommit.Differences",8096:"vendors",8792:"main"}[e]||e)+".css"),l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i={},a="@amzn/code-build-console-assets:",l.l=(e,t,o,n)=>{if(i[e])i[e].push(t);else{var r,s;if(void 0!==o)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var u=c[d];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==a+o){r=u;break}}r||(s=!0,(r=document.createElement("script")).charset="utf-8",r.timeout=120,l.nc&&r.setAttribute("nonce",l.nc),r.setAttribute("data-webpack",a+o),r.src=e),i[e]=[t];var p=(t,o)=>{r.onerror=r.onload=null,clearTimeout(m);var a=i[e];if(delete i[e],r.parentNode&&r.parentNode.removeChild(r),a&&a.forEach((e=>e(o))),t)return t(o)},m=setTimeout(p.bind(null,void 0,{type:"timeout",target:r}),12e4);r.onerror=p.bind(null,r.onerror),r.onload=p.bind(null,r.onload),s&&document.head.appendChild(r)}},l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),l.j=8792,l.p="",n=e=>new Promise(((t,o)=>{var i=l.miniCssF(e),a=l.p+i;if(((e,t)=>{for(var o=document.getElementsByTagName("link"),i=0;i<o.length;i++){var a=(r=o[i]).getAttribute("data-href")||r.getAttribute("href");if("stylesheet"===r.rel&&(a===e||a===t))return r}var n=document.getElementsByTagName("style");for(i=0;i<n.length;i++){var r;if((a=(r=n[i]).getAttribute("data-href"))===e||a===t)return r}})(i,a))return t();((e,t,o,i)=>{var a=document.createElement("link");a.rel="stylesheet",a.type="text/css",a.onerror=a.onload=n=>{if(a.onerror=a.onload=null,"load"===n.type)o();else{var r=n&&("load"===n.type?"missing":n.type),s=n&&n.target&&n.target.href||t,c=new Error("Loading CSS chunk "+e+" failed.\n("+s+")");c.code="CSS_CHUNK_LOAD_FAILED",c.type=r,c.request=s,a.parentNode.removeChild(a),i(c)}},a.href=t,document.head.appendChild(a)})(e,a,t,o)})),r={8792:0},l.f.miniCss=(e,t)=>{r[e]?t.push(r[e]):0!==r[e]&&{102:1,143:1,160:1,271:1,337:1,398:1,534:1,958:1,1188:1,1281:1,1287:1,1354:1,1375:1,1520:1,1553:1,1623:1,1834:1,2017:1,2024:1,2072:1,2081:1,2158:1,2246:1,2610:1,2637:1,2710:1,2711:1,2999:1,3594:1,3669:1,3688:1,3955:1,4041:1,4072:1,4133:1,4185:1,4265:1,4427:1,4433:1,4492:1,4557:1,4659:1,5009:1,5050:1,5151:1,5593:1,5681:1,5722:1,5839:1,5865:1,5897:1,5995:1,6055:1,6065:1,6213:1,6220:1,6274:1,6864:1,7126:1,7335:1,7653:1,7717:1,7751:1,7839:1,7940:1,7958:1,8075:1,8080:1,8230:1,8412:1,8458:1,8588:1,8707:1,8728:1,8811:1,8968:1,9012:1,9039:1,9613:1}[e]&&t.push(r[e]=n(e).then((()=>{r[e]=0}),(t=>{throw delete r[e],t})))},(()=>{var e={8792:0};l.f.j=(t,o)=>{var i=l.o(e,t)?e[t]:void 0;if(0!==i)if(i)o.push(i[2]);else{var a=new Promise(((o,a)=>i=e[t]=[o,a]));o.push(i[2]=a);var n=l.p+l.u(t),r=new Error;l.l(n,(o=>{if(l.o(e,t)&&(0!==(i=e[t])&&(e[t]=void 0),i)){var a=o&&("load"===o.type?"missing":o.type),n=o&&o.target&&o.target.src;r.message="Loading chunk "+t+" failed.\n("+a+": "+n+")",r.name="ChunkLoadError",r.type=a,r.request=n,i[1](r)}}),"chunk-"+t,t)}},l.O.j=t=>0===e[t];var t=(t,o)=>{var i,a,[n,r,s]=o,c=0;if(n.some((t=>0!==e[t]))){for(i in r)l.o(r,i)&&(l.m[i]=r[i]);if(s)var d=s(l)}for(t&&t(o);c<n.length;c++)a=n[c],l.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return l.O(d)},o=self.webpackChunk_amzn_code_build_console_assets=self.webpackChunk_amzn_code_build_console_assets||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))})();var d=l.O(void 0,[8096,3827,774],(()=>l(89327)));d=l.O(d)})();
//# sourceMappingURL=main.js.map